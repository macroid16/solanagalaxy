"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["node_modules_trezor_connect-web_lib_index_js"],{

/***/ "./node_modules/@trezor/connect-web/lib/connectSettings.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@trezor/connect-web/lib/connectSettings.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.parseConnectSettings = exports.getEnv = void 0;\nconst connectSettings_1 = __webpack_require__(/*! @trezor/connect/lib/data/connectSettings */ \"./node_modules/@trezor/connect/lib/data/connectSettings.js\");\nconst getEnv = () => {\n    var _a;\n    if (typeof chrome !== 'undefined' && typeof ((_a = chrome.runtime) === null || _a === void 0 ? void 0 : _a.onConnect) !== 'undefined') {\n        return 'webextension';\n    }\n    if (typeof navigator !== 'undefined') {\n        if (typeof navigator.product === 'string' &&\n            navigator.product.toLowerCase() === 'reactnative') {\n            return 'react-native';\n        }\n        const userAgent = navigator.userAgent.toLowerCase();\n        if (userAgent.indexOf(' electron/') > -1) {\n            return 'electron';\n        }\n    }\n    return 'web';\n};\nexports.getEnv = getEnv;\nconst processQueryString = (url, keys) => {\n    const searchParams = new URLSearchParams(url);\n    const result = {};\n    const paramArray = Array.from(searchParams.entries());\n    paramArray.forEach(([key, value]) => {\n        if (keys.includes(key)) {\n            result[key] = decodeURIComponent(value);\n        }\n    });\n    return result;\n};\nconst parseConnectSettings = (input = {}) => {\n    var _a;\n    const settings = Object.assign({ popup: true }, input);\n    let globalSrc;\n    if (typeof window !== 'undefined') {\n        globalSrc = window.__TREZOR_CONNECT_SRC;\n    }\n    else if (typeof __webpack_require__.g !== 'undefined') {\n        globalSrc = __webpack_require__.g.__TREZOR_CONNECT_SRC;\n    }\n    if (typeof globalSrc === 'string') {\n        settings.connectSrc = globalSrc;\n        settings.debug = true;\n    }\n    if (typeof window !== 'undefined' && typeof ((_a = window.location) === null || _a === void 0 ? void 0 : _a.search) === 'string') {\n        const query = processQueryString(window.location.search, ['trezor-connect-src']);\n        if (query['trezor-connect-src']) {\n            settings.debug = true;\n            settings.connectSrc = query['trezor-connect-src'];\n        }\n    }\n    if (typeof input.env !== 'string') {\n        settings.env = (0, exports.getEnv)();\n    }\n    return (0, connectSettings_1.parseConnectSettings)(settings);\n};\nexports.parseConnectSettings = parseConnectSettings;\n//# sourceMappingURL=connectSettings.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci9jb25uZWN0LXdlYi9saWIvY29ubmVjdFNldHRpbmdzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDRCQUE0QixHQUFHLGNBQWM7QUFDN0MsMEJBQTBCLG1CQUFPLENBQUMsNEdBQTBDO0FBQzVFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjO0FBQ2Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0Esd0NBQXdDO0FBQ3hDO0FBQ0EscUNBQXFDLGFBQWE7QUFDbEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IscUJBQU07QUFDMUIsb0JBQW9CLHFCQUFNO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEI7QUFDNUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0B0cmV6b3IvY29ubmVjdC13ZWIvbGliL2Nvbm5lY3RTZXR0aW5ncy5qcz9kZmNhIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5wYXJzZUNvbm5lY3RTZXR0aW5ncyA9IGV4cG9ydHMuZ2V0RW52ID0gdm9pZCAwO1xuY29uc3QgY29ubmVjdFNldHRpbmdzXzEgPSByZXF1aXJlKFwiQHRyZXpvci9jb25uZWN0L2xpYi9kYXRhL2Nvbm5lY3RTZXR0aW5nc1wiKTtcbmNvbnN0IGdldEVudiA9ICgpID0+IHtcbiAgICB2YXIgX2E7XG4gICAgaWYgKHR5cGVvZiBjaHJvbWUgIT09ICd1bmRlZmluZWQnICYmIHR5cGVvZiAoKF9hID0gY2hyb21lLnJ1bnRpbWUpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5vbkNvbm5lY3QpICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgICByZXR1cm4gJ3dlYmV4dGVuc2lvbic7XG4gICAgfVxuICAgIGlmICh0eXBlb2YgbmF2aWdhdG9yICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgICBpZiAodHlwZW9mIG5hdmlnYXRvci5wcm9kdWN0ID09PSAnc3RyaW5nJyAmJlxuICAgICAgICAgICAgbmF2aWdhdG9yLnByb2R1Y3QudG9Mb3dlckNhc2UoKSA9PT0gJ3JlYWN0bmF0aXZlJykge1xuICAgICAgICAgICAgcmV0dXJuICdyZWFjdC1uYXRpdmUnO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHVzZXJBZ2VudCA9IG5hdmlnYXRvci51c2VyQWdlbnQudG9Mb3dlckNhc2UoKTtcbiAgICAgICAgaWYgKHVzZXJBZ2VudC5pbmRleE9mKCcgZWxlY3Ryb24vJykgPiAtMSkge1xuICAgICAgICAgICAgcmV0dXJuICdlbGVjdHJvbic7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuICd3ZWInO1xufTtcbmV4cG9ydHMuZ2V0RW52ID0gZ2V0RW52O1xuY29uc3QgcHJvY2Vzc1F1ZXJ5U3RyaW5nID0gKHVybCwga2V5cykgPT4ge1xuICAgIGNvbnN0IHNlYXJjaFBhcmFtcyA9IG5ldyBVUkxTZWFyY2hQYXJhbXModXJsKTtcbiAgICBjb25zdCByZXN1bHQgPSB7fTtcbiAgICBjb25zdCBwYXJhbUFycmF5ID0gQXJyYXkuZnJvbShzZWFyY2hQYXJhbXMuZW50cmllcygpKTtcbiAgICBwYXJhbUFycmF5LmZvckVhY2goKFtrZXksIHZhbHVlXSkgPT4ge1xuICAgICAgICBpZiAoa2V5cy5pbmNsdWRlcyhrZXkpKSB7XG4gICAgICAgICAgICByZXN1bHRba2V5XSA9IGRlY29kZVVSSUNvbXBvbmVudCh2YWx1ZSk7XG4gICAgICAgIH1cbiAgICB9KTtcbiAgICByZXR1cm4gcmVzdWx0O1xufTtcbmNvbnN0IHBhcnNlQ29ubmVjdFNldHRpbmdzID0gKGlucHV0ID0ge30pID0+IHtcbiAgICB2YXIgX2E7XG4gICAgY29uc3Qgc2V0dGluZ3MgPSBPYmplY3QuYXNzaWduKHsgcG9wdXA6IHRydWUgfSwgaW5wdXQpO1xuICAgIGxldCBnbG9iYWxTcmM7XG4gICAgaWYgKHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIGdsb2JhbFNyYyA9IHdpbmRvdy5fX1RSRVpPUl9DT05ORUNUX1NSQztcbiAgICB9XG4gICAgZWxzZSBpZiAodHlwZW9mIGdsb2JhbCAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgZ2xvYmFsU3JjID0gZ2xvYmFsLl9fVFJFWk9SX0NPTk5FQ1RfU1JDO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIGdsb2JhbFNyYyA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgc2V0dGluZ3MuY29ubmVjdFNyYyA9IGdsb2JhbFNyYztcbiAgICAgICAgc2V0dGluZ3MuZGVidWcgPSB0cnVlO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgJiYgdHlwZW9mICgoX2EgPSB3aW5kb3cubG9jYXRpb24pID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5zZWFyY2gpID09PSAnc3RyaW5nJykge1xuICAgICAgICBjb25zdCBxdWVyeSA9IHByb2Nlc3NRdWVyeVN0cmluZyh3aW5kb3cubG9jYXRpb24uc2VhcmNoLCBbJ3RyZXpvci1jb25uZWN0LXNyYyddKTtcbiAgICAgICAgaWYgKHF1ZXJ5Wyd0cmV6b3ItY29ubmVjdC1zcmMnXSkge1xuICAgICAgICAgICAgc2V0dGluZ3MuZGVidWcgPSB0cnVlO1xuICAgICAgICAgICAgc2V0dGluZ3MuY29ubmVjdFNyYyA9IHF1ZXJ5Wyd0cmV6b3ItY29ubmVjdC1zcmMnXTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBpZiAodHlwZW9mIGlucHV0LmVudiAhPT0gJ3N0cmluZycpIHtcbiAgICAgICAgc2V0dGluZ3MuZW52ID0gKDAsIGV4cG9ydHMuZ2V0RW52KSgpO1xuICAgIH1cbiAgICByZXR1cm4gKDAsIGNvbm5lY3RTZXR0aW5nc18xLnBhcnNlQ29ubmVjdFNldHRpbmdzKShzZXR0aW5ncyk7XG59O1xuZXhwb3J0cy5wYXJzZUNvbm5lY3RTZXR0aW5ncyA9IHBhcnNlQ29ubmVjdFNldHRpbmdzO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y29ubmVjdFNldHRpbmdzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@trezor/connect-web/lib/connectSettings.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/connect-web/lib/iframe/index.js":
/*!**************************************************************!*\
  !*** ./node_modules/@trezor/connect-web/lib/iframe/index.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.initIframeLogger = exports.clearTimeout = exports.postMessage = exports.init = exports.dispose = exports.messagePromises = exports.error = exports.timeout = exports.initPromise = exports.origin = exports.instance = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.mjs\");\nconst createDeferred_1 = __webpack_require__(/*! @trezor/utils/lib/createDeferred */ \"./node_modules/@trezor/utils/lib/createDeferred.js\");\nconst ERRORS = tslib_1.__importStar(__webpack_require__(/*! @trezor/connect/lib/constants/errors */ \"./node_modules/@trezor/connect/lib/constants/errors.js\"));\nconst events_1 = __webpack_require__(/*! @trezor/connect/lib/events */ \"./node_modules/@trezor/connect/lib/events/index.js\");\nconst urlUtils_1 = __webpack_require__(/*! @trezor/connect/lib/utils/urlUtils */ \"./node_modules/@trezor/connect/lib/utils/urlUtils.js\");\nconst debug_1 = __webpack_require__(/*! @trezor/connect/lib/utils/debug */ \"./node_modules/@trezor/connect/lib/utils/debug.js\");\nconst inlineStyles_1 = tslib_1.__importDefault(__webpack_require__(/*! ./inlineStyles */ \"./node_modules/@trezor/connect-web/lib/iframe/inlineStyles.js\"));\nexports.initPromise = (0, createDeferred_1.createDeferred)();\nexports.timeout = 0;\nlet _messageID = 0;\nexports.messagePromises = {};\nconst dispose = () => {\n    if (exports.instance && exports.instance.parentNode) {\n        try {\n            exports.instance.parentNode.removeChild(exports.instance);\n        }\n        catch (e) {\n        }\n    }\n    exports.instance = null;\n    exports.timeout = 0;\n};\nexports.dispose = dispose;\nconst handleIframeBlocked = () => {\n    window.clearTimeout(exports.timeout);\n    exports.error = ERRORS.TypedError('Init_IframeBlocked');\n    (0, exports.dispose)();\n    exports.initPromise.reject(exports.error);\n};\nconst injectStyleSheet = () => {\n    if (!exports.instance) {\n        throw ERRORS.TypedError('Init_IframeBlocked');\n    }\n    const doc = exports.instance.ownerDocument;\n    const head = doc.head || doc.getElementsByTagName('head')[0];\n    const style = document.createElement('style');\n    style.setAttribute('type', 'text/css');\n    style.setAttribute('id', 'TrezorConnectStylesheet');\n    if (style.styleSheet) {\n        style.styleSheet.cssText = inlineStyles_1.default;\n        head.appendChild(style);\n    }\n    else {\n        style.appendChild(document.createTextNode(inlineStyles_1.default));\n        head.append(style);\n    }\n};\nconst init = async (settings) => {\n    exports.initPromise = (0, createDeferred_1.createDeferred)();\n    const existedFrame = document.getElementById('trezorconnect');\n    if (existedFrame) {\n        exports.instance = existedFrame;\n    }\n    else {\n        exports.instance = document.createElement('iframe');\n        exports.instance.frameBorder = '0';\n        exports.instance.width = '0px';\n        exports.instance.height = '0px';\n        exports.instance.style.position = 'absolute';\n        exports.instance.style.display = 'none';\n        exports.instance.style.border = '0px';\n        exports.instance.style.width = '0px';\n        exports.instance.style.height = '0px';\n        exports.instance.id = 'trezorconnect';\n    }\n    let src;\n    if (settings.env === 'web') {\n        const manifestString = settings.manifest ? JSON.stringify(settings.manifest) : 'undefined';\n        const manifest = `version=${settings.version}&manifest=${encodeURIComponent(btoa(JSON.stringify(manifestString)))}`;\n        src = `${settings.iframeSrc}?${manifest}`;\n    }\n    else {\n        src = settings.iframeSrc;\n    }\n    exports.instance.setAttribute('src', src);\n    if (settings.webusb) {\n        console.warn('webusb option is deprecated. use `transports: [\"WebUsbTransport\"] instead`');\n    }\n    if (navigator.usb) {\n        exports.instance.setAttribute('allow', 'usb');\n    }\n    exports.origin = (0, urlUtils_1.getOrigin)(exports.instance.src);\n    exports.timeout = window.setTimeout(() => {\n        exports.initPromise.reject(ERRORS.TypedError('Init_IframeTimeout'));\n    }, 10000);\n    const onLoad = () => {\n        var _a, _b;\n        if (!exports.instance) {\n            exports.initPromise.reject(ERRORS.TypedError('Init_IframeBlocked'));\n            return;\n        }\n        try {\n            const iframeOrigin = (_a = exports.instance.contentWindow) === null || _a === void 0 ? void 0 : _a.location.origin;\n            if (!iframeOrigin || iframeOrigin === 'null') {\n                handleIframeBlocked();\n                return;\n            }\n        }\n        catch (e) {\n        }\n        let extension;\n        if (typeof chrome !== 'undefined' &&\n            chrome.runtime &&\n            typeof chrome.runtime.onConnect !== 'undefined') {\n            chrome.runtime.onConnect.addListener(() => { });\n            extension = chrome.runtime.id;\n        }\n        (_b = exports.instance.contentWindow) === null || _b === void 0 ? void 0 : _b.postMessage({\n            type: events_1.IFRAME.INIT,\n            payload: {\n                settings,\n                extension,\n            },\n        }, exports.origin);\n        exports.instance.onload = null;\n    };\n    if (exports.instance.attachEvent) {\n        exports.instance.attachEvent('onload', onLoad);\n    }\n    else {\n        exports.instance.onload = onLoad;\n    }\n    if (document.body) {\n        document.body.appendChild(exports.instance);\n        injectStyleSheet();\n    }\n    try {\n        await exports.initPromise.promise;\n    }\n    catch (e) {\n        if (exports.instance) {\n            if (exports.instance.parentNode) {\n                exports.instance.parentNode.removeChild(exports.instance);\n            }\n            exports.instance = null;\n        }\n        throw e;\n    }\n    finally {\n        window.clearTimeout(exports.timeout);\n        exports.timeout = 0;\n    }\n};\nexports.init = init;\nconst postMessage = (message, usePromise = true) => {\n    var _a, _b;\n    if (!exports.instance) {\n        throw ERRORS.TypedError('Init_IframeBlocked');\n    }\n    if (usePromise) {\n        _messageID++;\n        message.id = _messageID;\n        exports.messagePromises[_messageID] = (0, createDeferred_1.createDeferred)();\n        const { promise } = exports.messagePromises[_messageID];\n        (_a = exports.instance.contentWindow) === null || _a === void 0 ? void 0 : _a.postMessage(message, exports.origin);\n        return promise;\n    }\n    (_b = exports.instance.contentWindow) === null || _b === void 0 ? void 0 : _b.postMessage(message, exports.origin);\n    return null;\n};\nexports.postMessage = postMessage;\nconst clearTimeout = () => {\n    window.clearTimeout(exports.timeout);\n};\nexports.clearTimeout = clearTimeout;\nconst initIframeLogger = () => {\n    const logWriterFactory = () => ({\n        add: (message) => {\n            (0, exports.postMessage)({\n                event: events_1.UI_EVENT,\n                type: events_1.IFRAME.LOG,\n                payload: message,\n            });\n        },\n    });\n    (0, debug_1.setLogWriter)(logWriterFactory);\n};\nexports.initIframeLogger = initIframeLogger;\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@trezor/connect-web/lib/iframe/index.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/connect-web/lib/iframe/inlineStyles.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@trezor/connect-web/lib/iframe/inlineStyles.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst css = '.trezorconnect-container{position:fixed!important;display:-webkit-box!important;display:-webkit-flex!important;display:-ms-flexbox!important;display:flex!important;-webkit-box-orient:vertical!important;-webkit-box-direction:normal!important;-webkit-flex-direction:column!important;-ms-flex-direction:column!important;flex-direction:column!important;-webkit-box-align:center!important;-webkit-align-items:center!important;-ms-flex-align:center!important;align-items:center!important;z-index:10000!important;width:100%!important;height:100%!important;top:0!important;left:0!important;background:rgba(0,0,0,.35)!important;overflow:auto!important;padding:20px!important;margin:0!important}.trezorconnect-container .trezorconnect-window{position:relative!important;display:block!important;width:370px!important;font-family:-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,\"Helvetica Neue\",Arial,sans-serif!important;margin:auto!important;border-radius:3px!important;background-color:#fff!important;text-align:center!important;overflow:hidden!important}.trezorconnect-container .trezorconnect-window .trezorconnect-head{text-align:left;padding:12px 24px!important;display:-webkit-box!important;display:-webkit-flex!important;display:-ms-flexbox!important;display:flex!important;-webkit-box-align:center!important;-webkit-align-items:center!important;-ms-flex-align:center!important;align-items:center!important}.trezorconnect-container .trezorconnect-window .trezorconnect-head .trezorconnect-logo{-webkit-box-flex:1;-webkit-flex:1;-ms-flex:1;flex:1}.trezorconnect-container .trezorconnect-window .trezorconnect-head .trezorconnect-close{cursor:pointer!important;height:24px!important}.trezorconnect-container .trezorconnect-window .trezorconnect-head .trezorconnect-close svg{fill:#757575;-webkit-transition:fill .3s ease-in-out!important;transition:fill .3s ease-in-out!important}.trezorconnect-container .trezorconnect-window .trezorconnect-head .trezorconnect-close:hover svg{fill:#494949}.trezorconnect-container .trezorconnect-window .trezorconnect-body{padding:24px 24px 32px!important;background:#FBFBFB!important;border-top:1px solid #EBEBEB}.trezorconnect-container .trezorconnect-window .trezorconnect-body h3{color:#505050!important;font-size:16px!important;font-weight:500!important}.trezorconnect-container .trezorconnect-window .trezorconnect-body p{margin:8px 0 24px!important;font-weight:400!important;color:#A9A9A9!important;font-size:12px!important}.trezorconnect-container .trezorconnect-window .trezorconnect-body button{width:100%!important;padding:12px 24px!important;margin:0!important;border-radius:3px!important;font-size:14px!important;font-weight:300!important;cursor:pointer!important;background:#01B757!important;color:#fff!important;border:0!important;-webkit-transition:background-color .3s ease-in-out!important;transition:background-color .3s ease-in-out!important}.trezorconnect-container .trezorconnect-window .trezorconnect-body button:hover{background-color:#00AB51!important}.trezorconnect-container .trezorconnect-window .trezorconnect-body button:active{background-color:#009546!important}/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImlucHV0IiwiJHN0ZGluIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQWNBLHlCQUNJLFNBQUEsZ0JBQ0EsUUFBQSxzQkFDQSxRQUFBLHVCQUNBLFFBQUEsc0JBRUEsUUFBQSxlQUNBLG1CQUFBLG1CQUNBLHNCQUFBLGlCQUNBLHVCQUFBLGlCQUNBLG1CQUFBLGlCQUNBLGVBQUEsaUJBRUEsa0JBQUEsaUJBQ0Esb0JBQUEsaUJBQ0EsZUFBQSxpQkNmTSxZQUFhLGlCREFyQixRQUFTLGdCQWtCSCxNQUFBLGVBQ0EsT0FBQSxlQUNBLElBQUEsWUFDQSxLQUFBLFlBQ0EsV0FBQSwwQkFDQSxTQUFBLGVBQ0EsUUFBQSxlQUNBLE9BQUEsWUNkUiwrQ0RYRSxTQUFVLG1CQTZCQSxRQUFBLGdCQUNBLE1BQUEsZ0JBQ0EsWUFBQSxjQUFBLG1CQUFBLFdBQUEsT0FBQSxpQkFBQSxNQUFBLHFCQUNBLE9BQUEsZUNmVixjQUFlLGNEakJmLGlCQWlCRSxlQWtCWSxXQUFBLGlCQ2ZkLFNBQVUsaUJEbUJJLG1FQUNBLFdBQUEsS0NoQmQsUUFBUyxLQUFLLGVEeEJkLFFBQVMsc0JBMENTLFFBQUEsdUJBQ0EsUUFBQSxzQkNmbEIsUUFBUyxlRGlCSyxrQkE1QlosaUJBOEJvQixvQkFBQSxpQkNoQmxCLGVBQWdCLGlCRC9CWixZQWlCTixpQkFzQ1EsdUZBQ0EsaUJBQUEsRUNwQlYsYUFBYyxFRHBDVixTQUFVLEVBMkRBLEtBQUEsRUFFQSx3RkNwQmQsT0FBUSxrQkR6Q1IsT0FBUSxlQWlFTSw0RkFDQSxLQUFBLFFBQ0EsbUJBQUEsS0FBQSxJQUFBLHNCQ3BCZCxXQUFZLEtBQUssSUFBSyxzQkR3QlIsa0dBQ0EsS0FBQSxRQUVBLG1FQUNBLFFBQUEsS0FBQSxLQUFBLGVBQ0EsV0FBQSxrQkFDQSxXQUFBLElBQUEsTUFBQSxRQUVBLHNFQUNBLE1BQUEsa0JBQ0EsVUFBQSxlQ3JCZCxZQUFhLGNEd0JLLHFFQ3JCbEIsT0FBUSxJQUFJLEVBQUksZUR3QkYsWUFBQSxjQUNJLE1BQUEsa0JDdEJsQixVQUFXLGVBRWIsMEVBQ0UsTUFBTyxlQUNQLFFBQVMsS0FBSyxlQUNkLE9BQVEsWUFDUixjQUFlLGNBQ2YsVUFBVyxlQUNYLFlBQWEsY0FDYixPQUFRLGtCQUNSLFdBQVksa0JBQ1osTUFBTyxlQUNQLE9BQVEsWUFDUixtQkFBb0IsaUJBQWlCLElBQUssc0JBQzFDLFdBQVksaUJBQWlCLElBQUssc0JBRXBDLGdGQUNFLGlCQUFrQixrQkFFcEIsaUZBQ0UsaUJBQWtCIn0= */';\nexports[\"default\"] = css;\n//# sourceMappingURL=inlineStyles.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci9jb25uZWN0LXdlYi9saWIvaWZyYW1lL2lubGluZVN0eWxlcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxzQ0FBc0MseUJBQXlCLDhCQUE4QiwrQkFBK0IsOEJBQThCLHVCQUF1QixzQ0FBc0MsdUNBQXVDLHdDQUF3QyxvQ0FBb0MsZ0NBQWdDLG1DQUFtQyxxQ0FBcUMsZ0NBQWdDLDZCQUE2Qix3QkFBd0IscUJBQXFCLHNCQUFzQixnQkFBZ0IsaUJBQWlCLHFDQUFxQyx3QkFBd0IsdUJBQXVCLG1CQUFtQiwrQ0FBK0MsNEJBQTRCLHdCQUF3QixzQkFBc0IsMkdBQTJHLHNCQUFzQiw0QkFBNEIsZ0NBQWdDLDRCQUE0QiwwQkFBMEIsbUVBQW1FLGdCQUFnQiw0QkFBNEIsOEJBQThCLCtCQUErQiw4QkFBOEIsdUJBQXVCLG1DQUFtQyxxQ0FBcUMsZ0NBQWdDLDZCQUE2Qix1RkFBdUYsbUJBQW1CLGVBQWUsV0FBVyxPQUFPLHdGQUF3Rix5QkFBeUIsc0JBQXNCLDRGQUE0RixhQUFhLGtEQUFrRCwwQ0FBMEMsa0dBQWtHLGFBQWEsbUVBQW1FLGlDQUFpQyw2QkFBNkIsNkJBQTZCLHNFQUFzRSx3QkFBd0IseUJBQXlCLDBCQUEwQixxRUFBcUUsNEJBQTRCLDBCQUEwQix3QkFBd0IseUJBQXlCLDBFQUEwRSxxQkFBcUIsNEJBQTRCLG1CQUFtQiw0QkFBNEIseUJBQXlCLDBCQUEwQix5QkFBeUIsNkJBQTZCLHFCQUFxQixtQkFBbUIsOERBQThELHNEQUFzRCxnRkFBZ0YsbUNBQW1DLGlGQUFpRixtQ0FBbUMsMkNBQTJDO0FBQzltRyxrQkFBZTtBQUNmIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AdHJlem9yL2Nvbm5lY3Qtd2ViL2xpYi9pZnJhbWUvaW5saW5lU3R5bGVzLmpzPzM0NTciXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCBjc3MgPSAnLnRyZXpvcmNvbm5lY3QtY29udGFpbmVye3Bvc2l0aW9uOmZpeGVkIWltcG9ydGFudDtkaXNwbGF5Oi13ZWJraXQtYm94IWltcG9ydGFudDtkaXNwbGF5Oi13ZWJraXQtZmxleCFpbXBvcnRhbnQ7ZGlzcGxheTotbXMtZmxleGJveCFpbXBvcnRhbnQ7ZGlzcGxheTpmbGV4IWltcG9ydGFudDstd2Via2l0LWJveC1vcmllbnQ6dmVydGljYWwhaW1wb3J0YW50Oy13ZWJraXQtYm94LWRpcmVjdGlvbjpub3JtYWwhaW1wb3J0YW50Oy13ZWJraXQtZmxleC1kaXJlY3Rpb246Y29sdW1uIWltcG9ydGFudDstbXMtZmxleC1kaXJlY3Rpb246Y29sdW1uIWltcG9ydGFudDtmbGV4LWRpcmVjdGlvbjpjb2x1bW4haW1wb3J0YW50Oy13ZWJraXQtYm94LWFsaWduOmNlbnRlciFpbXBvcnRhbnQ7LXdlYmtpdC1hbGlnbi1pdGVtczpjZW50ZXIhaW1wb3J0YW50Oy1tcy1mbGV4LWFsaWduOmNlbnRlciFpbXBvcnRhbnQ7YWxpZ24taXRlbXM6Y2VudGVyIWltcG9ydGFudDt6LWluZGV4OjEwMDAwIWltcG9ydGFudDt3aWR0aDoxMDAlIWltcG9ydGFudDtoZWlnaHQ6MTAwJSFpbXBvcnRhbnQ7dG9wOjAhaW1wb3J0YW50O2xlZnQ6MCFpbXBvcnRhbnQ7YmFja2dyb3VuZDpyZ2JhKDAsMCwwLC4zNSkhaW1wb3J0YW50O292ZXJmbG93OmF1dG8haW1wb3J0YW50O3BhZGRpbmc6MjBweCFpbXBvcnRhbnQ7bWFyZ2luOjAhaW1wb3J0YW50fS50cmV6b3Jjb25uZWN0LWNvbnRhaW5lciAudHJlem9yY29ubmVjdC13aW5kb3d7cG9zaXRpb246cmVsYXRpdmUhaW1wb3J0YW50O2Rpc3BsYXk6YmxvY2shaW1wb3J0YW50O3dpZHRoOjM3MHB4IWltcG9ydGFudDtmb250LWZhbWlseTotYXBwbGUtc3lzdGVtLEJsaW5rTWFjU3lzdGVtRm9udCxcIlNlZ29lIFVJXCIsUm9ib3RvLFwiSGVsdmV0aWNhIE5ldWVcIixBcmlhbCxzYW5zLXNlcmlmIWltcG9ydGFudDttYXJnaW46YXV0byFpbXBvcnRhbnQ7Ym9yZGVyLXJhZGl1czozcHghaW1wb3J0YW50O2JhY2tncm91bmQtY29sb3I6I2ZmZiFpbXBvcnRhbnQ7dGV4dC1hbGlnbjpjZW50ZXIhaW1wb3J0YW50O292ZXJmbG93OmhpZGRlbiFpbXBvcnRhbnR9LnRyZXpvcmNvbm5lY3QtY29udGFpbmVyIC50cmV6b3Jjb25uZWN0LXdpbmRvdyAudHJlem9yY29ubmVjdC1oZWFke3RleHQtYWxpZ246bGVmdDtwYWRkaW5nOjEycHggMjRweCFpbXBvcnRhbnQ7ZGlzcGxheTotd2Via2l0LWJveCFpbXBvcnRhbnQ7ZGlzcGxheTotd2Via2l0LWZsZXghaW1wb3J0YW50O2Rpc3BsYXk6LW1zLWZsZXhib3ghaW1wb3J0YW50O2Rpc3BsYXk6ZmxleCFpbXBvcnRhbnQ7LXdlYmtpdC1ib3gtYWxpZ246Y2VudGVyIWltcG9ydGFudDstd2Via2l0LWFsaWduLWl0ZW1zOmNlbnRlciFpbXBvcnRhbnQ7LW1zLWZsZXgtYWxpZ246Y2VudGVyIWltcG9ydGFudDthbGlnbi1pdGVtczpjZW50ZXIhaW1wb3J0YW50fS50cmV6b3Jjb25uZWN0LWNvbnRhaW5lciAudHJlem9yY29ubmVjdC13aW5kb3cgLnRyZXpvcmNvbm5lY3QtaGVhZCAudHJlem9yY29ubmVjdC1sb2dvey13ZWJraXQtYm94LWZsZXg6MTstd2Via2l0LWZsZXg6MTstbXMtZmxleDoxO2ZsZXg6MX0udHJlem9yY29ubmVjdC1jb250YWluZXIgLnRyZXpvcmNvbm5lY3Qtd2luZG93IC50cmV6b3Jjb25uZWN0LWhlYWQgLnRyZXpvcmNvbm5lY3QtY2xvc2V7Y3Vyc29yOnBvaW50ZXIhaW1wb3J0YW50O2hlaWdodDoyNHB4IWltcG9ydGFudH0udHJlem9yY29ubmVjdC1jb250YWluZXIgLnRyZXpvcmNvbm5lY3Qtd2luZG93IC50cmV6b3Jjb25uZWN0LWhlYWQgLnRyZXpvcmNvbm5lY3QtY2xvc2Ugc3Zne2ZpbGw6Izc1NzU3NTstd2Via2l0LXRyYW5zaXRpb246ZmlsbCAuM3MgZWFzZS1pbi1vdXQhaW1wb3J0YW50O3RyYW5zaXRpb246ZmlsbCAuM3MgZWFzZS1pbi1vdXQhaW1wb3J0YW50fS50cmV6b3Jjb25uZWN0LWNvbnRhaW5lciAudHJlem9yY29ubmVjdC13aW5kb3cgLnRyZXpvcmNvbm5lY3QtaGVhZCAudHJlem9yY29ubmVjdC1jbG9zZTpob3ZlciBzdmd7ZmlsbDojNDk0OTQ5fS50cmV6b3Jjb25uZWN0LWNvbnRhaW5lciAudHJlem9yY29ubmVjdC13aW5kb3cgLnRyZXpvcmNvbm5lY3QtYm9keXtwYWRkaW5nOjI0cHggMjRweCAzMnB4IWltcG9ydGFudDtiYWNrZ3JvdW5kOiNGQkZCRkIhaW1wb3J0YW50O2JvcmRlci10b3A6MXB4IHNvbGlkICNFQkVCRUJ9LnRyZXpvcmNvbm5lY3QtY29udGFpbmVyIC50cmV6b3Jjb25uZWN0LXdpbmRvdyAudHJlem9yY29ubmVjdC1ib2R5IGgze2NvbG9yOiM1MDUwNTAhaW1wb3J0YW50O2ZvbnQtc2l6ZToxNnB4IWltcG9ydGFudDtmb250LXdlaWdodDo1MDAhaW1wb3J0YW50fS50cmV6b3Jjb25uZWN0LWNvbnRhaW5lciAudHJlem9yY29ubmVjdC13aW5kb3cgLnRyZXpvcmNvbm5lY3QtYm9keSBwe21hcmdpbjo4cHggMCAyNHB4IWltcG9ydGFudDtmb250LXdlaWdodDo0MDAhaW1wb3J0YW50O2NvbG9yOiNBOUE5QTkhaW1wb3J0YW50O2ZvbnQtc2l6ZToxMnB4IWltcG9ydGFudH0udHJlem9yY29ubmVjdC1jb250YWluZXIgLnRyZXpvcmNvbm5lY3Qtd2luZG93IC50cmV6b3Jjb25uZWN0LWJvZHkgYnV0dG9ue3dpZHRoOjEwMCUhaW1wb3J0YW50O3BhZGRpbmc6MTJweCAyNHB4IWltcG9ydGFudDttYXJnaW46MCFpbXBvcnRhbnQ7Ym9yZGVyLXJhZGl1czozcHghaW1wb3J0YW50O2ZvbnQtc2l6ZToxNHB4IWltcG9ydGFudDtmb250LXdlaWdodDozMDAhaW1wb3J0YW50O2N1cnNvcjpwb2ludGVyIWltcG9ydGFudDtiYWNrZ3JvdW5kOiMwMUI3NTchaW1wb3J0YW50O2NvbG9yOiNmZmYhaW1wb3J0YW50O2JvcmRlcjowIWltcG9ydGFudDstd2Via2l0LXRyYW5zaXRpb246YmFja2dyb3VuZC1jb2xvciAuM3MgZWFzZS1pbi1vdXQhaW1wb3J0YW50O3RyYW5zaXRpb246YmFja2dyb3VuZC1jb2xvciAuM3MgZWFzZS1pbi1vdXQhaW1wb3J0YW50fS50cmV6b3Jjb25uZWN0LWNvbnRhaW5lciAudHJlem9yY29ubmVjdC13aW5kb3cgLnRyZXpvcmNvbm5lY3QtYm9keSBidXR0b246aG92ZXJ7YmFja2dyb3VuZC1jb2xvcjojMDBBQjUxIWltcG9ydGFudH0udHJlem9yY29ubmVjdC1jb250YWluZXIgLnRyZXpvcmNvbm5lY3Qtd2luZG93IC50cmV6b3Jjb25uZWN0LWJvZHkgYnV0dG9uOmFjdGl2ZXtiYWNrZ3JvdW5kLWNvbG9yOiMwMDk1NDYhaW1wb3J0YW50fS8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJbWx1Y0hWMElpd2lKSE4wWkdsdUlsMHNJbTVoYldWeklqcGJYU3dpYldGd2NHbHVaM01pT2lKQlFXTkJMSGxDUVVOSkxGTkJRVUVzWjBKQlEwRXNVVUZCUVN4elFrRkRRU3hSUVVGQkxIVkNRVU5CTEZGQlFVRXNjMEpCUlVFc1VVRkJRU3hsUVVOQkxHMUNRVUZCTEcxQ1FVTkJMSE5DUVVGQkxHbENRVU5CTEhWQ1FVRkJMR2xDUVVOQkxHMUNRVUZCTEdsQ1FVTkJMR1ZCUVVFc2FVSkJSVUVzYTBKQlFVRXNhVUpCUTBFc2IwSkJRVUVzYVVKQlEwRXNaVUZCUVN4cFFrTm1UU3haUVVGaExHbENSRUZ5UWl4UlFVRlRMR2RDUVd0Q1NDeE5RVUZCTEdWQlEwRXNUMEZCUVN4bFFVTkJMRWxCUVVFc1dVRkRRU3hMUVVGQkxGbEJRMEVzVjBGQlFTd3dRa0ZEUVN4VFFVRkJMR1ZCUTBFc1VVRkJRU3hsUVVOQkxFOUJRVUVzV1VOa1Vpd3JRMFJZUlN4VFFVRlZMRzFDUVRaQ1FTeFJRVUZCTEdkQ1FVTkJMRTFCUVVFc1owSkJRMEVzV1VGQlFTeGpRVUZCTEcxQ1FVRkJMRmRCUVVFc1QwRkJRU3hwUWtGQlFTeE5RVUZCTEhGQ1FVTkJMRTlCUVVFc1pVTm1WaXhqUVVGbExHTkVha0ptTEdsQ1FXbENSU3hsUVd0Q1dTeFhRVUZCTEdsQ1EyWmtMRk5CUVZVc2FVSkViVUpKTEcxRlFVTkJMRmRCUVVFc1MwTm9RbVFzVVVGQlV5eExRVUZMTEdWRWVFSmtMRkZCUVZNc2MwSkJNRU5UTEZGQlFVRXNkVUpCUTBFc1VVRkJRU3h6UWtObWJFSXNVVUZCVXl4bFJHbENTeXhyUWtFMVFsb3NhVUpCT0VKdlFpeHZRa0ZCUVN4cFFrTm9RbXhDTEdWQlFXZENMR2xDUkM5Q1dpeFpRV2xDVGl4cFFrRnpRMUVzZFVaQlEwRXNhVUpCUVVFc1JVTndRbFlzWVVGQll5eEZSSEJEVml4VFFVRlZMRVZCTWtSQkxFdEJRVUVzUlVGRlFTeDNSa053UW1Rc1QwRkJVU3hyUWtSNlExSXNUMEZCVVN4bFFXbEZUU3cwUmtGRFFTeExRVUZCTEZGQlEwRXNiVUpCUVVFc1MwRkJRU3hKUVVGQkxITkNRM0JDWkN4WFFVRlpMRXRCUVVzc1NVRkJTeXh6UWtSM1FsSXNhMGRCUTBFc1MwRkJRU3hSUVVWQkxHMUZRVU5CTEZGQlFVRXNTMEZCUVN4TFFVRkJMR1ZCUTBFc1YwRkJRU3hyUWtGRFFTeFhRVUZCTEVsQlFVRXNUVUZCUVN4UlFVVkJMSE5GUVVOQkxFMUJRVUVzYTBKQlEwRXNWVUZCUVN4bFEzSkNaQ3haUVVGaExHTkVkMEpMTEhGRlEzSkNiRUlzVDBGQlVTeEpRVUZKTEVWQlFVa3NaVVIzUWtZc1dVRkJRU3hqUVVOSkxFMUJRVUVzYTBKRGRFSnNRaXhWUVVGWExHVkJSV0lzTUVWQlEwVXNUVUZCVHl4bFFVTlFMRkZCUVZNc1MwRkJTeXhsUVVOa0xFOUJRVkVzV1VGRFVpeGpRVUZsTEdOQlEyWXNWVUZCVnl4bFFVTllMRmxCUVdFc1kwRkRZaXhQUVVGUkxHdENRVU5TTEZkQlFWa3NhMEpCUTFvc1RVRkJUeXhsUVVOUUxFOUJRVkVzV1VGRFVpeHRRa0ZCYjBJc2FVSkJRV2xDTEVsQlFVc3NjMEpCUXpGRExGZEJRVmtzYVVKQlFXbENMRWxCUVVzc2MwSkJSWEJETEdkR1FVTkZMR2xDUVVGclFpeHJRa0ZGY0VJc2FVWkJRMFVzYVVKQlFXdENJbjA9ICovJztcbmV4cG9ydHMuZGVmYXVsdCA9IGNzcztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWlubGluZVN0eWxlcy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@trezor/connect-web/lib/iframe/inlineStyles.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/connect-web/lib/index.js":
/*!*******************************************************!*\
  !*** ./node_modules/@trezor/connect-web/lib/index.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.mjs\");\nconst events_1 = tslib_1.__importDefault(__webpack_require__(/*! events */ \"./node_modules/events/events.js\"));\nconst ERRORS = tslib_1.__importStar(__webpack_require__(/*! @trezor/connect/lib/constants/errors */ \"./node_modules/@trezor/connect/lib/constants/errors.js\"));\nconst events_2 = __webpack_require__(/*! @trezor/connect/lib/events */ \"./node_modules/@trezor/connect/lib/events/index.js\");\nconst factory_1 = __webpack_require__(/*! @trezor/connect/lib/factory */ \"./node_modules/@trezor/connect/lib/factory.js\");\nconst debug_1 = __webpack_require__(/*! @trezor/connect/lib/utils/debug */ \"./node_modules/@trezor/connect/lib/utils/debug.js\");\nconst config_1 = __webpack_require__(/*! @trezor/connect/lib/data/config */ \"./node_modules/@trezor/connect/lib/data/config.js\");\nconst iframe = tslib_1.__importStar(__webpack_require__(/*! ./iframe */ \"./node_modules/@trezor/connect-web/lib/iframe/index.js\"));\nconst popup = tslib_1.__importStar(__webpack_require__(/*! ./popup */ \"./node_modules/@trezor/connect-web/lib/popup/index.js\"));\nconst button_1 = tslib_1.__importDefault(__webpack_require__(/*! ./webusb/button */ \"./node_modules/@trezor/connect-web/lib/webusb/button.js\"));\nconst connectSettings_1 = __webpack_require__(/*! ./connectSettings */ \"./node_modules/@trezor/connect-web/lib/connectSettings.js\");\nconst eventEmitter = new events_1.default();\nconst _log = (0, debug_1.initLog)('@trezor/connect-web');\nlet _settings = (0, connectSettings_1.parseConnectSettings)();\nlet _popupManager;\nconst initPopupManager = () => {\n    const pm = new popup.PopupManager(_settings);\n    pm.on(events_2.POPUP.CLOSED, (error) => {\n        iframe.postMessage({\n            type: events_2.POPUP.CLOSED,\n            payload: error ? { error } : null,\n        }, false);\n    });\n    return pm;\n};\nconst manifest = (data) => {\n    _settings = (0, connectSettings_1.parseConnectSettings)(Object.assign(Object.assign({}, _settings), { manifest: data }));\n};\nconst dispose = () => {\n    eventEmitter.removeAllListeners();\n    iframe.dispose();\n    _settings = (0, connectSettings_1.parseConnectSettings)();\n    if (_popupManager) {\n        _popupManager.close();\n    }\n    return Promise.resolve(undefined);\n};\nconst cancel = (error) => {\n    if (_popupManager) {\n        _popupManager.emit(events_2.POPUP.CLOSED, error);\n    }\n};\nconst handleMessage = (messageEvent) => {\n    if (messageEvent.origin !== iframe.origin)\n        return;\n    const message = (0, events_2.parseMessage)(messageEvent.data);\n    const id = message.id || 0;\n    _log.log('handleMessage', message);\n    switch (message.event) {\n        case events_2.RESPONSE_EVENT:\n            if (iframe.messagePromises[id]) {\n                iframe.messagePromises[id].resolve({\n                    id,\n                    success: message.success,\n                    payload: message.payload,\n                });\n                delete iframe.messagePromises[id];\n            }\n            else {\n                _log.warn(`Unknown message id ${id}`);\n            }\n            break;\n        case events_2.DEVICE_EVENT:\n            eventEmitter.emit(message.event, message);\n            eventEmitter.emit(message.type, message.payload);\n            break;\n        case events_2.TRANSPORT_EVENT:\n            eventEmitter.emit(message.event, message);\n            eventEmitter.emit(message.type, message.payload);\n            break;\n        case events_2.BLOCKCHAIN_EVENT:\n            eventEmitter.emit(message.event, message);\n            eventEmitter.emit(message.type, message.payload);\n            break;\n        case events_2.UI_EVENT:\n            if (message.type === events_2.IFRAME.BOOTSTRAP) {\n                iframe.clearTimeout();\n                break;\n            }\n            if (message.type === events_2.IFRAME.LOADED) {\n                iframe.initPromise.resolve();\n            }\n            if (message.type === events_2.IFRAME.ERROR) {\n                iframe.initPromise.reject(message.payload.error);\n            }\n            eventEmitter.emit(message.event, message);\n            eventEmitter.emit(message.type, message.payload);\n            break;\n        default:\n            _log.log('Undefined message', message.event, messageEvent.data);\n    }\n};\nconst init = async (settings = {}) => {\n    var _a;\n    if (iframe.instance) {\n        throw ERRORS.TypedError('Init_AlreadyInitialized');\n    }\n    _settings = (0, connectSettings_1.parseConnectSettings)(Object.assign(Object.assign({}, _settings), settings));\n    if (!_settings.manifest) {\n        throw ERRORS.TypedError('Init_ManifestMissing');\n    }\n    if (!((_a = _settings.transports) === null || _a === void 0 ? void 0 : _a.length)) {\n        _settings.transports = ['BridgeTransport', 'WebUsbTransport'];\n    }\n    if (_settings.lazyLoad) {\n        _settings.lazyLoad = false;\n        return;\n    }\n    if (!_popupManager) {\n        _popupManager = initPopupManager();\n    }\n    _log.enabled = !!_settings.debug;\n    window.addEventListener('message', handleMessage);\n    window.addEventListener('unload', dispose);\n    await iframe.init(_settings);\n    if (_settings.sharedLogger !== false) {\n        iframe.initIframeLogger();\n    }\n};\nconst call = async (params) => {\n    if (!iframe.instance && !iframe.timeout) {\n        _settings = (0, connectSettings_1.parseConnectSettings)(_settings);\n        if (!_settings.manifest) {\n            return (0, events_2.createErrorMessage)(ERRORS.TypedError('Init_ManifestMissing'));\n        }\n        if (!_popupManager) {\n            _popupManager = initPopupManager();\n        }\n        _popupManager.request();\n        try {\n            await init(_settings);\n        }\n        catch (error) {\n            if (_popupManager) {\n                if (['Init_IframeBlocked', 'Init_IframeTimeout'].includes(error.code)) {\n                    _popupManager.postMessage((0, events_2.createUiMessage)(events_2.UI.IFRAME_FAILURE));\n                }\n                else {\n                    _popupManager.clear();\n                }\n            }\n            return (0, events_2.createErrorMessage)(error);\n        }\n    }\n    if (iframe.timeout) {\n        return (0, events_2.createErrorMessage)(ERRORS.TypedError('Init_ManifestMissing'));\n    }\n    if (iframe.error) {\n        return (0, events_2.createErrorMessage)(iframe.error);\n    }\n    if (_settings.popup && _popupManager) {\n        _popupManager.request();\n    }\n    try {\n        const response = await iframe.postMessage({ type: events_2.IFRAME.CALL, payload: params });\n        if (response) {\n            if (!response.success &&\n                response.payload.code !== 'Device_CallInProgress' &&\n                _popupManager) {\n                _popupManager.unlock();\n            }\n            return response;\n        }\n        if (_popupManager) {\n            _popupManager.unlock();\n        }\n        return (0, events_2.createErrorMessage)(ERRORS.TypedError('Method_NoResponse'));\n    }\n    catch (error) {\n        _log.error('__call error', error);\n        if (_popupManager) {\n            _popupManager.clear();\n        }\n        return (0, events_2.createErrorMessage)(error);\n    }\n};\nconst uiResponse = (response) => {\n    if (!iframe.instance) {\n        throw ERRORS.TypedError('Init_NotInitialized');\n    }\n    const { type, payload } = response;\n    iframe.postMessage({ event: events_2.UI_EVENT, type, payload });\n};\nconst renderWebUSBButton = (className) => {\n    (0, button_1.default)(className, _settings.webusbSrc);\n};\nconst requestLogin = async (params) => {\n    if (typeof params.callback === 'function') {\n        const { callback } = params;\n        const loginChallengeListener = async (event) => {\n            const { data } = event;\n            if (data && data.type === events_2.UI.LOGIN_CHALLENGE_REQUEST) {\n                try {\n                    const payload = await callback();\n                    iframe.postMessage({\n                        event: events_2.UI_EVENT,\n                        type: events_2.UI.LOGIN_CHALLENGE_RESPONSE,\n                        payload,\n                    });\n                }\n                catch (error) {\n                    iframe.postMessage({\n                        event: events_2.UI_EVENT,\n                        type: events_2.UI.LOGIN_CHALLENGE_RESPONSE,\n                        payload: error.message,\n                    });\n                }\n            }\n        };\n        window.addEventListener('message', loginChallengeListener, false);\n        const response = await call(Object.assign(Object.assign({ method: 'requestLogin' }, params), { asyncChallenge: true, callback: null }));\n        window.removeEventListener('message', loginChallengeListener);\n        return response;\n    }\n    return call(Object.assign({ method: 'requestLogin' }, params));\n};\nconst disableWebUSB = () => {\n    if (!iframe.instance) {\n        throw ERRORS.TypedError('Init_NotInitialized');\n    }\n    iframe.postMessage({\n        event: events_2.UI_EVENT,\n        type: events_2.TRANSPORT.DISABLE_WEBUSB,\n    });\n};\nconst requestWebUSBDevice = async () => {\n    try {\n        await window.navigator.usb.requestDevice({ filters: config_1.config.webusb });\n        iframe.postMessage({\n            event: events_2.UI_EVENT,\n            type: events_2.TRANSPORT.REQUEST_DEVICE,\n        });\n    }\n    catch (_err) {\n    }\n};\nconst TrezorConnect = (0, factory_1.factory)({\n    eventEmitter,\n    manifest,\n    init,\n    call,\n    requestLogin,\n    uiResponse,\n    renderWebUSBButton,\n    disableWebUSB,\n    requestWebUSBDevice,\n    cancel,\n    dispose,\n});\nexports[\"default\"] = TrezorConnect;\ntslib_1.__exportStar(__webpack_require__(/*! @trezor/connect/lib/exports */ \"./node_modules/@trezor/connect/lib/exports.js\"), exports);\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@trezor/connect-web/lib/index.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/connect-web/lib/popup/index.js":
/*!*************************************************************!*\
  !*** ./node_modules/@trezor/connect-web/lib/popup/index.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PopupManager = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.mjs\");\nconst events_1 = tslib_1.__importDefault(__webpack_require__(/*! events */ \"./node_modules/events/events.js\"));\nconst createDeferred_1 = __webpack_require__(/*! @trezor/utils/lib/createDeferred */ \"./node_modules/@trezor/utils/lib/createDeferred.js\");\nconst events_2 = __webpack_require__(/*! @trezor/connect/lib/events */ \"./node_modules/@trezor/connect/lib/events/index.js\");\nconst urlUtils_1 = __webpack_require__(/*! @trezor/connect/lib/utils/urlUtils */ \"./node_modules/@trezor/connect/lib/utils/urlUtils.js\");\nconst showPopupRequest_1 = __webpack_require__(/*! ./showPopupRequest */ \"./node_modules/@trezor/connect-web/lib/popup/showPopupRequest.js\");\nconst POPUP_REQUEST_TIMEOUT = 850;\nconst POPUP_CLOSE_INTERVAL = 500;\nconst POPUP_OPEN_TIMEOUT = 3000;\nclass PopupManager extends events_1.default {\n    constructor(settings) {\n        super();\n        this.locked = false;\n        this.requestTimeout = 0;\n        this.closeInterval = 0;\n        this.extensionTabId = 0;\n        this.settings = settings;\n        this.origin = (0, urlUtils_1.getOrigin)(settings.popupSrc);\n        this.handleMessage = this.handleMessage.bind(this);\n        this.iframeHandshake = (0, createDeferred_1.createDeferred)(events_2.IFRAME.LOADED);\n        if (this.settings.env === 'webextension') {\n            this.handleExtensionConnect = this.handleExtensionConnect.bind(this);\n            this.handleExtensionMessage = this.handleExtensionMessage.bind(this);\n            chrome.runtime.onConnect.addListener(this.handleExtensionConnect);\n        }\n        window.addEventListener('message', this.handleMessage, false);\n    }\n    request() {\n        if (this.locked) {\n            if (this.popupWindow) {\n                if (this.settings.env === 'webextension') {\n                    chrome.tabs.update(this.popupWindow.id, { active: true });\n                }\n                else {\n                    this.popupWindow.focus();\n                }\n            }\n            return;\n        }\n        if (this.popupWindow && !this.locked) {\n            this.close();\n        }\n        const openFn = this.open.bind(this);\n        this.locked = true;\n        const timeout = this.settings.env === 'webextension' ? 1 : POPUP_REQUEST_TIMEOUT;\n        this.requestTimeout = window.setTimeout(() => {\n            this.requestTimeout = 0;\n            openFn();\n        }, timeout);\n    }\n    unlock() {\n        this.locked = false;\n    }\n    open() {\n        const src = this.settings.popupSrc;\n        this.popupPromise = (0, createDeferred_1.createDeferred)(events_2.POPUP.LOADED);\n        this.openWrapper(src);\n        this.closeInterval = window.setInterval(() => {\n            if (!this.popupWindow)\n                return;\n            if (this.settings.env === 'webextension') {\n                chrome.tabs.get(this.popupWindow.id, tab => {\n                    if (!tab) {\n                        this.emit(events_2.POPUP.CLOSED);\n                        this.clear();\n                    }\n                });\n            }\n            else if (this.popupWindow.closed) {\n                this.clear();\n                this.emit(events_2.POPUP.CLOSED);\n            }\n        }, POPUP_CLOSE_INTERVAL);\n        this.openTimeout = setTimeout(() => {\n            this.clear();\n            (0, showPopupRequest_1.showPopupRequest)(this.open.bind(this), () => {\n                this.emit(events_2.POPUP.CLOSED);\n            });\n        }, POPUP_OPEN_TIMEOUT);\n    }\n    openWrapper(url) {\n        if (this.settings.env === 'webextension') {\n            chrome.windows.getCurrent(currentWindow => {\n                if (currentWindow.type !== 'normal') {\n                    chrome.windows.create({ url }, newWindow => {\n                        chrome.tabs.query({\n                            windowId: newWindow === null || newWindow === void 0 ? void 0 : newWindow.id,\n                            active: true,\n                        }, tabs => {\n                            this.popupWindow = tabs[0];\n                        });\n                    });\n                }\n                else {\n                    chrome.tabs.query({\n                        currentWindow: true,\n                        active: true,\n                    }, tabs => {\n                        this.extensionTabId = tabs[0].id;\n                        chrome.tabs.create({\n                            url,\n                            index: tabs[0].index + 1,\n                        }, tab => {\n                            this.popupWindow = tab;\n                        });\n                    });\n                }\n            });\n        }\n        else if (this.settings.env === 'electron') {\n            this.popupWindow = window.open(url, 'modal');\n        }\n        else {\n            this.popupWindow = window.open('', '_blank');\n            if (this.popupWindow) {\n                this.popupWindow.location.href = url;\n            }\n        }\n    }\n    handleExtensionConnect(port) {\n        var _a, _b;\n        if (port.name !== 'trezor-connect')\n            return;\n        if (!this.popupWindow || (this.popupWindow && this.popupWindow.id !== ((_b = (_a = port.sender) === null || _a === void 0 ? void 0 : _a.tab) === null || _b === void 0 ? void 0 : _b.id)))\n            return;\n        if (this.openTimeout)\n            clearTimeout(this.openTimeout);\n        this.extensionPort = port;\n        this.extensionPort.onMessage.addListener(this.handleExtensionMessage);\n    }\n    handleExtensionMessage(message) {\n        if (!this.extensionPort)\n            return;\n        const port = this.extensionPort;\n        const { data } = message;\n        if (!data || typeof data !== 'object')\n            return;\n        if (data.type === events_2.POPUP.ERROR) {\n            const errorMessage = data.payload && typeof data.payload.error === 'string' ? data.payload.error : null;\n            this.emit(events_2.POPUP.CLOSED, errorMessage ? `Popup error: ${errorMessage}` : null);\n            this.clear();\n        }\n        else if (data.type === events_2.POPUP.LOADED) {\n            if (this.popupPromise) {\n                this.popupPromise.resolve();\n            }\n            this.iframeHandshake.promise.then(payload => {\n                port.postMessage({\n                    type: events_2.POPUP.INIT,\n                    payload: Object.assign(Object.assign({}, payload), { settings: this.settings }),\n                });\n            });\n        }\n        else if (data.type === events_2.POPUP.EXTENSION_USB_PERMISSIONS) {\n            chrome.tabs.query({\n                currentWindow: true,\n                active: true,\n            }, tabs => {\n                chrome.tabs.create({\n                    url: 'trezor-usb-permissions.html',\n                    index: tabs[0].index + 1,\n                }, _tab => {\n                });\n            });\n        }\n        else if (data.type === events_2.POPUP.CLOSE_WINDOW) {\n            this.clear();\n        }\n    }\n    handleMessage(message) {\n        const { data } = message;\n        if ((0, urlUtils_1.getOrigin)(message.origin) !== this.origin || !data || typeof data !== 'object')\n            return;\n        if (data.type === events_2.IFRAME.LOADED) {\n            this.iframeHandshake.resolve(data.payload);\n        }\n        else if (data.type === events_2.POPUP.BOOTSTRAP) {\n            if (this.openTimeout)\n                clearTimeout(this.openTimeout);\n        }\n        else if (data.type === events_2.POPUP.ERROR && this.popupWindow) {\n            const errorMessage = data.payload && typeof data.payload.error === 'string' ? data.payload.error : null;\n            this.emit(events_2.POPUP.CLOSED, errorMessage ? `Popup error: ${errorMessage}` : null);\n            this.clear();\n        }\n        else if (data.type === events_2.POPUP.LOADED) {\n            if (this.popupPromise) {\n                this.popupPromise.resolve();\n            }\n            this.iframeHandshake.promise.then(payload => {\n                this.popupWindow.postMessage({\n                    type: events_2.POPUP.INIT,\n                    payload: Object.assign(Object.assign({}, payload), { settings: this.settings }),\n                }, this.origin);\n            });\n        }\n        else if (data.type === events_2.POPUP.CANCEL_POPUP_REQUEST || data.type === events_2.UI.CLOSE_UI_WINDOW) {\n            this.clear(false);\n        }\n    }\n    clear(focus = true) {\n        this.locked = false;\n        this.popupPromise = undefined;\n        if (this.requestTimeout) {\n            window.clearTimeout(this.requestTimeout);\n            this.requestTimeout = 0;\n        }\n        if (this.openTimeout) {\n            clearTimeout(this.openTimeout);\n            this.openTimeout = undefined;\n        }\n        if (this.closeInterval) {\n            window.clearInterval(this.closeInterval);\n            this.closeInterval = 0;\n        }\n        if (this.extensionPort) {\n            this.extensionPort.disconnect();\n            this.extensionPort = undefined;\n        }\n        if (focus && this.extensionTabId) {\n            chrome.tabs.update(this.extensionTabId, { active: true });\n            this.extensionTabId = 0;\n        }\n    }\n    close() {\n        if (!this.popupWindow)\n            return;\n        if (this.settings.env === 'webextension') {\n            let _e = chrome.runtime.lastError;\n            chrome.tabs.remove(this.popupWindow.id, () => {\n                _e = chrome.runtime.lastError;\n            });\n            return;\n        }\n        this.popupWindow.close();\n        this.popupWindow = null;\n    }\n    async postMessage(message) {\n        if (!this.popupWindow && message.type !== events_2.UI.REQUEST_UI_WINDOW && this.openTimeout) {\n            this.clear();\n            (0, showPopupRequest_1.showPopupRequest)(this.open.bind(this), () => {\n                this.emit(events_2.POPUP.CLOSED);\n            });\n            return;\n        }\n        if (this.popupPromise) {\n            await this.popupPromise.promise;\n        }\n        if (this.popupWindow) {\n            this.popupWindow.postMessage(message, this.origin);\n        }\n    }\n}\nexports.PopupManager = PopupManager;\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@trezor/connect-web/lib/popup/index.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/connect-web/lib/popup/showPopupRequest.js":
/*!************************************************************************!*\
  !*** ./node_modules/@trezor/connect-web/lib/popup/showPopupRequest.js ***!
  \************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.showPopupRequest = void 0;\nconst LAYER_ID = 'TrezorConnectInteractionLayer';\nconst HTML = `\n    <div class=\"trezorconnect-container\" id=\"${LAYER_ID}\">\n        <div class=\"trezorconnect-window\">\n            <div class=\"trezorconnect-head\">\n                <svg class=\"trezorconnect-logo\" x=\"0px\" y=\"0px\" viewBox=\"0 0 163.7 41.9\" width=\"78px\" height=\"20px\" preserveAspectRatio=\"xMinYMin meet\">\n                    <polygon points=\"101.1,12.8 118.2,12.8 118.2,17.3 108.9,29.9 118.2,29.9 118.2,35.2 101.1,35.2 101.1,30.7 110.4,18.1 101.1,18.1\"/>\n                    <path d=\"M158.8,26.9c2.1-0.8,4.3-2.9,4.3-6.6c0-4.5-3.1-7.4-7.7-7.4h-10.5v22.3h5.8v-7.5h2.2l4.1,7.5h6.7L158.8,26.9z M154.7,22.5 h-4V18h4c1.5,0,2.5,0.9,2.5,2.2C157.2,21.6,156.2,22.5,154.7,22.5z\"/>\n                    <path d=\"M130.8,12.5c-6.8,0-11.6,4.9-11.6,11.5s4.9,11.5,11.6,11.5s11.7-4.9,11.7-11.5S137.6,12.5,130.8,12.5z M130.8,30.3 c-3.4,0-5.7-2.6-5.7-6.3c0-3.8,2.3-6.3,5.7-6.3c3.4,0,5.8,2.6,5.8,6.3C136.6,27.7,134.2,30.3,130.8,30.3z\"/>\n                    <polygon points=\"82.1,12.8 98.3,12.8 98.3,18 87.9,18 87.9,21.3 98,21.3 98,26.4 87.9,26.4 87.9,30 98.3,30 98.3,35.2 82.1,35.2 \"/>\n                    <path d=\"M24.6,9.7C24.6,4.4,20,0,14.4,0S4.2,4.4,4.2,9.7v3.1H0v22.3h0l14.4,6.7l14.4-6.7h0V12.9h-4.2V9.7z M9.4,9.7 c0-2.5,2.2-4.5,5-4.5s5,2,5,4.5v3.1H9.4V9.7z M23,31.5l-8.6,4l-8.6-4V18.1H23V31.5z\"/>\n                    <path d=\"M79.4,20.3c0-4.5-3.1-7.4-7.7-7.4H61.2v22.3H67v-7.5h2.2l4.1,7.5H80l-4.9-8.3C77.2,26.1,79.4,24,79.4,20.3z M71,22.5h-4V18 h4c1.5,0,2.5,0.9,2.5,2.2C73.5,21.6,72.5,22.5,71,22.5z\"/>\n                    <polygon points=\"40.5,12.8 58.6,12.8 58.6,18.1 52.4,18.1 52.4,35.2 46.6,35.2 46.6,18.1 40.5,18.1 \"/>\n                </svg>\n                <div class=\"trezorconnect-close\">\n                    <svg x=\"0px\" y=\"0px\" viewBox=\"24 24 60 60\" width=\"24px\" height=\"24px\" preserveAspectRatio=\"xMinYMin meet\">\n                        <polygon class=\"st0\" points=\"40,67.9 42.1,70 55,57.1 67.9,70 70,67.9 57.1,55 70,42.1 67.9,40 55,52.9 42.1,40 40,42.1 52.9,55 \"/>\n                    </svg>\n                </div>\n            </div>\n            <div class=\"trezorconnect-body\">\n                <h3>Popup was blocked</h3>\n                <p>Please click to \"Continue\" to open popup manually</p>\n                <button class=\"trezorconnect-open\">Continue</button>\n            </div>\n        </div>\n    </div>\n`;\nconst showPopupRequest = (open, cancel) => {\n    if (document.getElementById(LAYER_ID)) {\n        return;\n    }\n    const div = document.createElement('div');\n    div.id = LAYER_ID;\n    div.className = 'trezorconnect-container';\n    div.innerHTML = HTML;\n    if (document.body) {\n        document.body.appendChild(div);\n    }\n    const button = div.getElementsByClassName('trezorconnect-open')[0];\n    button.onclick = () => {\n        open();\n        if (document.body) {\n            document.body.removeChild(div);\n        }\n    };\n    const close = div.getElementsByClassName('trezorconnect-close')[0];\n    close.onclick = () => {\n        cancel();\n        if (document.body) {\n            document.body.removeChild(div);\n        }\n    };\n};\nexports.showPopupRequest = showPopupRequest;\n//# sourceMappingURL=showPopupRequest.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci9jb25uZWN0LXdlYi9saWIvcG9wdXAvc2hvd1BvcHVwUmVxdWVzdC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCx3QkFBd0I7QUFDeEI7QUFDQTtBQUNBLCtDQUErQyxTQUFTO0FBQ3hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QjtBQUN4QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHRyZXpvci9jb25uZWN0LXdlYi9saWIvcG9wdXAvc2hvd1BvcHVwUmVxdWVzdC5qcz8zNDE3Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5zaG93UG9wdXBSZXF1ZXN0ID0gdm9pZCAwO1xuY29uc3QgTEFZRVJfSUQgPSAnVHJlem9yQ29ubmVjdEludGVyYWN0aW9uTGF5ZXInO1xuY29uc3QgSFRNTCA9IGBcbiAgICA8ZGl2IGNsYXNzPVwidHJlem9yY29ubmVjdC1jb250YWluZXJcIiBpZD1cIiR7TEFZRVJfSUR9XCI+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJ0cmV6b3Jjb25uZWN0LXdpbmRvd1wiPlxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cInRyZXpvcmNvbm5lY3QtaGVhZFwiPlxuICAgICAgICAgICAgICAgIDxzdmcgY2xhc3M9XCJ0cmV6b3Jjb25uZWN0LWxvZ29cIiB4PVwiMHB4XCIgeT1cIjBweFwiIHZpZXdCb3g9XCIwIDAgMTYzLjcgNDEuOVwiIHdpZHRoPVwiNzhweFwiIGhlaWdodD1cIjIwcHhcIiBwcmVzZXJ2ZUFzcGVjdFJhdGlvPVwieE1pbllNaW4gbWVldFwiPlxuICAgICAgICAgICAgICAgICAgICA8cG9seWdvbiBwb2ludHM9XCIxMDEuMSwxMi44IDExOC4yLDEyLjggMTE4LjIsMTcuMyAxMDguOSwyOS45IDExOC4yLDI5LjkgMTE4LjIsMzUuMiAxMDEuMSwzNS4yIDEwMS4xLDMwLjcgMTEwLjQsMTguMSAxMDEuMSwxOC4xXCIvPlxuICAgICAgICAgICAgICAgICAgICA8cGF0aCBkPVwiTTE1OC44LDI2LjljMi4xLTAuOCw0LjMtMi45LDQuMy02LjZjMC00LjUtMy4xLTcuNC03LjctNy40aC0xMC41djIyLjNoNS44di03LjVoMi4ybDQuMSw3LjVoNi43TDE1OC44LDI2Ljl6IE0xNTQuNywyMi41IGgtNFYxOGg0YzEuNSwwLDIuNSwwLjksMi41LDIuMkMxNTcuMiwyMS42LDE1Ni4yLDIyLjUsMTU0LjcsMjIuNXpcIi8+XG4gICAgICAgICAgICAgICAgICAgIDxwYXRoIGQ9XCJNMTMwLjgsMTIuNWMtNi44LDAtMTEuNiw0LjktMTEuNiwxMS41czQuOSwxMS41LDExLjYsMTEuNXMxMS43LTQuOSwxMS43LTExLjVTMTM3LjYsMTIuNSwxMzAuOCwxMi41eiBNMTMwLjgsMzAuMyBjLTMuNCwwLTUuNy0yLjYtNS43LTYuM2MwLTMuOCwyLjMtNi4zLDUuNy02LjNjMy40LDAsNS44LDIuNiw1LjgsNi4zQzEzNi42LDI3LjcsMTM0LjIsMzAuMywxMzAuOCwzMC4zelwiLz5cbiAgICAgICAgICAgICAgICAgICAgPHBvbHlnb24gcG9pbnRzPVwiODIuMSwxMi44IDk4LjMsMTIuOCA5OC4zLDE4IDg3LjksMTggODcuOSwyMS4zIDk4LDIxLjMgOTgsMjYuNCA4Ny45LDI2LjQgODcuOSwzMCA5OC4zLDMwIDk4LjMsMzUuMiA4Mi4xLDM1LjIgXCIvPlxuICAgICAgICAgICAgICAgICAgICA8cGF0aCBkPVwiTTI0LjYsOS43QzI0LjYsNC40LDIwLDAsMTQuNCwwUzQuMiw0LjQsNC4yLDkuN3YzLjFIMHYyMi4zaDBsMTQuNCw2LjdsMTQuNC02LjdoMFYxMi45aC00LjJWOS43eiBNOS40LDkuNyBjMC0yLjUsMi4yLTQuNSw1LTQuNXM1LDIsNSw0LjV2My4xSDkuNFY5Ljd6IE0yMywzMS41bC04LjYsNGwtOC42LTRWMTguMUgyM1YzMS41elwiLz5cbiAgICAgICAgICAgICAgICAgICAgPHBhdGggZD1cIk03OS40LDIwLjNjMC00LjUtMy4xLTcuNC03LjctNy40SDYxLjJ2MjIuM0g2N3YtNy41aDIuMmw0LjEsNy41SDgwbC00LjktOC4zQzc3LjIsMjYuMSw3OS40LDI0LDc5LjQsMjAuM3ogTTcxLDIyLjVoLTRWMTggaDRjMS41LDAsMi41LDAuOSwyLjUsMi4yQzczLjUsMjEuNiw3Mi41LDIyLjUsNzEsMjIuNXpcIi8+XG4gICAgICAgICAgICAgICAgICAgIDxwb2x5Z29uIHBvaW50cz1cIjQwLjUsMTIuOCA1OC42LDEyLjggNTguNiwxOC4xIDUyLjQsMTguMSA1Mi40LDM1LjIgNDYuNiwzNS4yIDQ2LjYsMTguMSA0MC41LDE4LjEgXCIvPlxuICAgICAgICAgICAgICAgIDwvc3ZnPlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ0cmV6b3Jjb25uZWN0LWNsb3NlXCI+XG4gICAgICAgICAgICAgICAgICAgIDxzdmcgeD1cIjBweFwiIHk9XCIwcHhcIiB2aWV3Qm94PVwiMjQgMjQgNjAgNjBcIiB3aWR0aD1cIjI0cHhcIiBoZWlnaHQ9XCIyNHB4XCIgcHJlc2VydmVBc3BlY3RSYXRpbz1cInhNaW5ZTWluIG1lZXRcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxwb2x5Z29uIGNsYXNzPVwic3QwXCIgcG9pbnRzPVwiNDAsNjcuOSA0Mi4xLDcwIDU1LDU3LjEgNjcuOSw3MCA3MCw2Ny45IDU3LjEsNTUgNzAsNDIuMSA2Ny45LDQwIDU1LDUyLjkgNDIuMSw0MCA0MCw0Mi4xIDUyLjksNTUgXCIvPlxuICAgICAgICAgICAgICAgICAgICA8L3N2Zz5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cInRyZXpvcmNvbm5lY3QtYm9keVwiPlxuICAgICAgICAgICAgICAgIDxoMz5Qb3B1cCB3YXMgYmxvY2tlZDwvaDM+XG4gICAgICAgICAgICAgICAgPHA+UGxlYXNlIGNsaWNrIHRvIFwiQ29udGludWVcIiB0byBvcGVuIHBvcHVwIG1hbnVhbGx5PC9wPlxuICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9XCJ0cmV6b3Jjb25uZWN0LW9wZW5cIj5Db250aW51ZTwvYnV0dG9uPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuYDtcbmNvbnN0IHNob3dQb3B1cFJlcXVlc3QgPSAob3BlbiwgY2FuY2VsKSA9PiB7XG4gICAgaWYgKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKExBWUVSX0lEKSkge1xuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIGNvbnN0IGRpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgIGRpdi5pZCA9IExBWUVSX0lEO1xuICAgIGRpdi5jbGFzc05hbWUgPSAndHJlem9yY29ubmVjdC1jb250YWluZXInO1xuICAgIGRpdi5pbm5lckhUTUwgPSBIVE1MO1xuICAgIGlmIChkb2N1bWVudC5ib2R5KSB7XG4gICAgICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoZGl2KTtcbiAgICB9XG4gICAgY29uc3QgYnV0dG9uID0gZGl2LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoJ3RyZXpvcmNvbm5lY3Qtb3BlbicpWzBdO1xuICAgIGJ1dHRvbi5vbmNsaWNrID0gKCkgPT4ge1xuICAgICAgICBvcGVuKCk7XG4gICAgICAgIGlmIChkb2N1bWVudC5ib2R5KSB7XG4gICAgICAgICAgICBkb2N1bWVudC5ib2R5LnJlbW92ZUNoaWxkKGRpdik7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIGNvbnN0IGNsb3NlID0gZGl2LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoJ3RyZXpvcmNvbm5lY3QtY2xvc2UnKVswXTtcbiAgICBjbG9zZS5vbmNsaWNrID0gKCkgPT4ge1xuICAgICAgICBjYW5jZWwoKTtcbiAgICAgICAgaWYgKGRvY3VtZW50LmJvZHkpIHtcbiAgICAgICAgICAgIGRvY3VtZW50LmJvZHkucmVtb3ZlQ2hpbGQoZGl2KTtcbiAgICAgICAgfVxuICAgIH07XG59O1xuZXhwb3J0cy5zaG93UG9wdXBSZXF1ZXN0ID0gc2hvd1BvcHVwUmVxdWVzdDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNob3dQb3B1cFJlcXVlc3QuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@trezor/connect-web/lib/popup/showPopupRequest.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/connect-web/lib/webusb/button.js":
/*!***************************************************************!*\
  !*** ./node_modules/@trezor/connect-web/lib/webusb/button.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst render = (className = '', url) => {\n    const query = className || '.trezor-webusb-button';\n    const buttons = document.querySelectorAll(query);\n    const src = `${url}?${Date.now()}`;\n    buttons.forEach(b => {\n        if (b.getElementsByTagName('iframe').length < 1) {\n            const bounds = b.getBoundingClientRect();\n            const btnIframe = document.createElement('iframe');\n            btnIframe.frameBorder = '0';\n            btnIframe.width = `${Math.round(bounds.width)}px`;\n            btnIframe.height = `${Math.round(bounds.height)}px`;\n            btnIframe.style.position = 'absolute';\n            btnIframe.style.top = '0px';\n            btnIframe.style.left = '0px';\n            btnIframe.style.zIndex = '1';\n            btnIframe.setAttribute('allow', 'usb');\n            btnIframe.setAttribute('scrolling', 'no');\n            btnIframe.src = src;\n            b.append(btnIframe);\n        }\n    });\n};\nexports[\"default\"] = render;\n//# sourceMappingURL=button.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci9jb25uZWN0LXdlYi9saWIvd2VidXNiL2J1dHRvbi5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RDtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsSUFBSSxHQUFHLFdBQVc7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlDQUFpQyx5QkFBeUI7QUFDMUQsa0NBQWtDLDBCQUEwQjtBQUM1RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxrQkFBZTtBQUNmIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AdHJlem9yL2Nvbm5lY3Qtd2ViL2xpYi93ZWJ1c2IvYnV0dG9uLmpzPzUwMDgiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCByZW5kZXIgPSAoY2xhc3NOYW1lID0gJycsIHVybCkgPT4ge1xuICAgIGNvbnN0IHF1ZXJ5ID0gY2xhc3NOYW1lIHx8ICcudHJlem9yLXdlYnVzYi1idXR0b24nO1xuICAgIGNvbnN0IGJ1dHRvbnMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKHF1ZXJ5KTtcbiAgICBjb25zdCBzcmMgPSBgJHt1cmx9PyR7RGF0ZS5ub3coKX1gO1xuICAgIGJ1dHRvbnMuZm9yRWFjaChiID0+IHtcbiAgICAgICAgaWYgKGIuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ2lmcmFtZScpLmxlbmd0aCA8IDEpIHtcbiAgICAgICAgICAgIGNvbnN0IGJvdW5kcyA9IGIuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG4gICAgICAgICAgICBjb25zdCBidG5JZnJhbWUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpZnJhbWUnKTtcbiAgICAgICAgICAgIGJ0bklmcmFtZS5mcmFtZUJvcmRlciA9ICcwJztcbiAgICAgICAgICAgIGJ0bklmcmFtZS53aWR0aCA9IGAke01hdGgucm91bmQoYm91bmRzLndpZHRoKX1weGA7XG4gICAgICAgICAgICBidG5JZnJhbWUuaGVpZ2h0ID0gYCR7TWF0aC5yb3VuZChib3VuZHMuaGVpZ2h0KX1weGA7XG4gICAgICAgICAgICBidG5JZnJhbWUuc3R5bGUucG9zaXRpb24gPSAnYWJzb2x1dGUnO1xuICAgICAgICAgICAgYnRuSWZyYW1lLnN0eWxlLnRvcCA9ICcwcHgnO1xuICAgICAgICAgICAgYnRuSWZyYW1lLnN0eWxlLmxlZnQgPSAnMHB4JztcbiAgICAgICAgICAgIGJ0bklmcmFtZS5zdHlsZS56SW5kZXggPSAnMSc7XG4gICAgICAgICAgICBidG5JZnJhbWUuc2V0QXR0cmlidXRlKCdhbGxvdycsICd1c2InKTtcbiAgICAgICAgICAgIGJ0bklmcmFtZS5zZXRBdHRyaWJ1dGUoJ3Njcm9sbGluZycsICdubycpO1xuICAgICAgICAgICAgYnRuSWZyYW1lLnNyYyA9IHNyYztcbiAgICAgICAgICAgIGIuYXBwZW5kKGJ0bklmcmFtZSk7XG4gICAgICAgIH1cbiAgICB9KTtcbn07XG5leHBvcnRzLmRlZmF1bHQgPSByZW5kZXI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1idXR0b24uanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@trezor/connect-web/lib/webusb/button.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/connect/lib/constants/cardano.js":
/*!***************************************************************!*\
  !*** ./node_modules/@trezor/connect/lib/constants/cardano.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.NETWORK_IDS = exports.PROTOCOL_MAGICS = void 0;\nvar PROTOCOL_MAGICS;\n(function (PROTOCOL_MAGICS) {\n    PROTOCOL_MAGICS[PROTOCOL_MAGICS[\"mainnet\"] = 764824073] = \"mainnet\";\n    PROTOCOL_MAGICS[PROTOCOL_MAGICS[\"testnet_preprod\"] = 1] = \"testnet_preprod\";\n    PROTOCOL_MAGICS[PROTOCOL_MAGICS[\"testnet_preview\"] = 2] = \"testnet_preview\";\n    PROTOCOL_MAGICS[PROTOCOL_MAGICS[\"testnet_legacy\"] = 1097911063] = \"testnet_legacy\";\n})(PROTOCOL_MAGICS || (exports.PROTOCOL_MAGICS = PROTOCOL_MAGICS = {}));\nvar NETWORK_IDS;\n(function (NETWORK_IDS) {\n    NETWORK_IDS[NETWORK_IDS[\"mainnet\"] = 1] = \"mainnet\";\n    NETWORK_IDS[NETWORK_IDS[\"testnet\"] = 0] = \"testnet\";\n})(NETWORK_IDS || (exports.NETWORK_IDS = NETWORK_IDS = {}));\n//# sourceMappingURL=cardano.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci9jb25uZWN0L2xpYi9jb25zdGFudHMvY2FyZGFuby5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxtQkFBbUIsR0FBRyx1QkFBdUI7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxzQkFBc0IsdUJBQXVCLHVCQUF1QjtBQUNyRTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsa0JBQWtCLG1CQUFtQixtQkFBbUI7QUFDekQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0B0cmV6b3IvY29ubmVjdC9saWIvY29uc3RhbnRzL2NhcmRhbm8uanM/ZmM1ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuTkVUV09SS19JRFMgPSBleHBvcnRzLlBST1RPQ09MX01BR0lDUyA9IHZvaWQgMDtcbnZhciBQUk9UT0NPTF9NQUdJQ1M7XG4oZnVuY3Rpb24gKFBST1RPQ09MX01BR0lDUykge1xuICAgIFBST1RPQ09MX01BR0lDU1tQUk9UT0NPTF9NQUdJQ1NbXCJtYWlubmV0XCJdID0gNzY0ODI0MDczXSA9IFwibWFpbm5ldFwiO1xuICAgIFBST1RPQ09MX01BR0lDU1tQUk9UT0NPTF9NQUdJQ1NbXCJ0ZXN0bmV0X3ByZXByb2RcIl0gPSAxXSA9IFwidGVzdG5ldF9wcmVwcm9kXCI7XG4gICAgUFJPVE9DT0xfTUFHSUNTW1BST1RPQ09MX01BR0lDU1tcInRlc3RuZXRfcHJldmlld1wiXSA9IDJdID0gXCJ0ZXN0bmV0X3ByZXZpZXdcIjtcbiAgICBQUk9UT0NPTF9NQUdJQ1NbUFJPVE9DT0xfTUFHSUNTW1widGVzdG5ldF9sZWdhY3lcIl0gPSAxMDk3OTExMDYzXSA9IFwidGVzdG5ldF9sZWdhY3lcIjtcbn0pKFBST1RPQ09MX01BR0lDUyB8fCAoZXhwb3J0cy5QUk9UT0NPTF9NQUdJQ1MgPSBQUk9UT0NPTF9NQUdJQ1MgPSB7fSkpO1xudmFyIE5FVFdPUktfSURTO1xuKGZ1bmN0aW9uIChORVRXT1JLX0lEUykge1xuICAgIE5FVFdPUktfSURTW05FVFdPUktfSURTW1wibWFpbm5ldFwiXSA9IDFdID0gXCJtYWlubmV0XCI7XG4gICAgTkVUV09SS19JRFNbTkVUV09SS19JRFNbXCJ0ZXN0bmV0XCJdID0gMF0gPSBcInRlc3RuZXRcIjtcbn0pKE5FVFdPUktfSURTIHx8IChleHBvcnRzLk5FVFdPUktfSURTID0gTkVUV09SS19JRFMgPSB7fSkpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y2FyZGFuby5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@trezor/connect/lib/constants/cardano.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/connect/lib/constants/errors.js":
/*!**************************************************************!*\
  !*** ./node_modules/@trezor/connect/lib/constants/errors.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.LIBUSB_ERROR_MESSAGE = exports.serializeError = exports.TypedError = exports.TrezorError = exports.ERROR_CODES = void 0;\nexports.ERROR_CODES = {\n    Init_NotInitialized: 'TrezorConnect not initialized',\n    Init_AlreadyInitialized: 'TrezorConnect has been already initialized',\n    Init_IframeBlocked: 'Iframe blocked',\n    Init_IframeTimeout: 'Iframe timeout',\n    Init_ManifestMissing: 'Manifest not set. Read more at https://github.com/trezor/trezor-suite/blob/develop/docs/packages/connect/index.md',\n    Popup_ConnectionMissing: 'Unable to establish connection with iframe',\n    Transport_Missing: 'Transport is missing',\n    Transport_InvalidProtobuf: '',\n    Method_InvalidPackage: 'This package is not suitable to work with browser. Use @trezor/connect-web package instead',\n    Method_InvalidParameter: '',\n    Method_NotAllowed: 'Method not allowed for this configuration',\n    Method_PermissionsNotGranted: 'Permissions not granted',\n    Method_Cancel: 'Cancelled',\n    Method_Interrupted: 'Popup closed',\n    Method_UnknownCoin: 'Coin not found',\n    Method_AddressNotMatch: 'Addresses do not match',\n    Method_FirmwareUpdate_DownloadFailed: 'Failed to download firmware binary',\n    Method_Discovery_BundleException: '',\n    Method_Override: 'override',\n    Method_NoResponse: 'Call resolved without response',\n    Backend_NotSupported: 'BlockchainLink settings not found in coins.json',\n    Backend_WorkerMissing: '',\n    Backend_Disconnected: 'Backend disconnected',\n    Backend_Invalid: 'Invalid backend',\n    Backend_Error: '',\n    Runtime: '',\n    Device_NotFound: 'Device not found',\n    Device_InitializeFailed: '',\n    Device_FwException: '',\n    Device_ModeException: '',\n    Device_Disconnected: 'Device disconnected',\n    Device_UsedElsewhere: 'Device is used in another window',\n    Device_InvalidState: 'Passphrase is incorrect',\n    Device_CallInProgress: 'Device call in progress',\n};\nclass TrezorError extends Error {\n    constructor(code, message) {\n        super(message);\n        this.code = code;\n        this.message = message;\n    }\n}\nexports.TrezorError = TrezorError;\nconst TypedError = (id, message) => new TrezorError(id, message || exports.ERROR_CODES[id]);\nexports.TypedError = TypedError;\nconst serializeError = (payload) => {\n    if (payload && payload.error instanceof Error) {\n        return { error: payload.error.message, code: payload.error.code };\n    }\n    return payload;\n};\nexports.serializeError = serializeError;\nexports.LIBUSB_ERROR_MESSAGE = 'LIBUSB_ERROR';\n//# sourceMappingURL=errors.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci9jb25uZWN0L2xpYi9jb25zdGFudHMvZXJyb3JzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDRCQUE0QixHQUFHLHNCQUFzQixHQUFHLGtCQUFrQixHQUFHLG1CQUFtQixHQUFHLG1CQUFtQjtBQUN0SCxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CO0FBQ0Esa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCO0FBQ3RCLDRCQUE0QjtBQUM1QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHRyZXpvci9jb25uZWN0L2xpYi9jb25zdGFudHMvZXJyb3JzLmpzPzQ2MzkiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkxJQlVTQl9FUlJPUl9NRVNTQUdFID0gZXhwb3J0cy5zZXJpYWxpemVFcnJvciA9IGV4cG9ydHMuVHlwZWRFcnJvciA9IGV4cG9ydHMuVHJlem9yRXJyb3IgPSBleHBvcnRzLkVSUk9SX0NPREVTID0gdm9pZCAwO1xuZXhwb3J0cy5FUlJPUl9DT0RFUyA9IHtcbiAgICBJbml0X05vdEluaXRpYWxpemVkOiAnVHJlem9yQ29ubmVjdCBub3QgaW5pdGlhbGl6ZWQnLFxuICAgIEluaXRfQWxyZWFkeUluaXRpYWxpemVkOiAnVHJlem9yQ29ubmVjdCBoYXMgYmVlbiBhbHJlYWR5IGluaXRpYWxpemVkJyxcbiAgICBJbml0X0lmcmFtZUJsb2NrZWQ6ICdJZnJhbWUgYmxvY2tlZCcsXG4gICAgSW5pdF9JZnJhbWVUaW1lb3V0OiAnSWZyYW1lIHRpbWVvdXQnLFxuICAgIEluaXRfTWFuaWZlc3RNaXNzaW5nOiAnTWFuaWZlc3Qgbm90IHNldC4gUmVhZCBtb3JlIGF0IGh0dHBzOi8vZ2l0aHViLmNvbS90cmV6b3IvdHJlem9yLXN1aXRlL2Jsb2IvZGV2ZWxvcC9kb2NzL3BhY2thZ2VzL2Nvbm5lY3QvaW5kZXgubWQnLFxuICAgIFBvcHVwX0Nvbm5lY3Rpb25NaXNzaW5nOiAnVW5hYmxlIHRvIGVzdGFibGlzaCBjb25uZWN0aW9uIHdpdGggaWZyYW1lJyxcbiAgICBUcmFuc3BvcnRfTWlzc2luZzogJ1RyYW5zcG9ydCBpcyBtaXNzaW5nJyxcbiAgICBUcmFuc3BvcnRfSW52YWxpZFByb3RvYnVmOiAnJyxcbiAgICBNZXRob2RfSW52YWxpZFBhY2thZ2U6ICdUaGlzIHBhY2thZ2UgaXMgbm90IHN1aXRhYmxlIHRvIHdvcmsgd2l0aCBicm93c2VyLiBVc2UgQHRyZXpvci9jb25uZWN0LXdlYiBwYWNrYWdlIGluc3RlYWQnLFxuICAgIE1ldGhvZF9JbnZhbGlkUGFyYW1ldGVyOiAnJyxcbiAgICBNZXRob2RfTm90QWxsb3dlZDogJ01ldGhvZCBub3QgYWxsb3dlZCBmb3IgdGhpcyBjb25maWd1cmF0aW9uJyxcbiAgICBNZXRob2RfUGVybWlzc2lvbnNOb3RHcmFudGVkOiAnUGVybWlzc2lvbnMgbm90IGdyYW50ZWQnLFxuICAgIE1ldGhvZF9DYW5jZWw6ICdDYW5jZWxsZWQnLFxuICAgIE1ldGhvZF9JbnRlcnJ1cHRlZDogJ1BvcHVwIGNsb3NlZCcsXG4gICAgTWV0aG9kX1Vua25vd25Db2luOiAnQ29pbiBub3QgZm91bmQnLFxuICAgIE1ldGhvZF9BZGRyZXNzTm90TWF0Y2g6ICdBZGRyZXNzZXMgZG8gbm90IG1hdGNoJyxcbiAgICBNZXRob2RfRmlybXdhcmVVcGRhdGVfRG93bmxvYWRGYWlsZWQ6ICdGYWlsZWQgdG8gZG93bmxvYWQgZmlybXdhcmUgYmluYXJ5JyxcbiAgICBNZXRob2RfRGlzY292ZXJ5X0J1bmRsZUV4Y2VwdGlvbjogJycsXG4gICAgTWV0aG9kX092ZXJyaWRlOiAnb3ZlcnJpZGUnLFxuICAgIE1ldGhvZF9Ob1Jlc3BvbnNlOiAnQ2FsbCByZXNvbHZlZCB3aXRob3V0IHJlc3BvbnNlJyxcbiAgICBCYWNrZW5kX05vdFN1cHBvcnRlZDogJ0Jsb2NrY2hhaW5MaW5rIHNldHRpbmdzIG5vdCBmb3VuZCBpbiBjb2lucy5qc29uJyxcbiAgICBCYWNrZW5kX1dvcmtlck1pc3Npbmc6ICcnLFxuICAgIEJhY2tlbmRfRGlzY29ubmVjdGVkOiAnQmFja2VuZCBkaXNjb25uZWN0ZWQnLFxuICAgIEJhY2tlbmRfSW52YWxpZDogJ0ludmFsaWQgYmFja2VuZCcsXG4gICAgQmFja2VuZF9FcnJvcjogJycsXG4gICAgUnVudGltZTogJycsXG4gICAgRGV2aWNlX05vdEZvdW5kOiAnRGV2aWNlIG5vdCBmb3VuZCcsXG4gICAgRGV2aWNlX0luaXRpYWxpemVGYWlsZWQ6ICcnLFxuICAgIERldmljZV9Gd0V4Y2VwdGlvbjogJycsXG4gICAgRGV2aWNlX01vZGVFeGNlcHRpb246ICcnLFxuICAgIERldmljZV9EaXNjb25uZWN0ZWQ6ICdEZXZpY2UgZGlzY29ubmVjdGVkJyxcbiAgICBEZXZpY2VfVXNlZEVsc2V3aGVyZTogJ0RldmljZSBpcyB1c2VkIGluIGFub3RoZXIgd2luZG93JyxcbiAgICBEZXZpY2VfSW52YWxpZFN0YXRlOiAnUGFzc3BocmFzZSBpcyBpbmNvcnJlY3QnLFxuICAgIERldmljZV9DYWxsSW5Qcm9ncmVzczogJ0RldmljZSBjYWxsIGluIHByb2dyZXNzJyxcbn07XG5jbGFzcyBUcmV6b3JFcnJvciBleHRlbmRzIEVycm9yIHtcbiAgICBjb25zdHJ1Y3Rvcihjb2RlLCBtZXNzYWdlKSB7XG4gICAgICAgIHN1cGVyKG1lc3NhZ2UpO1xuICAgICAgICB0aGlzLmNvZGUgPSBjb2RlO1xuICAgICAgICB0aGlzLm1lc3NhZ2UgPSBtZXNzYWdlO1xuICAgIH1cbn1cbmV4cG9ydHMuVHJlem9yRXJyb3IgPSBUcmV6b3JFcnJvcjtcbmNvbnN0IFR5cGVkRXJyb3IgPSAoaWQsIG1lc3NhZ2UpID0+IG5ldyBUcmV6b3JFcnJvcihpZCwgbWVzc2FnZSB8fCBleHBvcnRzLkVSUk9SX0NPREVTW2lkXSk7XG5leHBvcnRzLlR5cGVkRXJyb3IgPSBUeXBlZEVycm9yO1xuY29uc3Qgc2VyaWFsaXplRXJyb3IgPSAocGF5bG9hZCkgPT4ge1xuICAgIGlmIChwYXlsb2FkICYmIHBheWxvYWQuZXJyb3IgaW5zdGFuY2VvZiBFcnJvcikge1xuICAgICAgICByZXR1cm4geyBlcnJvcjogcGF5bG9hZC5lcnJvci5tZXNzYWdlLCBjb2RlOiBwYXlsb2FkLmVycm9yLmNvZGUgfTtcbiAgICB9XG4gICAgcmV0dXJuIHBheWxvYWQ7XG59O1xuZXhwb3J0cy5zZXJpYWxpemVFcnJvciA9IHNlcmlhbGl6ZUVycm9yO1xuZXhwb3J0cy5MSUJVU0JfRVJST1JfTUVTU0FHRSA9ICdMSUJVU0JfRVJST1InO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZXJyb3JzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@trezor/connect/lib/constants/errors.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/connect/lib/constants/index.js":
/*!*************************************************************!*\
  !*** ./node_modules/@trezor/connect/lib/constants/index.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PROTO = exports.NEM = exports.CARDANO = exports.NETWORK = exports.ERRORS = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.mjs\");\nexports.ERRORS = tslib_1.__importStar(__webpack_require__(/*! ./errors */ \"./node_modules/@trezor/connect/lib/constants/errors.js\"));\nexports.NETWORK = tslib_1.__importStar(__webpack_require__(/*! ./network */ \"./node_modules/@trezor/connect/lib/constants/network.js\"));\nexports.CARDANO = tslib_1.__importStar(__webpack_require__(/*! ./cardano */ \"./node_modules/@trezor/connect/lib/constants/cardano.js\"));\nexports.NEM = tslib_1.__importStar(__webpack_require__(/*! ./nem */ \"./node_modules/@trezor/connect/lib/constants/nem.js\"));\nexports.PROTO = tslib_1.__importStar(__webpack_require__(/*! @trezor/protobuf/lib/messages-schema */ \"./node_modules/@trezor/protobuf/lib/messages-schema.js\"));\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci9jb25uZWN0L2xpYi9jb25zdGFudHMvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsYUFBYSxHQUFHLFdBQVcsR0FBRyxlQUFlLEdBQUcsZUFBZSxHQUFHLGNBQWM7QUFDaEYsZ0JBQWdCLG1CQUFPLENBQUMsaURBQU87QUFDL0IsY0FBYyx3QkFBd0IsbUJBQU8sQ0FBQyx3RUFBVTtBQUN4RCxlQUFlLHdCQUF3QixtQkFBTyxDQUFDLDBFQUFXO0FBQzFELGVBQWUsd0JBQXdCLG1CQUFPLENBQUMsMEVBQVc7QUFDMUQsV0FBVyx3QkFBd0IsbUJBQU8sQ0FBQyxrRUFBTztBQUNsRCxhQUFhLHdCQUF3QixtQkFBTyxDQUFDLG9HQUFzQztBQUNuRiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHRyZXpvci9jb25uZWN0L2xpYi9jb25zdGFudHMvaW5kZXguanM/NmE5MyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuUFJPVE8gPSBleHBvcnRzLk5FTSA9IGV4cG9ydHMuQ0FSREFOTyA9IGV4cG9ydHMuTkVUV09SSyA9IGV4cG9ydHMuRVJST1JTID0gdm9pZCAwO1xuY29uc3QgdHNsaWJfMSA9IHJlcXVpcmUoXCJ0c2xpYlwiKTtcbmV4cG9ydHMuRVJST1JTID0gdHNsaWJfMS5fX2ltcG9ydFN0YXIocmVxdWlyZShcIi4vZXJyb3JzXCIpKTtcbmV4cG9ydHMuTkVUV09SSyA9IHRzbGliXzEuX19pbXBvcnRTdGFyKHJlcXVpcmUoXCIuL25ldHdvcmtcIikpO1xuZXhwb3J0cy5DQVJEQU5PID0gdHNsaWJfMS5fX2ltcG9ydFN0YXIocmVxdWlyZShcIi4vY2FyZGFub1wiKSk7XG5leHBvcnRzLk5FTSA9IHRzbGliXzEuX19pbXBvcnRTdGFyKHJlcXVpcmUoXCIuL25lbVwiKSk7XG5leHBvcnRzLlBST1RPID0gdHNsaWJfMS5fX2ltcG9ydFN0YXIocmVxdWlyZShcIkB0cmV6b3IvcHJvdG9idWYvbGliL21lc3NhZ2VzLXNjaGVtYVwiKSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@trezor/connect/lib/constants/index.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/connect/lib/constants/nem.js":
/*!***********************************************************!*\
  !*** ./node_modules/@trezor/connect/lib/constants/nem.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.EnumTxVersion = exports.TxVersion = exports.EnumTxType = exports.TxType = exports.EnumNetworks = exports.Networks = void 0;\nconst schema_utils_1 = __webpack_require__(/*! @trezor/schema-utils */ \"./node_modules/@trezor/schema-utils/lib/index.js\");\nvar Networks;\n(function (Networks) {\n    Networks[Networks[\"mainnet\"] = 104] = \"mainnet\";\n    Networks[Networks[\"testnet\"] = 152] = \"testnet\";\n    Networks[Networks[\"mijin\"] = 96] = \"mijin\";\n})(Networks || (exports.Networks = Networks = {}));\nexports.EnumNetworks = schema_utils_1.Type.Enum(Networks);\nvar TxType;\n(function (TxType) {\n    TxType[TxType[\"TRANSFER\"] = 257] = \"TRANSFER\";\n    TxType[TxType[\"COSIGNING\"] = 258] = \"COSIGNING\";\n    TxType[TxType[\"IMPORTANCE_TRANSFER\"] = 2049] = \"IMPORTANCE_TRANSFER\";\n    TxType[TxType[\"AGGREGATE_MODIFICATION\"] = 4097] = \"AGGREGATE_MODIFICATION\";\n    TxType[TxType[\"MULTISIG_SIGNATURE\"] = 4098] = \"MULTISIG_SIGNATURE\";\n    TxType[TxType[\"MULTISIG\"] = 4100] = \"MULTISIG\";\n    TxType[TxType[\"PROVISION_NAMESPACE\"] = 8193] = \"PROVISION_NAMESPACE\";\n    TxType[TxType[\"MOSAIC_CREATION\"] = 16385] = \"MOSAIC_CREATION\";\n    TxType[TxType[\"SUPPLY_CHANGE\"] = 16386] = \"SUPPLY_CHANGE\";\n})(TxType || (exports.TxType = TxType = {}));\nexports.EnumTxType = schema_utils_1.Type.Enum(TxType);\nvar TxVersion;\n(function (TxVersion) {\n    TxVersion[TxVersion[\"mainnet\"] = 1744830464] = \"mainnet\";\n    TxVersion[TxVersion[\"testnet\"] = -1744830464] = \"testnet\";\n    TxVersion[TxVersion[\"mijin\"] = 1610612736] = \"mijin\";\n})(TxVersion || (exports.TxVersion = TxVersion = {}));\nexports.EnumTxVersion = schema_utils_1.Type.Enum(TxVersion);\n//# sourceMappingURL=nem.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci9jb25uZWN0L2xpYi9jb25zdGFudHMvbmVtLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHFCQUFxQixHQUFHLGlCQUFpQixHQUFHLGtCQUFrQixHQUFHLGNBQWMsR0FBRyxvQkFBb0IsR0FBRyxnQkFBZ0I7QUFDekgsdUJBQXVCLG1CQUFPLENBQUMsOEVBQXNCO0FBQ3JEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLGVBQWUsZ0JBQWdCLGdCQUFnQjtBQUNoRCxvQkFBb0I7QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsYUFBYSxjQUFjLGNBQWM7QUFDMUMsa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLGdCQUFnQixpQkFBaUIsaUJBQWlCO0FBQ25ELHFCQUFxQjtBQUNyQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHRyZXpvci9jb25uZWN0L2xpYi9jb25zdGFudHMvbmVtLmpzP2E3OTIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkVudW1UeFZlcnNpb24gPSBleHBvcnRzLlR4VmVyc2lvbiA9IGV4cG9ydHMuRW51bVR4VHlwZSA9IGV4cG9ydHMuVHhUeXBlID0gZXhwb3J0cy5FbnVtTmV0d29ya3MgPSBleHBvcnRzLk5ldHdvcmtzID0gdm9pZCAwO1xuY29uc3Qgc2NoZW1hX3V0aWxzXzEgPSByZXF1aXJlKFwiQHRyZXpvci9zY2hlbWEtdXRpbHNcIik7XG52YXIgTmV0d29ya3M7XG4oZnVuY3Rpb24gKE5ldHdvcmtzKSB7XG4gICAgTmV0d29ya3NbTmV0d29ya3NbXCJtYWlubmV0XCJdID0gMTA0XSA9IFwibWFpbm5ldFwiO1xuICAgIE5ldHdvcmtzW05ldHdvcmtzW1widGVzdG5ldFwiXSA9IDE1Ml0gPSBcInRlc3RuZXRcIjtcbiAgICBOZXR3b3Jrc1tOZXR3b3Jrc1tcIm1pamluXCJdID0gOTZdID0gXCJtaWppblwiO1xufSkoTmV0d29ya3MgfHwgKGV4cG9ydHMuTmV0d29ya3MgPSBOZXR3b3JrcyA9IHt9KSk7XG5leHBvcnRzLkVudW1OZXR3b3JrcyA9IHNjaGVtYV91dGlsc18xLlR5cGUuRW51bShOZXR3b3Jrcyk7XG52YXIgVHhUeXBlO1xuKGZ1bmN0aW9uIChUeFR5cGUpIHtcbiAgICBUeFR5cGVbVHhUeXBlW1wiVFJBTlNGRVJcIl0gPSAyNTddID0gXCJUUkFOU0ZFUlwiO1xuICAgIFR4VHlwZVtUeFR5cGVbXCJDT1NJR05JTkdcIl0gPSAyNThdID0gXCJDT1NJR05JTkdcIjtcbiAgICBUeFR5cGVbVHhUeXBlW1wiSU1QT1JUQU5DRV9UUkFOU0ZFUlwiXSA9IDIwNDldID0gXCJJTVBPUlRBTkNFX1RSQU5TRkVSXCI7XG4gICAgVHhUeXBlW1R4VHlwZVtcIkFHR1JFR0FURV9NT0RJRklDQVRJT05cIl0gPSA0MDk3XSA9IFwiQUdHUkVHQVRFX01PRElGSUNBVElPTlwiO1xuICAgIFR4VHlwZVtUeFR5cGVbXCJNVUxUSVNJR19TSUdOQVRVUkVcIl0gPSA0MDk4XSA9IFwiTVVMVElTSUdfU0lHTkFUVVJFXCI7XG4gICAgVHhUeXBlW1R4VHlwZVtcIk1VTFRJU0lHXCJdID0gNDEwMF0gPSBcIk1VTFRJU0lHXCI7XG4gICAgVHhUeXBlW1R4VHlwZVtcIlBST1ZJU0lPTl9OQU1FU1BBQ0VcIl0gPSA4MTkzXSA9IFwiUFJPVklTSU9OX05BTUVTUEFDRVwiO1xuICAgIFR4VHlwZVtUeFR5cGVbXCJNT1NBSUNfQ1JFQVRJT05cIl0gPSAxNjM4NV0gPSBcIk1PU0FJQ19DUkVBVElPTlwiO1xuICAgIFR4VHlwZVtUeFR5cGVbXCJTVVBQTFlfQ0hBTkdFXCJdID0gMTYzODZdID0gXCJTVVBQTFlfQ0hBTkdFXCI7XG59KShUeFR5cGUgfHwgKGV4cG9ydHMuVHhUeXBlID0gVHhUeXBlID0ge30pKTtcbmV4cG9ydHMuRW51bVR4VHlwZSA9IHNjaGVtYV91dGlsc18xLlR5cGUuRW51bShUeFR5cGUpO1xudmFyIFR4VmVyc2lvbjtcbihmdW5jdGlvbiAoVHhWZXJzaW9uKSB7XG4gICAgVHhWZXJzaW9uW1R4VmVyc2lvbltcIm1haW5uZXRcIl0gPSAxNzQ0ODMwNDY0XSA9IFwibWFpbm5ldFwiO1xuICAgIFR4VmVyc2lvbltUeFZlcnNpb25bXCJ0ZXN0bmV0XCJdID0gLTE3NDQ4MzA0NjRdID0gXCJ0ZXN0bmV0XCI7XG4gICAgVHhWZXJzaW9uW1R4VmVyc2lvbltcIm1pamluXCJdID0gMTYxMDYxMjczNl0gPSBcIm1pamluXCI7XG59KShUeFZlcnNpb24gfHwgKGV4cG9ydHMuVHhWZXJzaW9uID0gVHhWZXJzaW9uID0ge30pKTtcbmV4cG9ydHMuRW51bVR4VmVyc2lvbiA9IHNjaGVtYV91dGlsc18xLlR5cGUuRW51bShUeFZlcnNpb24pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bmVtLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@trezor/connect/lib/constants/nem.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/connect/lib/constants/network.js":
/*!***************************************************************!*\
  !*** ./node_modules/@trezor/connect/lib/constants/network.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.MODULES = exports.TYPES = void 0;\nexports.TYPES = {\n    bitcoin: 'Bitcoin',\n    ethereum: 'Ethereum',\n    eos: 'Eos',\n    nem: 'NEM',\n    stellar: 'Stellar',\n    cardano: 'Cardano',\n    ripple: 'Ripple',\n    tezos: 'Tezos',\n    binance: 'Binance',\n    solana: 'Solana',\n};\nexports.MODULES = [\n    'binance',\n    'cardano',\n    'eos',\n    'ethereum',\n    'nem',\n    'ripple',\n    'solana',\n    'stellar',\n    'tezos',\n];\n//# sourceMappingURL=network.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci9jb25uZWN0L2xpYi9jb25zdGFudHMvbmV0d29yay5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxlQUFlLEdBQUcsYUFBYTtBQUMvQixhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AdHJlem9yL2Nvbm5lY3QvbGliL2NvbnN0YW50cy9uZXR3b3JrLmpzP2RhMmYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLk1PRFVMRVMgPSBleHBvcnRzLlRZUEVTID0gdm9pZCAwO1xuZXhwb3J0cy5UWVBFUyA9IHtcbiAgICBiaXRjb2luOiAnQml0Y29pbicsXG4gICAgZXRoZXJldW06ICdFdGhlcmV1bScsXG4gICAgZW9zOiAnRW9zJyxcbiAgICBuZW06ICdORU0nLFxuICAgIHN0ZWxsYXI6ICdTdGVsbGFyJyxcbiAgICBjYXJkYW5vOiAnQ2FyZGFubycsXG4gICAgcmlwcGxlOiAnUmlwcGxlJyxcbiAgICB0ZXpvczogJ1Rlem9zJyxcbiAgICBiaW5hbmNlOiAnQmluYW5jZScsXG4gICAgc29sYW5hOiAnU29sYW5hJyxcbn07XG5leHBvcnRzLk1PRFVMRVMgPSBbXG4gICAgJ2JpbmFuY2UnLFxuICAgICdjYXJkYW5vJyxcbiAgICAnZW9zJyxcbiAgICAnZXRoZXJldW0nLFxuICAgICduZW0nLFxuICAgICdyaXBwbGUnLFxuICAgICdzb2xhbmEnLFxuICAgICdzdGVsbGFyJyxcbiAgICAndGV6b3MnLFxuXTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW5ldHdvcmsuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@trezor/connect/lib/constants/network.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/connect/lib/data/config.js":
/*!*********************************************************!*\
  !*** ./node_modules/@trezor/connect/lib/data/config.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.config = void 0;\nconst constants_1 = __webpack_require__(/*! @trezor/transport/lib/constants */ \"./node_modules/@trezor/transport/lib/constants.js\");\nexports.config = {\n    webusb: constants_1.TREZOR_USB_DESCRIPTORS,\n    whitelist: [\n        { origin: 'chrome-extension://imloifkgjagghnncjkhggdhalmcnfklk', priority: 1 },\n        { origin: 'chrome-extension://niebkpllfhmpfbffbfifagfgoamhpflf', priority: 1 },\n        { origin: 'file://', priority: 2 },\n        { origin: 'trezor.io', priority: 0 },\n        { origin: 'sldev.cz', priority: 0 },\n        { origin: 'localhost', priority: 0 },\n        { origin: 'trezoriovpjcahpzkrewelclulmszwbqpzmzgub37gbcjlvluxtruqad.onion', priority: 0 },\n    ],\n    management: [{ origin: 'trezor.io' }, { origin: 'sldev.cz' }, { origin: 'localhost' }],\n    knownHosts: [\n        {\n            origin: 'imloifkgjagghnncjkhggdhalmcnfklk',\n            label: 'Trezor Password Manager (Develop)',\n            icon: '',\n        },\n        { origin: 'niebkpllfhmpfbffbfifagfgoamhpflf', label: 'Trezor Password Manager', icon: '' },\n        {\n            origin: 'mnpfhpndmjholfdlhpkjfmjkgppmodaf',\n            label: 'MetaMask',\n            icon: '',\n        },\n        {\n            origin: 'webextension@metamask.io',\n            label: 'MetaMask',\n            icon: '',\n        },\n        {\n            origin: 'nkbihfbeogaeaoehlefnkodbefgpgknn',\n            label: 'MetaMask',\n            icon: '',\n        },\n        { origin: 'file://', label: ' ', icon: '' },\n    ],\n    onionDomains: {\n        'trezor.io': 'trezoriovpjcahpzkrewelclulmszwbqpzmzgub37gbcjlvluxtruqad.onion',\n    },\n    assets: [\n        {\n            name: 'coins',\n            url: './data/coins.json',\n        },\n        {\n            name: 'coinsEth',\n            url: './data/coins-eth.json',\n        },\n        {\n            name: 'bridge',\n            url: './data/bridge/releases.json',\n        },\n        {\n            name: 'firmware-t1b1',\n            url: './data/firmware/t1b1/releases.json',\n        },\n        {\n            name: 'firmware-t2t1',\n            url: './data/firmware/t2t1/releases.json',\n        },\n        {\n            name: 'firmware-t2b1',\n            url: './data/firmware/t2b1/releases.json',\n        },\n    ],\n    messages: './data/messages/messages.json',\n    supportedBrowsers: {\n        chrome: {\n            version: 59,\n            download: 'https://www.google.com/chrome/',\n            update: 'https://support.google.com/chrome/answer/95414',\n        },\n        chromium: {\n            version: 59,\n            download: 'https://www.chromium.org/',\n            update: 'https://www.chromium.org/',\n        },\n        electron: {\n            version: 0,\n            download: 'https://www.electronjs.org/',\n            update: 'https://www.electronjs.org/',\n        },\n        firefox: {\n            version: 54,\n            download: 'https://www.mozilla.org/en-US/firefox/new/',\n            update: 'https://support.mozilla.org/en-US/kb/update-firefox-latest-version',\n        },\n    },\n    supportedFirmware: [\n        {\n            coin: ['xrp', 'txrp'],\n            methods: ['getAccountInfo'],\n            min: { T1B1: '0', T2T1: '2.1.0' },\n            max: undefined,\n            comment: [\n                \"Since firmware 2.1.0 there is a new protobuf field 'destination_tag' in RippleSignTx\",\n            ],\n        },\n        {\n            coin: ['bnb'],\n            min: { T1B1: '1.9.0', T2T1: '2.3.0' },\n            comment: [\n                'There were protobuf backwards incompatible changes with introduction of 1.9.0/2.3.0 firmwares',\n            ],\n        },\n        {\n            coin: ['eth', 'tsep', 'tgor', 'thol'],\n            min: { T1B1: '1.8.0', T2T1: '2.1.0' },\n            comment: ['There were protobuf backwards incompatible changes.'],\n        },\n        {\n            coin: ['ada', 'tada'],\n            min: { T1B1: '0', T2T1: '2.4.3' },\n            comment: ['Since 2.4.3 there is initialize.derive_cardano message'],\n        },\n        {\n            methods: ['rippleGetAddress', 'rippleSignTransaction'],\n            min: { T1B1: '0', T2T1: '2.1.0' },\n            comment: [\n                \"Since firmware 2.1.0 there is a new protobuf field 'destination_tag' in RippleSignTx\",\n            ],\n        },\n        {\n            methods: ['cardanoGetAddress', 'cardanoGetPublicKey'],\n            min: { T1B1: '0', T2T1: '2.3.2' },\n            comment: ['Shelley fork support since firmware 2.3.2'],\n        },\n        {\n            methods: ['cardanoSignTransaction'],\n            min: { T1B1: '0', T2T1: '2.4.2' },\n            comment: ['Non-streamed signing no longer supported'],\n        },\n        {\n            methods: ['cardanoGetNativeScriptHash'],\n            min: { T1B1: '0', T2T1: '2.4.3' },\n            comment: ['Cardano GetNativeScriptHash call added in 2.4.3'],\n        },\n        {\n            methods: ['tezosSignTransaction'],\n            min: { T1B1: '0', T2T1: '2.1.8' },\n            comment: [\n                'Since 2.1.8 there are new protobuf fields in tezos transaction (Babylon fork)',\n            ],\n        },\n        {\n            methods: ['stellarSignTransaction'],\n            min: { T1B1: '1.9.0', T2T1: '2.3.0' },\n            comment: [\n                'There were protobuf backwards incompatible changes with introduction of 1.9.0/2.3.0 firmwares',\n            ],\n        },\n        {\n            capabilities: ['replaceTransaction', 'amountUnit'],\n            min: { T1B1: '1.9.4', T2T1: '2.3.5' },\n            comment: ['new sign tx process since 1.9.4/2.3.5'],\n        },\n        {\n            capabilities: ['decreaseOutput'],\n            min: { T1B1: '1.10.0', T2T1: '2.4.0' },\n            comment: ['allow reduce output in RBF transaction since 1.10.0/2.4.0'],\n        },\n        {\n            capabilities: ['eip1559'],\n            min: { T1B1: '1.10.4', T2T1: '2.4.2' },\n            comment: ['new eth transaction pricing mechanism (EIP1559) since 1.10.4/2.4.2'],\n        },\n        {\n            capabilities: ['taproot', 'signMessageNoScriptType'],\n            min: { T1B1: '1.10.4', T2T1: '2.4.3' },\n            comment: [\n                'new btc accounts taproot since 1.10.4/2.4.3 (BTC + TEST only)',\n                'SignMessage with no_script_type support',\n            ],\n        },\n        {\n            coin: ['dcr', 'tdcr'],\n            methods: ['signTransaction'],\n            min: { T1B1: '1.10.1', T2T1: '2.4.0' },\n            comment: [''],\n        },\n        {\n            methods: ['ethereumSignTypedData'],\n            min: { T1B1: '1.10.5', T2T1: '2.4.3' },\n            comment: ['EIP-712 typed signing support added in 1.10.5/2.4.3'],\n        },\n        {\n            capabilities: ['eip712-domain-only'],\n            min: { T1B1: '1.10.6', T2T1: '2.4.4' },\n            comment: ['EIP-712 domain-only signing, when primaryType=EIP712Domain'],\n        },\n        {\n            capabilities: ['coinjoin'],\n            methods: [\n                'authorizeCoinjoin',\n                'cancelCoinjoinAuthorization',\n                'getOwnershipId',\n                'getOwnershipProof',\n                'setBusy',\n                'unlockPath',\n            ],\n            min: { T1B1: '1.12.1', T2T1: '2.5.3' },\n        },\n        {\n            methods: ['showDeviceTutorial', 'authenticateDevice'],\n            min: { T1B1: '0', T2T1: '0', T2B1: '2.6.1' },\n            comment: ['Only on T2B1'],\n        },\n        {\n            methods: ['rebootToBootloader'],\n            min: { T1B1: '1.11.0', T2T1: '2.6.0' },\n        },\n        {\n            methods: ['getFirmwareHash'],\n            min: { T1B1: '1.11.1', T2T1: '2.5.1' },\n        },\n        {\n            methods: ['solanaGetPublicKey', 'solanaGetAddress', 'solanaSignTransaction'],\n            min: { T1B1: '0', T2T1: '2.6.4', T2B1: '2.6.4' },\n        },\n        {\n            capabilities: ['chunkify'],\n            min: { T1B1: '0', T2T1: '2.6.3', T2B1: '2.6.3' },\n            comment: [\n                \"Since firmware 2.6.3 there is a new protobuf field 'chunkify' in almost all getAddress and signTx methods\",\n            ],\n        },\n    ],\n};\n//# sourceMappingURL=config.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@trezor/connect/lib/data/config.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/connect/lib/data/connectSettings.js":
/*!******************************************************************!*\
  !*** ./node_modules/@trezor/connect/lib/data/connectSettings.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.parseConnectSettings = exports.corsValidator = exports.DEFAULT_PRIORITY = void 0;\nconst version_1 = __webpack_require__(/*! ./version */ \"./node_modules/@trezor/connect/lib/data/version.js\");\nexports.DEFAULT_PRIORITY = 2;\nconst initialSettings = {\n    configSrc: './data/config.json',\n    version: version_1.VERSION,\n    debug: false,\n    priority: exports.DEFAULT_PRIORITY,\n    trustedHost: true,\n    connectSrc: version_1.DEFAULT_DOMAIN,\n    iframeSrc: `${version_1.DEFAULT_DOMAIN}iframe.html`,\n    popup: false,\n    popupSrc: `${version_1.DEFAULT_DOMAIN}popup.html`,\n    webusbSrc: `${version_1.DEFAULT_DOMAIN}webusb.html`,\n    transports: undefined,\n    pendingTransportEvent: true,\n    env: 'node',\n    lazyLoad: false,\n    timestamp: new Date().getTime(),\n    interactionTimeout: 600,\n    sharedLogger: true,\n};\nconst parseManifest = (manifest) => {\n    if (!manifest)\n        return;\n    if (typeof manifest.email !== 'string')\n        return;\n    if (typeof manifest.appUrl !== 'string')\n        return;\n    return {\n        email: manifest.email,\n        appUrl: manifest.appUrl,\n    };\n};\nconst corsValidator = (url) => {\n    if (typeof url !== 'string')\n        return;\n    if (url.match(/^https:\\/\\/([A-Za-z0-9\\-_]+\\.)*trezor\\.io\\//))\n        return url;\n    if (url.match(/^https?:\\/\\/localhost:[58][0-9]{3}\\//))\n        return url;\n    if (url.match(/^https:\\/\\/([A-Za-z0-9\\-_]+\\.)*sldev\\.cz\\//))\n        return url;\n    if (url.match(/^https?:\\/\\/([A-Za-z0-9\\-_]+\\.)*trezoriovpjcahpzkrewelclulmszwbqpzmzgub37gbcjlvluxtruqad\\.onion\\//))\n        return url;\n};\nexports.corsValidator = corsValidator;\nconst parseConnectSettings = (input = {}) => {\n    var _a;\n    const settings = { ...initialSettings };\n    if ('debug' in input) {\n        if (typeof input.debug === 'boolean') {\n            settings.debug = input.debug;\n        }\n        else if (typeof input.debug === 'string') {\n            settings.debug = input.debug === 'true';\n        }\n    }\n    if (input.trustedHost === false) {\n        settings.trustedHost = input.trustedHost;\n    }\n    if (typeof input.connectSrc === 'string' && ((_a = input.connectSrc) === null || _a === void 0 ? void 0 : _a.startsWith('http'))) {\n        settings.connectSrc = (0, exports.corsValidator)(input.connectSrc);\n    }\n    else if (settings.trustedHost) {\n        settings.connectSrc = input.connectSrc;\n    }\n    const src = settings.connectSrc || version_1.DEFAULT_DOMAIN;\n    settings.iframeSrc = `${src}iframe.html`;\n    settings.popupSrc = `${src}popup.html`;\n    settings.webusbSrc = `${src}webusb.html`;\n    if (typeof input.transportReconnect === 'boolean') {\n        settings.transportReconnect = input.transportReconnect;\n    }\n    if (typeof input.webusb === 'boolean') {\n        settings.webusb = input.webusb;\n    }\n    if (Array.isArray(input.transports)) {\n        settings.transports = input.transports;\n    }\n    if (typeof input.popup === 'boolean') {\n        settings.popup = input.popup;\n    }\n    if (typeof input.lazyLoad === 'boolean') {\n        settings.lazyLoad = input.lazyLoad;\n    }\n    if (typeof input.pendingTransportEvent === 'boolean') {\n        settings.pendingTransportEvent = input.pendingTransportEvent;\n    }\n    if (typeof input.extension === 'string') {\n        settings.extension = input.extension;\n    }\n    if (typeof input.env === 'string') {\n        settings.env = input.env;\n    }\n    if (typeof input.timestamp === 'number') {\n        settings.timestamp = input.timestamp;\n    }\n    if (typeof input.interactionTimeout === 'number') {\n        settings.interactionTimeout = input.interactionTimeout;\n    }\n    if (typeof input.manifest === 'object') {\n        settings.manifest = parseManifest(input.manifest);\n    }\n    if (typeof input.sharedLogger === 'boolean') {\n        settings.sharedLogger = input.sharedLogger;\n    }\n    return settings;\n};\nexports.parseConnectSettings = parseConnectSettings;\n//# sourceMappingURL=connectSettings.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci9jb25uZWN0L2xpYi9kYXRhL2Nvbm5lY3RTZXR0aW5ncy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCw0QkFBNEIsR0FBRyxxQkFBcUIsR0FBRyx3QkFBd0I7QUFDL0Usa0JBQWtCLG1CQUFPLENBQUMscUVBQVc7QUFDckMsd0JBQXdCO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLHlCQUF5QjtBQUMzQztBQUNBLGlCQUFpQix5QkFBeUI7QUFDMUMsa0JBQWtCLHlCQUF5QjtBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1EQUFtRCxFQUFFO0FBQ3JEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQix3Q0FBd0M7QUFDeEM7QUFDQSx1QkFBdUI7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLElBQUk7QUFDaEMsMkJBQTJCLElBQUk7QUFDL0IsNEJBQTRCLElBQUk7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QjtBQUM1QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHRyZXpvci9jb25uZWN0L2xpYi9kYXRhL2Nvbm5lY3RTZXR0aW5ncy5qcz8wNThjIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5wYXJzZUNvbm5lY3RTZXR0aW5ncyA9IGV4cG9ydHMuY29yc1ZhbGlkYXRvciA9IGV4cG9ydHMuREVGQVVMVF9QUklPUklUWSA9IHZvaWQgMDtcbmNvbnN0IHZlcnNpb25fMSA9IHJlcXVpcmUoXCIuL3ZlcnNpb25cIik7XG5leHBvcnRzLkRFRkFVTFRfUFJJT1JJVFkgPSAyO1xuY29uc3QgaW5pdGlhbFNldHRpbmdzID0ge1xuICAgIGNvbmZpZ1NyYzogJy4vZGF0YS9jb25maWcuanNvbicsXG4gICAgdmVyc2lvbjogdmVyc2lvbl8xLlZFUlNJT04sXG4gICAgZGVidWc6IGZhbHNlLFxuICAgIHByaW9yaXR5OiBleHBvcnRzLkRFRkFVTFRfUFJJT1JJVFksXG4gICAgdHJ1c3RlZEhvc3Q6IHRydWUsXG4gICAgY29ubmVjdFNyYzogdmVyc2lvbl8xLkRFRkFVTFRfRE9NQUlOLFxuICAgIGlmcmFtZVNyYzogYCR7dmVyc2lvbl8xLkRFRkFVTFRfRE9NQUlOfWlmcmFtZS5odG1sYCxcbiAgICBwb3B1cDogZmFsc2UsXG4gICAgcG9wdXBTcmM6IGAke3ZlcnNpb25fMS5ERUZBVUxUX0RPTUFJTn1wb3B1cC5odG1sYCxcbiAgICB3ZWJ1c2JTcmM6IGAke3ZlcnNpb25fMS5ERUZBVUxUX0RPTUFJTn13ZWJ1c2IuaHRtbGAsXG4gICAgdHJhbnNwb3J0czogdW5kZWZpbmVkLFxuICAgIHBlbmRpbmdUcmFuc3BvcnRFdmVudDogdHJ1ZSxcbiAgICBlbnY6ICdub2RlJyxcbiAgICBsYXp5TG9hZDogZmFsc2UsXG4gICAgdGltZXN0YW1wOiBuZXcgRGF0ZSgpLmdldFRpbWUoKSxcbiAgICBpbnRlcmFjdGlvblRpbWVvdXQ6IDYwMCxcbiAgICBzaGFyZWRMb2dnZXI6IHRydWUsXG59O1xuY29uc3QgcGFyc2VNYW5pZmVzdCA9IChtYW5pZmVzdCkgPT4ge1xuICAgIGlmICghbWFuaWZlc3QpXG4gICAgICAgIHJldHVybjtcbiAgICBpZiAodHlwZW9mIG1hbmlmZXN0LmVtYWlsICE9PSAnc3RyaW5nJylcbiAgICAgICAgcmV0dXJuO1xuICAgIGlmICh0eXBlb2YgbWFuaWZlc3QuYXBwVXJsICE9PSAnc3RyaW5nJylcbiAgICAgICAgcmV0dXJuO1xuICAgIHJldHVybiB7XG4gICAgICAgIGVtYWlsOiBtYW5pZmVzdC5lbWFpbCxcbiAgICAgICAgYXBwVXJsOiBtYW5pZmVzdC5hcHBVcmwsXG4gICAgfTtcbn07XG5jb25zdCBjb3JzVmFsaWRhdG9yID0gKHVybCkgPT4ge1xuICAgIGlmICh0eXBlb2YgdXJsICE9PSAnc3RyaW5nJylcbiAgICAgICAgcmV0dXJuO1xuICAgIGlmICh1cmwubWF0Y2goL15odHRwczpcXC9cXC8oW0EtWmEtejAtOVxcLV9dK1xcLikqdHJlem9yXFwuaW9cXC8vKSlcbiAgICAgICAgcmV0dXJuIHVybDtcbiAgICBpZiAodXJsLm1hdGNoKC9eaHR0cHM/OlxcL1xcL2xvY2FsaG9zdDpbNThdWzAtOV17M31cXC8vKSlcbiAgICAgICAgcmV0dXJuIHVybDtcbiAgICBpZiAodXJsLm1hdGNoKC9eaHR0cHM6XFwvXFwvKFtBLVphLXowLTlcXC1fXStcXC4pKnNsZGV2XFwuY3pcXC8vKSlcbiAgICAgICAgcmV0dXJuIHVybDtcbiAgICBpZiAodXJsLm1hdGNoKC9eaHR0cHM/OlxcL1xcLyhbQS1aYS16MC05XFwtX10rXFwuKSp0cmV6b3Jpb3ZwamNhaHB6a3Jld2VsY2x1bG1zendicXB6bXpndWIzN2diY2psdmx1eHRydXFhZFxcLm9uaW9uXFwvLykpXG4gICAgICAgIHJldHVybiB1cmw7XG59O1xuZXhwb3J0cy5jb3JzVmFsaWRhdG9yID0gY29yc1ZhbGlkYXRvcjtcbmNvbnN0IHBhcnNlQ29ubmVjdFNldHRpbmdzID0gKGlucHV0ID0ge30pID0+IHtcbiAgICB2YXIgX2E7XG4gICAgY29uc3Qgc2V0dGluZ3MgPSB7IC4uLmluaXRpYWxTZXR0aW5ncyB9O1xuICAgIGlmICgnZGVidWcnIGluIGlucHV0KSB7XG4gICAgICAgIGlmICh0eXBlb2YgaW5wdXQuZGVidWcgPT09ICdib29sZWFuJykge1xuICAgICAgICAgICAgc2V0dGluZ3MuZGVidWcgPSBpbnB1dC5kZWJ1ZztcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmICh0eXBlb2YgaW5wdXQuZGVidWcgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICBzZXR0aW5ncy5kZWJ1ZyA9IGlucHV0LmRlYnVnID09PSAndHJ1ZSc7XG4gICAgICAgIH1cbiAgICB9XG4gICAgaWYgKGlucHV0LnRydXN0ZWRIb3N0ID09PSBmYWxzZSkge1xuICAgICAgICBzZXR0aW5ncy50cnVzdGVkSG9zdCA9IGlucHV0LnRydXN0ZWRIb3N0O1xuICAgIH1cbiAgICBpZiAodHlwZW9mIGlucHV0LmNvbm5lY3RTcmMgPT09ICdzdHJpbmcnICYmICgoX2EgPSBpbnB1dC5jb25uZWN0U3JjKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2Euc3RhcnRzV2l0aCgnaHR0cCcpKSkge1xuICAgICAgICBzZXR0aW5ncy5jb25uZWN0U3JjID0gKDAsIGV4cG9ydHMuY29yc1ZhbGlkYXRvcikoaW5wdXQuY29ubmVjdFNyYyk7XG4gICAgfVxuICAgIGVsc2UgaWYgKHNldHRpbmdzLnRydXN0ZWRIb3N0KSB7XG4gICAgICAgIHNldHRpbmdzLmNvbm5lY3RTcmMgPSBpbnB1dC5jb25uZWN0U3JjO1xuICAgIH1cbiAgICBjb25zdCBzcmMgPSBzZXR0aW5ncy5jb25uZWN0U3JjIHx8IHZlcnNpb25fMS5ERUZBVUxUX0RPTUFJTjtcbiAgICBzZXR0aW5ncy5pZnJhbWVTcmMgPSBgJHtzcmN9aWZyYW1lLmh0bWxgO1xuICAgIHNldHRpbmdzLnBvcHVwU3JjID0gYCR7c3JjfXBvcHVwLmh0bWxgO1xuICAgIHNldHRpbmdzLndlYnVzYlNyYyA9IGAke3NyY313ZWJ1c2IuaHRtbGA7XG4gICAgaWYgKHR5cGVvZiBpbnB1dC50cmFuc3BvcnRSZWNvbm5lY3QgPT09ICdib29sZWFuJykge1xuICAgICAgICBzZXR0aW5ncy50cmFuc3BvcnRSZWNvbm5lY3QgPSBpbnB1dC50cmFuc3BvcnRSZWNvbm5lY3Q7XG4gICAgfVxuICAgIGlmICh0eXBlb2YgaW5wdXQud2VidXNiID09PSAnYm9vbGVhbicpIHtcbiAgICAgICAgc2V0dGluZ3Mud2VidXNiID0gaW5wdXQud2VidXNiO1xuICAgIH1cbiAgICBpZiAoQXJyYXkuaXNBcnJheShpbnB1dC50cmFuc3BvcnRzKSkge1xuICAgICAgICBzZXR0aW5ncy50cmFuc3BvcnRzID0gaW5wdXQudHJhbnNwb3J0cztcbiAgICB9XG4gICAgaWYgKHR5cGVvZiBpbnB1dC5wb3B1cCA9PT0gJ2Jvb2xlYW4nKSB7XG4gICAgICAgIHNldHRpbmdzLnBvcHVwID0gaW5wdXQucG9wdXA7XG4gICAgfVxuICAgIGlmICh0eXBlb2YgaW5wdXQubGF6eUxvYWQgPT09ICdib29sZWFuJykge1xuICAgICAgICBzZXR0aW5ncy5sYXp5TG9hZCA9IGlucHV0LmxhenlMb2FkO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIGlucHV0LnBlbmRpbmdUcmFuc3BvcnRFdmVudCA9PT0gJ2Jvb2xlYW4nKSB7XG4gICAgICAgIHNldHRpbmdzLnBlbmRpbmdUcmFuc3BvcnRFdmVudCA9IGlucHV0LnBlbmRpbmdUcmFuc3BvcnRFdmVudDtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiBpbnB1dC5leHRlbnNpb24gPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIHNldHRpbmdzLmV4dGVuc2lvbiA9IGlucHV0LmV4dGVuc2lvbjtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiBpbnB1dC5lbnYgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIHNldHRpbmdzLmVudiA9IGlucHV0LmVudjtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiBpbnB1dC50aW1lc3RhbXAgPT09ICdudW1iZXInKSB7XG4gICAgICAgIHNldHRpbmdzLnRpbWVzdGFtcCA9IGlucHV0LnRpbWVzdGFtcDtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiBpbnB1dC5pbnRlcmFjdGlvblRpbWVvdXQgPT09ICdudW1iZXInKSB7XG4gICAgICAgIHNldHRpbmdzLmludGVyYWN0aW9uVGltZW91dCA9IGlucHV0LmludGVyYWN0aW9uVGltZW91dDtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiBpbnB1dC5tYW5pZmVzdCA9PT0gJ29iamVjdCcpIHtcbiAgICAgICAgc2V0dGluZ3MubWFuaWZlc3QgPSBwYXJzZU1hbmlmZXN0KGlucHV0Lm1hbmlmZXN0KTtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiBpbnB1dC5zaGFyZWRMb2dnZXIgPT09ICdib29sZWFuJykge1xuICAgICAgICBzZXR0aW5ncy5zaGFyZWRMb2dnZXIgPSBpbnB1dC5zaGFyZWRMb2dnZXI7XG4gICAgfVxuICAgIHJldHVybiBzZXR0aW5ncztcbn07XG5leHBvcnRzLnBhcnNlQ29ubmVjdFNldHRpbmdzID0gcGFyc2VDb25uZWN0U2V0dGluZ3M7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jb25uZWN0U2V0dGluZ3MuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@trezor/connect/lib/data/connectSettings.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/connect/lib/data/version.js":
/*!**********************************************************!*\
  !*** ./node_modules/@trezor/connect/lib/data/version.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.DEFAULT_DOMAIN = exports.VERSION = void 0;\nexports.VERSION = '9.1.10';\nconst versionN = exports.VERSION.split('.').map(s => parseInt(s, 10));\nexports.DEFAULT_DOMAIN = `https://connect.trezor.io/${versionN[0]}/`;\n//# sourceMappingURL=version.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci9jb25uZWN0L2xpYi9kYXRhL3ZlcnNpb24uanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsc0JBQXNCLEdBQUcsZUFBZTtBQUN4QyxlQUFlO0FBQ2Y7QUFDQSxzQkFBc0IsZ0NBQWdDLFlBQVk7QUFDbEUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0B0cmV6b3IvY29ubmVjdC9saWIvZGF0YS92ZXJzaW9uLmpzP2JjNjIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkRFRkFVTFRfRE9NQUlOID0gZXhwb3J0cy5WRVJTSU9OID0gdm9pZCAwO1xuZXhwb3J0cy5WRVJTSU9OID0gJzkuMS4xMCc7XG5jb25zdCB2ZXJzaW9uTiA9IGV4cG9ydHMuVkVSU0lPTi5zcGxpdCgnLicpLm1hcChzID0+IHBhcnNlSW50KHMsIDEwKSk7XG5leHBvcnRzLkRFRkFVTFRfRE9NQUlOID0gYGh0dHBzOi8vY29ubmVjdC50cmV6b3IuaW8vJHt2ZXJzaW9uTlswXX0vYDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXZlcnNpb24uanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@trezor/connect/lib/data/version.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/connect/lib/events/blockchain.js":
/*!***************************************************************!*\
  !*** ./node_modules/@trezor/connect/lib/events/blockchain.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.createBlockchainMessage = exports.BLOCKCHAIN = exports.BLOCKCHAIN_EVENT = void 0;\nexports.BLOCKCHAIN_EVENT = 'BLOCKCHAIN_EVENT';\nexports.BLOCKCHAIN = {\n    CONNECT: 'blockchain-connect',\n    ERROR: 'blockchain-error',\n    BLOCK: 'blockchain-block',\n    NOTIFICATION: 'blockchain-notification',\n    FIAT_RATES_UPDATE: 'fiat-rates-update',\n};\nconst createBlockchainMessage = (type, payload) => ({\n    event: exports.BLOCKCHAIN_EVENT,\n    type,\n    payload,\n});\nexports.createBlockchainMessage = createBlockchainMessage;\n//# sourceMappingURL=blockchain.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci9jb25uZWN0L2xpYi9ldmVudHMvYmxvY2tjaGFpbi5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCwrQkFBK0IsR0FBRyxrQkFBa0IsR0FBRyx3QkFBd0I7QUFDL0Usd0JBQXdCO0FBQ3hCLGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCwrQkFBK0I7QUFDL0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0B0cmV6b3IvY29ubmVjdC9saWIvZXZlbnRzL2Jsb2NrY2hhaW4uanM/M2RkYyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuY3JlYXRlQmxvY2tjaGFpbk1lc3NhZ2UgPSBleHBvcnRzLkJMT0NLQ0hBSU4gPSBleHBvcnRzLkJMT0NLQ0hBSU5fRVZFTlQgPSB2b2lkIDA7XG5leHBvcnRzLkJMT0NLQ0hBSU5fRVZFTlQgPSAnQkxPQ0tDSEFJTl9FVkVOVCc7XG5leHBvcnRzLkJMT0NLQ0hBSU4gPSB7XG4gICAgQ09OTkVDVDogJ2Jsb2NrY2hhaW4tY29ubmVjdCcsXG4gICAgRVJST1I6ICdibG9ja2NoYWluLWVycm9yJyxcbiAgICBCTE9DSzogJ2Jsb2NrY2hhaW4tYmxvY2snLFxuICAgIE5PVElGSUNBVElPTjogJ2Jsb2NrY2hhaW4tbm90aWZpY2F0aW9uJyxcbiAgICBGSUFUX1JBVEVTX1VQREFURTogJ2ZpYXQtcmF0ZXMtdXBkYXRlJyxcbn07XG5jb25zdCBjcmVhdGVCbG9ja2NoYWluTWVzc2FnZSA9ICh0eXBlLCBwYXlsb2FkKSA9PiAoe1xuICAgIGV2ZW50OiBleHBvcnRzLkJMT0NLQ0hBSU5fRVZFTlQsXG4gICAgdHlwZSxcbiAgICBwYXlsb2FkLFxufSk7XG5leHBvcnRzLmNyZWF0ZUJsb2NrY2hhaW5NZXNzYWdlID0gY3JlYXRlQmxvY2tjaGFpbk1lc3NhZ2U7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1ibG9ja2NoYWluLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@trezor/connect/lib/events/blockchain.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/connect/lib/events/call.js":
/*!*********************************************************!*\
  !*** ./node_modules/@trezor/connect/lib/events/call.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.createResponseMessage = exports.RESPONSE_EVENT = void 0;\nconst errors_1 = __webpack_require__(/*! ../constants/errors */ \"./node_modules/@trezor/connect/lib/constants/errors.js\");\nexports.RESPONSE_EVENT = 'RESPONSE_EVENT';\nconst createResponseMessage = (id, success, payload) => ({\n    event: exports.RESPONSE_EVENT,\n    type: exports.RESPONSE_EVENT,\n    id,\n    success,\n    payload: success ? payload : (0, errors_1.serializeError)(payload),\n});\nexports.createResponseMessage = createResponseMessage;\n//# sourceMappingURL=call.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci9jb25uZWN0L2xpYi9ldmVudHMvY2FsbC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCw2QkFBNkIsR0FBRyxzQkFBc0I7QUFDdEQsaUJBQWlCLG1CQUFPLENBQUMsbUZBQXFCO0FBQzlDLHNCQUFzQjtBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0QsNkJBQTZCO0FBQzdCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AdHJlem9yL2Nvbm5lY3QvbGliL2V2ZW50cy9jYWxsLmpzP2I5ZjEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmNyZWF0ZVJlc3BvbnNlTWVzc2FnZSA9IGV4cG9ydHMuUkVTUE9OU0VfRVZFTlQgPSB2b2lkIDA7XG5jb25zdCBlcnJvcnNfMSA9IHJlcXVpcmUoXCIuLi9jb25zdGFudHMvZXJyb3JzXCIpO1xuZXhwb3J0cy5SRVNQT05TRV9FVkVOVCA9ICdSRVNQT05TRV9FVkVOVCc7XG5jb25zdCBjcmVhdGVSZXNwb25zZU1lc3NhZ2UgPSAoaWQsIHN1Y2Nlc3MsIHBheWxvYWQpID0+ICh7XG4gICAgZXZlbnQ6IGV4cG9ydHMuUkVTUE9OU0VfRVZFTlQsXG4gICAgdHlwZTogZXhwb3J0cy5SRVNQT05TRV9FVkVOVCxcbiAgICBpZCxcbiAgICBzdWNjZXNzLFxuICAgIHBheWxvYWQ6IHN1Y2Nlc3MgPyBwYXlsb2FkIDogKDAsIGVycm9yc18xLnNlcmlhbGl6ZUVycm9yKShwYXlsb2FkKSxcbn0pO1xuZXhwb3J0cy5jcmVhdGVSZXNwb25zZU1lc3NhZ2UgPSBjcmVhdGVSZXNwb25zZU1lc3NhZ2U7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jYWxsLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@trezor/connect/lib/events/call.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/connect/lib/events/core.js":
/*!*********************************************************!*\
  !*** ./node_modules/@trezor/connect/lib/events/core.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.createErrorMessage = exports.parseMessage = exports.CORE_EVENT = void 0;\nexports.CORE_EVENT = 'CORE_EVENT';\nconst parseMessage = (messageData) => {\n    const message = {\n        event: messageData.event,\n        type: messageData.type,\n        payload: messageData.payload,\n    };\n    if (typeof messageData.id === 'number') {\n        message.id = messageData.id;\n    }\n    if (typeof messageData.success === 'boolean') {\n        message.success = messageData.success;\n    }\n    return message;\n};\nexports.parseMessage = parseMessage;\nconst createErrorMessage = (error) => ({\n    success: false,\n    payload: {\n        error: error.message,\n        code: error.code,\n    },\n});\nexports.createErrorMessage = createErrorMessage;\n//# sourceMappingURL=core.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci9jb25uZWN0L2xpYi9ldmVudHMvY29yZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCwwQkFBMEIsR0FBRyxvQkFBb0IsR0FBRyxrQkFBa0I7QUFDdEUsa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0I7QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxDQUFDO0FBQ0QsMEJBQTBCO0FBQzFCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AdHJlem9yL2Nvbm5lY3QvbGliL2V2ZW50cy9jb3JlLmpzPzA4NmEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmNyZWF0ZUVycm9yTWVzc2FnZSA9IGV4cG9ydHMucGFyc2VNZXNzYWdlID0gZXhwb3J0cy5DT1JFX0VWRU5UID0gdm9pZCAwO1xuZXhwb3J0cy5DT1JFX0VWRU5UID0gJ0NPUkVfRVZFTlQnO1xuY29uc3QgcGFyc2VNZXNzYWdlID0gKG1lc3NhZ2VEYXRhKSA9PiB7XG4gICAgY29uc3QgbWVzc2FnZSA9IHtcbiAgICAgICAgZXZlbnQ6IG1lc3NhZ2VEYXRhLmV2ZW50LFxuICAgICAgICB0eXBlOiBtZXNzYWdlRGF0YS50eXBlLFxuICAgICAgICBwYXlsb2FkOiBtZXNzYWdlRGF0YS5wYXlsb2FkLFxuICAgIH07XG4gICAgaWYgKHR5cGVvZiBtZXNzYWdlRGF0YS5pZCA9PT0gJ251bWJlcicpIHtcbiAgICAgICAgbWVzc2FnZS5pZCA9IG1lc3NhZ2VEYXRhLmlkO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIG1lc3NhZ2VEYXRhLnN1Y2Nlc3MgPT09ICdib29sZWFuJykge1xuICAgICAgICBtZXNzYWdlLnN1Y2Nlc3MgPSBtZXNzYWdlRGF0YS5zdWNjZXNzO1xuICAgIH1cbiAgICByZXR1cm4gbWVzc2FnZTtcbn07XG5leHBvcnRzLnBhcnNlTWVzc2FnZSA9IHBhcnNlTWVzc2FnZTtcbmNvbnN0IGNyZWF0ZUVycm9yTWVzc2FnZSA9IChlcnJvcikgPT4gKHtcbiAgICBzdWNjZXNzOiBmYWxzZSxcbiAgICBwYXlsb2FkOiB7XG4gICAgICAgIGVycm9yOiBlcnJvci5tZXNzYWdlLFxuICAgICAgICBjb2RlOiBlcnJvci5jb2RlLFxuICAgIH0sXG59KTtcbmV4cG9ydHMuY3JlYXRlRXJyb3JNZXNzYWdlID0gY3JlYXRlRXJyb3JNZXNzYWdlO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y29yZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@trezor/connect/lib/events/core.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/connect/lib/events/device.js":
/*!***********************************************************!*\
  !*** ./node_modules/@trezor/connect/lib/events/device.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.createDeviceMessage = exports.DEVICE = exports.DEVICE_EVENT = void 0;\nexports.DEVICE_EVENT = 'DEVICE_EVENT';\nexports.DEVICE = {\n    CONNECT: 'device-connect',\n    CONNECT_UNACQUIRED: 'device-connect_unacquired',\n    DISCONNECT: 'device-disconnect',\n    CHANGED: 'device-changed',\n    ACQUIRE: 'device-acquire',\n    RELEASE: 'device-release',\n    ACQUIRED: 'device-acquired',\n    RELEASED: 'device-released',\n    USED_ELSEWHERE: 'device-used_elsewhere',\n    LOADING: 'device-loading',\n    BUTTON: 'button',\n    PIN: 'pin',\n    PASSPHRASE: 'passphrase',\n    PASSPHRASE_ON_DEVICE: 'passphrase_on_device',\n    WORD: 'word',\n};\nconst createDeviceMessage = (type, payload) => ({\n    event: exports.DEVICE_EVENT,\n    type,\n    payload,\n});\nexports.createDeviceMessage = createDeviceMessage;\n//# sourceMappingURL=device.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci9jb25uZWN0L2xpYi9ldmVudHMvZGV2aWNlLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDJCQUEyQixHQUFHLGNBQWMsR0FBRyxvQkFBb0I7QUFDbkUsb0JBQW9CO0FBQ3BCLGNBQWM7QUFDZDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNELDJCQUEyQjtBQUMzQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHRyZXpvci9jb25uZWN0L2xpYi9ldmVudHMvZGV2aWNlLmpzPzViMGUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmNyZWF0ZURldmljZU1lc3NhZ2UgPSBleHBvcnRzLkRFVklDRSA9IGV4cG9ydHMuREVWSUNFX0VWRU5UID0gdm9pZCAwO1xuZXhwb3J0cy5ERVZJQ0VfRVZFTlQgPSAnREVWSUNFX0VWRU5UJztcbmV4cG9ydHMuREVWSUNFID0ge1xuICAgIENPTk5FQ1Q6ICdkZXZpY2UtY29ubmVjdCcsXG4gICAgQ09OTkVDVF9VTkFDUVVJUkVEOiAnZGV2aWNlLWNvbm5lY3RfdW5hY3F1aXJlZCcsXG4gICAgRElTQ09OTkVDVDogJ2RldmljZS1kaXNjb25uZWN0JyxcbiAgICBDSEFOR0VEOiAnZGV2aWNlLWNoYW5nZWQnLFxuICAgIEFDUVVJUkU6ICdkZXZpY2UtYWNxdWlyZScsXG4gICAgUkVMRUFTRTogJ2RldmljZS1yZWxlYXNlJyxcbiAgICBBQ1FVSVJFRDogJ2RldmljZS1hY3F1aXJlZCcsXG4gICAgUkVMRUFTRUQ6ICdkZXZpY2UtcmVsZWFzZWQnLFxuICAgIFVTRURfRUxTRVdIRVJFOiAnZGV2aWNlLXVzZWRfZWxzZXdoZXJlJyxcbiAgICBMT0FESU5HOiAnZGV2aWNlLWxvYWRpbmcnLFxuICAgIEJVVFRPTjogJ2J1dHRvbicsXG4gICAgUElOOiAncGluJyxcbiAgICBQQVNTUEhSQVNFOiAncGFzc3BocmFzZScsXG4gICAgUEFTU1BIUkFTRV9PTl9ERVZJQ0U6ICdwYXNzcGhyYXNlX29uX2RldmljZScsXG4gICAgV09SRDogJ3dvcmQnLFxufTtcbmNvbnN0IGNyZWF0ZURldmljZU1lc3NhZ2UgPSAodHlwZSwgcGF5bG9hZCkgPT4gKHtcbiAgICBldmVudDogZXhwb3J0cy5ERVZJQ0VfRVZFTlQsXG4gICAgdHlwZSxcbiAgICBwYXlsb2FkLFxufSk7XG5leHBvcnRzLmNyZWF0ZURldmljZU1lc3NhZ2UgPSBjcmVhdGVEZXZpY2VNZXNzYWdlO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGV2aWNlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@trezor/connect/lib/events/device.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/connect/lib/events/iframe.js":
/*!***********************************************************!*\
  !*** ./node_modules/@trezor/connect/lib/events/iframe.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.createIFrameMessage = exports.IFRAME = void 0;\nconst ui_request_1 = __webpack_require__(/*! ./ui-request */ \"./node_modules/@trezor/connect/lib/events/ui-request.js\");\nexports.IFRAME = {\n    BOOTSTRAP: 'iframe-bootstrap',\n    LOADED: 'iframe-loaded',\n    INIT: 'iframe-init',\n    ERROR: 'iframe-error',\n    CALL: 'iframe-call',\n    LOG: 'iframe-log',\n};\nconst createIFrameMessage = (type, payload) => ({\n    event: ui_request_1.UI_EVENT,\n    type,\n    payload,\n});\nexports.createIFrameMessage = createIFrameMessage;\n//# sourceMappingURL=iframe.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci9jb25uZWN0L2xpYi9ldmVudHMvaWZyYW1lLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDJCQUEyQixHQUFHLGNBQWM7QUFDNUMscUJBQXFCLG1CQUFPLENBQUMsNkVBQWM7QUFDM0MsY0FBYztBQUNkO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0QsMkJBQTJCO0FBQzNCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AdHJlem9yL2Nvbm5lY3QvbGliL2V2ZW50cy9pZnJhbWUuanM/ZDMwZCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuY3JlYXRlSUZyYW1lTWVzc2FnZSA9IGV4cG9ydHMuSUZSQU1FID0gdm9pZCAwO1xuY29uc3QgdWlfcmVxdWVzdF8xID0gcmVxdWlyZShcIi4vdWktcmVxdWVzdFwiKTtcbmV4cG9ydHMuSUZSQU1FID0ge1xuICAgIEJPT1RTVFJBUDogJ2lmcmFtZS1ib290c3RyYXAnLFxuICAgIExPQURFRDogJ2lmcmFtZS1sb2FkZWQnLFxuICAgIElOSVQ6ICdpZnJhbWUtaW5pdCcsXG4gICAgRVJST1I6ICdpZnJhbWUtZXJyb3InLFxuICAgIENBTEw6ICdpZnJhbWUtY2FsbCcsXG4gICAgTE9HOiAnaWZyYW1lLWxvZycsXG59O1xuY29uc3QgY3JlYXRlSUZyYW1lTWVzc2FnZSA9ICh0eXBlLCBwYXlsb2FkKSA9PiAoe1xuICAgIGV2ZW50OiB1aV9yZXF1ZXN0XzEuVUlfRVZFTlQsXG4gICAgdHlwZSxcbiAgICBwYXlsb2FkLFxufSk7XG5leHBvcnRzLmNyZWF0ZUlGcmFtZU1lc3NhZ2UgPSBjcmVhdGVJRnJhbWVNZXNzYWdlO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aWZyYW1lLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@trezor/connect/lib/events/iframe.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/connect/lib/events/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/@trezor/connect/lib/events/index.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.UI = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.mjs\");\nconst ui_request_1 = __webpack_require__(/*! ./ui-request */ \"./node_modules/@trezor/connect/lib/events/ui-request.js\");\nconst ui_response_1 = __webpack_require__(/*! ./ui-response */ \"./node_modules/@trezor/connect/lib/events/ui-response.js\");\ntslib_1.__exportStar(__webpack_require__(/*! ./blockchain */ \"./node_modules/@trezor/connect/lib/events/blockchain.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./call */ \"./node_modules/@trezor/connect/lib/events/call.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./core */ \"./node_modules/@trezor/connect/lib/events/core.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./device */ \"./node_modules/@trezor/connect/lib/events/device.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./iframe */ \"./node_modules/@trezor/connect/lib/events/iframe.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./popup */ \"./node_modules/@trezor/connect/lib/events/popup.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./transport */ \"./node_modules/@trezor/connect/lib/events/transport.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./ui-promise */ \"./node_modules/@trezor/connect/lib/events/ui-promise.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./ui-request */ \"./node_modules/@trezor/connect/lib/events/ui-request.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./ui-response */ \"./node_modules/@trezor/connect/lib/events/ui-response.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./webextension */ \"./node_modules/@trezor/connect/lib/events/webextension.js\"), exports);\nexports.UI = {\n    ...ui_request_1.UI_REQUEST,\n    ...ui_response_1.UI_RESPONSE,\n};\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci9jb25uZWN0L2xpYi9ldmVudHMvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsVUFBVTtBQUNWLGdCQUFnQixtQkFBTyxDQUFDLGlEQUFPO0FBQy9CLHFCQUFxQixtQkFBTyxDQUFDLDZFQUFjO0FBQzNDLHNCQUFzQixtQkFBTyxDQUFDLCtFQUFlO0FBQzdDLHFCQUFxQixtQkFBTyxDQUFDLDZFQUFjO0FBQzNDLHFCQUFxQixtQkFBTyxDQUFDLGlFQUFRO0FBQ3JDLHFCQUFxQixtQkFBTyxDQUFDLGlFQUFRO0FBQ3JDLHFCQUFxQixtQkFBTyxDQUFDLHFFQUFVO0FBQ3ZDLHFCQUFxQixtQkFBTyxDQUFDLHFFQUFVO0FBQ3ZDLHFCQUFxQixtQkFBTyxDQUFDLG1FQUFTO0FBQ3RDLHFCQUFxQixtQkFBTyxDQUFDLDJFQUFhO0FBQzFDLHFCQUFxQixtQkFBTyxDQUFDLDZFQUFjO0FBQzNDLHFCQUFxQixtQkFBTyxDQUFDLDZFQUFjO0FBQzNDLHFCQUFxQixtQkFBTyxDQUFDLCtFQUFlO0FBQzVDLHFCQUFxQixtQkFBTyxDQUFDLGlGQUFnQjtBQUM3QyxVQUFVO0FBQ1Y7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0B0cmV6b3IvY29ubmVjdC9saWIvZXZlbnRzL2luZGV4LmpzP2RjMzEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlVJID0gdm9pZCAwO1xuY29uc3QgdHNsaWJfMSA9IHJlcXVpcmUoXCJ0c2xpYlwiKTtcbmNvbnN0IHVpX3JlcXVlc3RfMSA9IHJlcXVpcmUoXCIuL3VpLXJlcXVlc3RcIik7XG5jb25zdCB1aV9yZXNwb25zZV8xID0gcmVxdWlyZShcIi4vdWktcmVzcG9uc2VcIik7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9ibG9ja2NoYWluXCIpLCBleHBvcnRzKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2NhbGxcIiksIGV4cG9ydHMpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vY29yZVwiKSwgZXhwb3J0cyk7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9kZXZpY2VcIiksIGV4cG9ydHMpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vaWZyYW1lXCIpLCBleHBvcnRzKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3BvcHVwXCIpLCBleHBvcnRzKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3RyYW5zcG9ydFwiKSwgZXhwb3J0cyk7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi91aS1wcm9taXNlXCIpLCBleHBvcnRzKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3VpLXJlcXVlc3RcIiksIGV4cG9ydHMpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vdWktcmVzcG9uc2VcIiksIGV4cG9ydHMpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vd2ViZXh0ZW5zaW9uXCIpLCBleHBvcnRzKTtcbmV4cG9ydHMuVUkgPSB7XG4gICAgLi4udWlfcmVxdWVzdF8xLlVJX1JFUVVFU1QsXG4gICAgLi4udWlfcmVzcG9uc2VfMS5VSV9SRVNQT05TRSxcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@trezor/connect/lib/events/index.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/connect/lib/events/popup.js":
/*!**********************************************************!*\
  !*** ./node_modules/@trezor/connect/lib/events/popup.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.createPopupMessage = exports.POPUP = void 0;\nconst ui_request_1 = __webpack_require__(/*! ./ui-request */ \"./node_modules/@trezor/connect/lib/events/ui-request.js\");\nexports.POPUP = {\n    BOOTSTRAP: 'popup-bootstrap',\n    LOADED: 'popup-loaded',\n    CORE_LOADED: 'popup-core-loaded',\n    INIT: 'popup-init',\n    ERROR: 'popup-error',\n    EXTENSION_USB_PERMISSIONS: 'open-usb-permissions',\n    HANDSHAKE: 'popup-handshake',\n    CLOSED: 'popup-closed',\n    CANCEL_POPUP_REQUEST: 'ui-cancel-popup-request',\n    CLOSE_WINDOW: 'window.close',\n    ANALYTICS_RESPONSE: 'popup-analytics-response',\n    CONTENT_SCRIPT_LOADED: 'popup-content-script-loaded',\n    METHOD_INFO: 'popup-method-info',\n};\nconst createPopupMessage = (type, payload) => ({\n    event: ui_request_1.UI_EVENT,\n    type,\n    payload,\n});\nexports.createPopupMessage = createPopupMessage;\n//# sourceMappingURL=popup.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci9jb25uZWN0L2xpYi9ldmVudHMvcG9wdXAuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsMEJBQTBCLEdBQUcsYUFBYTtBQUMxQyxxQkFBcUIsbUJBQU8sQ0FBQyw2RUFBYztBQUMzQyxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNELDBCQUEwQjtBQUMxQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHRyZXpvci9jb25uZWN0L2xpYi9ldmVudHMvcG9wdXAuanM/MWQwNyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuY3JlYXRlUG9wdXBNZXNzYWdlID0gZXhwb3J0cy5QT1BVUCA9IHZvaWQgMDtcbmNvbnN0IHVpX3JlcXVlc3RfMSA9IHJlcXVpcmUoXCIuL3VpLXJlcXVlc3RcIik7XG5leHBvcnRzLlBPUFVQID0ge1xuICAgIEJPT1RTVFJBUDogJ3BvcHVwLWJvb3RzdHJhcCcsXG4gICAgTE9BREVEOiAncG9wdXAtbG9hZGVkJyxcbiAgICBDT1JFX0xPQURFRDogJ3BvcHVwLWNvcmUtbG9hZGVkJyxcbiAgICBJTklUOiAncG9wdXAtaW5pdCcsXG4gICAgRVJST1I6ICdwb3B1cC1lcnJvcicsXG4gICAgRVhURU5TSU9OX1VTQl9QRVJNSVNTSU9OUzogJ29wZW4tdXNiLXBlcm1pc3Npb25zJyxcbiAgICBIQU5EU0hBS0U6ICdwb3B1cC1oYW5kc2hha2UnLFxuICAgIENMT1NFRDogJ3BvcHVwLWNsb3NlZCcsXG4gICAgQ0FOQ0VMX1BPUFVQX1JFUVVFU1Q6ICd1aS1jYW5jZWwtcG9wdXAtcmVxdWVzdCcsXG4gICAgQ0xPU0VfV0lORE9XOiAnd2luZG93LmNsb3NlJyxcbiAgICBBTkFMWVRJQ1NfUkVTUE9OU0U6ICdwb3B1cC1hbmFseXRpY3MtcmVzcG9uc2UnLFxuICAgIENPTlRFTlRfU0NSSVBUX0xPQURFRDogJ3BvcHVwLWNvbnRlbnQtc2NyaXB0LWxvYWRlZCcsXG4gICAgTUVUSE9EX0lORk86ICdwb3B1cC1tZXRob2QtaW5mbycsXG59O1xuY29uc3QgY3JlYXRlUG9wdXBNZXNzYWdlID0gKHR5cGUsIHBheWxvYWQpID0+ICh7XG4gICAgZXZlbnQ6IHVpX3JlcXVlc3RfMS5VSV9FVkVOVCxcbiAgICB0eXBlLFxuICAgIHBheWxvYWQsXG59KTtcbmV4cG9ydHMuY3JlYXRlUG9wdXBNZXNzYWdlID0gY3JlYXRlUG9wdXBNZXNzYWdlO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cG9wdXAuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@trezor/connect/lib/events/popup.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/connect/lib/events/transport.js":
/*!**************************************************************!*\
  !*** ./node_modules/@trezor/connect/lib/events/transport.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.createTransportMessage = exports.TRANSPORT_EVENT = exports.TRANSPORT = void 0;\nconst errors_1 = __webpack_require__(/*! ../constants/errors */ \"./node_modules/@trezor/connect/lib/constants/errors.js\");\nvar constants_1 = __webpack_require__(/*! @trezor/transport/lib/constants */ \"./node_modules/@trezor/transport/lib/constants.js\");\nObject.defineProperty(exports, \"TRANSPORT\", ({ enumerable: true, get: function () { return constants_1.TRANSPORT; } }));\nexports.TRANSPORT_EVENT = 'TRANSPORT_EVENT';\nconst createTransportMessage = (type, payload) => ({\n    event: exports.TRANSPORT_EVENT,\n    type,\n    payload: 'error' in payload ? (0, errors_1.serializeError)(payload) : payload,\n});\nexports.createTransportMessage = createTransportMessage;\n//# sourceMappingURL=transport.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci9jb25uZWN0L2xpYi9ldmVudHMvdHJhbnNwb3J0LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDhCQUE4QixHQUFHLHVCQUF1QixHQUFHLGlCQUFpQjtBQUM1RSxpQkFBaUIsbUJBQU8sQ0FBQyxtRkFBcUI7QUFDOUMsa0JBQWtCLG1CQUFPLENBQUMsMEZBQWlDO0FBQzNELDZDQUE0QyxFQUFFLHFDQUFxQyxpQ0FBaUMsRUFBQztBQUNySCx1QkFBdUI7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0QsOEJBQThCO0FBQzlCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AdHJlem9yL2Nvbm5lY3QvbGliL2V2ZW50cy90cmFuc3BvcnQuanM/ZWE1NiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuY3JlYXRlVHJhbnNwb3J0TWVzc2FnZSA9IGV4cG9ydHMuVFJBTlNQT1JUX0VWRU5UID0gZXhwb3J0cy5UUkFOU1BPUlQgPSB2b2lkIDA7XG5jb25zdCBlcnJvcnNfMSA9IHJlcXVpcmUoXCIuLi9jb25zdGFudHMvZXJyb3JzXCIpO1xudmFyIGNvbnN0YW50c18xID0gcmVxdWlyZShcIkB0cmV6b3IvdHJhbnNwb3J0L2xpYi9jb25zdGFudHNcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJUUkFOU1BPUlRcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGNvbnN0YW50c18xLlRSQU5TUE9SVDsgfSB9KTtcbmV4cG9ydHMuVFJBTlNQT1JUX0VWRU5UID0gJ1RSQU5TUE9SVF9FVkVOVCc7XG5jb25zdCBjcmVhdGVUcmFuc3BvcnRNZXNzYWdlID0gKHR5cGUsIHBheWxvYWQpID0+ICh7XG4gICAgZXZlbnQ6IGV4cG9ydHMuVFJBTlNQT1JUX0VWRU5ULFxuICAgIHR5cGUsXG4gICAgcGF5bG9hZDogJ2Vycm9yJyBpbiBwYXlsb2FkID8gKDAsIGVycm9yc18xLnNlcmlhbGl6ZUVycm9yKShwYXlsb2FkKSA6IHBheWxvYWQsXG59KTtcbmV4cG9ydHMuY3JlYXRlVHJhbnNwb3J0TWVzc2FnZSA9IGNyZWF0ZVRyYW5zcG9ydE1lc3NhZ2U7XG4vLyMgc291cmNlTWFwcGluZ1VSTD10cmFuc3BvcnQuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@trezor/connect/lib/events/transport.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/connect/lib/events/ui-promise.js":
/*!***************************************************************!*\
  !*** ./node_modules/@trezor/connect/lib/events/ui-promise.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n//# sourceMappingURL=ui-promise.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci9jb25uZWN0L2xpYi9ldmVudHMvdWktcHJvbWlzZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHRyZXpvci9jb25uZWN0L2xpYi9ldmVudHMvdWktcHJvbWlzZS5qcz8xMDRhIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dWktcHJvbWlzZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@trezor/connect/lib/events/ui-promise.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/connect/lib/events/ui-request.js":
/*!***************************************************************!*\
  !*** ./node_modules/@trezor/connect/lib/events/ui-request.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.createUiMessage = exports.UI_REQUEST = exports.UI_EVENT = void 0;\nexports.UI_EVENT = 'UI_EVENT';\nexports.UI_REQUEST = {\n    TRANSPORT: 'ui-no_transport',\n    BOOTLOADER: 'ui-device_bootloader_mode',\n    NOT_IN_BOOTLOADER: 'ui-device_not_in_bootloader_mode',\n    REQUIRE_MODE: 'ui-device_require_mode',\n    INITIALIZE: 'ui-device_not_initialized',\n    SEEDLESS: 'ui-device_seedless',\n    FIRMWARE_OLD: 'ui-device_firmware_old',\n    FIRMWARE_OUTDATED: 'ui-device_firmware_outdated',\n    FIRMWARE_NOT_SUPPORTED: 'ui-device_firmware_unsupported',\n    FIRMWARE_NOT_COMPATIBLE: 'ui-device_firmware_not_compatible',\n    FIRMWARE_NOT_INSTALLED: 'ui-device_firmware_not_installed',\n    FIRMWARE_PROGRESS: 'ui-firmware-progress',\n    DEVICE_NEEDS_BACKUP: 'ui-device_needs_backup',\n    REQUEST_UI_WINDOW: 'ui-request_window',\n    CLOSE_UI_WINDOW: 'ui-close_window',\n    REQUEST_PERMISSION: 'ui-request_permission',\n    REQUEST_CONFIRMATION: 'ui-request_confirmation',\n    REQUEST_PIN: 'ui-request_pin',\n    INVALID_PIN: 'ui-invalid_pin',\n    REQUEST_PASSPHRASE: 'ui-request_passphrase',\n    REQUEST_PASSPHRASE_ON_DEVICE: 'ui-request_passphrase_on_device',\n    INVALID_PASSPHRASE: 'ui-invalid_passphrase',\n    CONNECT: 'ui-connect',\n    LOADING: 'ui-loading',\n    SET_OPERATION: 'ui-set_operation',\n    SELECT_DEVICE: 'ui-select_device',\n    SELECT_ACCOUNT: 'ui-select_account',\n    SELECT_FEE: 'ui-select_fee',\n    UPDATE_CUSTOM_FEE: 'ui-update_custom_fee',\n    INSUFFICIENT_FUNDS: 'ui-insufficient_funds',\n    REQUEST_BUTTON: 'ui-button',\n    REQUEST_WORD: 'ui-request_word',\n    LOGIN_CHALLENGE_REQUEST: 'ui-login_challenge_request',\n    BUNDLE_PROGRESS: 'ui-bundle_progress',\n    ADDRESS_VALIDATION: 'ui-address_validation',\n    IFRAME_FAILURE: 'ui-iframe_failure',\n};\nconst createUiMessage = (type, payload) => ({\n    event: exports.UI_EVENT,\n    type,\n    payload,\n});\nexports.createUiMessage = createUiMessage;\n//# sourceMappingURL=ui-request.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci9jb25uZWN0L2xpYi9ldmVudHMvdWktcmVxdWVzdC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCx1QkFBdUIsR0FBRyxrQkFBa0IsR0FBRyxnQkFBZ0I7QUFDL0QsZ0JBQWdCO0FBQ2hCLGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNELHVCQUF1QjtBQUN2QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHRyZXpvci9jb25uZWN0L2xpYi9ldmVudHMvdWktcmVxdWVzdC5qcz8zNzRiIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5jcmVhdGVVaU1lc3NhZ2UgPSBleHBvcnRzLlVJX1JFUVVFU1QgPSBleHBvcnRzLlVJX0VWRU5UID0gdm9pZCAwO1xuZXhwb3J0cy5VSV9FVkVOVCA9ICdVSV9FVkVOVCc7XG5leHBvcnRzLlVJX1JFUVVFU1QgPSB7XG4gICAgVFJBTlNQT1JUOiAndWktbm9fdHJhbnNwb3J0JyxcbiAgICBCT09UTE9BREVSOiAndWktZGV2aWNlX2Jvb3Rsb2FkZXJfbW9kZScsXG4gICAgTk9UX0lOX0JPT1RMT0FERVI6ICd1aS1kZXZpY2Vfbm90X2luX2Jvb3Rsb2FkZXJfbW9kZScsXG4gICAgUkVRVUlSRV9NT0RFOiAndWktZGV2aWNlX3JlcXVpcmVfbW9kZScsXG4gICAgSU5JVElBTElaRTogJ3VpLWRldmljZV9ub3RfaW5pdGlhbGl6ZWQnLFxuICAgIFNFRURMRVNTOiAndWktZGV2aWNlX3NlZWRsZXNzJyxcbiAgICBGSVJNV0FSRV9PTEQ6ICd1aS1kZXZpY2VfZmlybXdhcmVfb2xkJyxcbiAgICBGSVJNV0FSRV9PVVREQVRFRDogJ3VpLWRldmljZV9maXJtd2FyZV9vdXRkYXRlZCcsXG4gICAgRklSTVdBUkVfTk9UX1NVUFBPUlRFRDogJ3VpLWRldmljZV9maXJtd2FyZV91bnN1cHBvcnRlZCcsXG4gICAgRklSTVdBUkVfTk9UX0NPTVBBVElCTEU6ICd1aS1kZXZpY2VfZmlybXdhcmVfbm90X2NvbXBhdGlibGUnLFxuICAgIEZJUk1XQVJFX05PVF9JTlNUQUxMRUQ6ICd1aS1kZXZpY2VfZmlybXdhcmVfbm90X2luc3RhbGxlZCcsXG4gICAgRklSTVdBUkVfUFJPR1JFU1M6ICd1aS1maXJtd2FyZS1wcm9ncmVzcycsXG4gICAgREVWSUNFX05FRURTX0JBQ0tVUDogJ3VpLWRldmljZV9uZWVkc19iYWNrdXAnLFxuICAgIFJFUVVFU1RfVUlfV0lORE9XOiAndWktcmVxdWVzdF93aW5kb3cnLFxuICAgIENMT1NFX1VJX1dJTkRPVzogJ3VpLWNsb3NlX3dpbmRvdycsXG4gICAgUkVRVUVTVF9QRVJNSVNTSU9OOiAndWktcmVxdWVzdF9wZXJtaXNzaW9uJyxcbiAgICBSRVFVRVNUX0NPTkZJUk1BVElPTjogJ3VpLXJlcXVlc3RfY29uZmlybWF0aW9uJyxcbiAgICBSRVFVRVNUX1BJTjogJ3VpLXJlcXVlc3RfcGluJyxcbiAgICBJTlZBTElEX1BJTjogJ3VpLWludmFsaWRfcGluJyxcbiAgICBSRVFVRVNUX1BBU1NQSFJBU0U6ICd1aS1yZXF1ZXN0X3Bhc3NwaHJhc2UnLFxuICAgIFJFUVVFU1RfUEFTU1BIUkFTRV9PTl9ERVZJQ0U6ICd1aS1yZXF1ZXN0X3Bhc3NwaHJhc2Vfb25fZGV2aWNlJyxcbiAgICBJTlZBTElEX1BBU1NQSFJBU0U6ICd1aS1pbnZhbGlkX3Bhc3NwaHJhc2UnLFxuICAgIENPTk5FQ1Q6ICd1aS1jb25uZWN0JyxcbiAgICBMT0FESU5HOiAndWktbG9hZGluZycsXG4gICAgU0VUX09QRVJBVElPTjogJ3VpLXNldF9vcGVyYXRpb24nLFxuICAgIFNFTEVDVF9ERVZJQ0U6ICd1aS1zZWxlY3RfZGV2aWNlJyxcbiAgICBTRUxFQ1RfQUNDT1VOVDogJ3VpLXNlbGVjdF9hY2NvdW50JyxcbiAgICBTRUxFQ1RfRkVFOiAndWktc2VsZWN0X2ZlZScsXG4gICAgVVBEQVRFX0NVU1RPTV9GRUU6ICd1aS11cGRhdGVfY3VzdG9tX2ZlZScsXG4gICAgSU5TVUZGSUNJRU5UX0ZVTkRTOiAndWktaW5zdWZmaWNpZW50X2Z1bmRzJyxcbiAgICBSRVFVRVNUX0JVVFRPTjogJ3VpLWJ1dHRvbicsXG4gICAgUkVRVUVTVF9XT1JEOiAndWktcmVxdWVzdF93b3JkJyxcbiAgICBMT0dJTl9DSEFMTEVOR0VfUkVRVUVTVDogJ3VpLWxvZ2luX2NoYWxsZW5nZV9yZXF1ZXN0JyxcbiAgICBCVU5ETEVfUFJPR1JFU1M6ICd1aS1idW5kbGVfcHJvZ3Jlc3MnLFxuICAgIEFERFJFU1NfVkFMSURBVElPTjogJ3VpLWFkZHJlc3NfdmFsaWRhdGlvbicsXG4gICAgSUZSQU1FX0ZBSUxVUkU6ICd1aS1pZnJhbWVfZmFpbHVyZScsXG59O1xuY29uc3QgY3JlYXRlVWlNZXNzYWdlID0gKHR5cGUsIHBheWxvYWQpID0+ICh7XG4gICAgZXZlbnQ6IGV4cG9ydHMuVUlfRVZFTlQsXG4gICAgdHlwZSxcbiAgICBwYXlsb2FkLFxufSk7XG5leHBvcnRzLmNyZWF0ZVVpTWVzc2FnZSA9IGNyZWF0ZVVpTWVzc2FnZTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXVpLXJlcXVlc3QuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@trezor/connect/lib/events/ui-request.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/connect/lib/events/ui-response.js":
/*!****************************************************************!*\
  !*** ./node_modules/@trezor/connect/lib/events/ui-response.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.createUiResponse = exports.UI_RESPONSE = void 0;\nconst ui_request_1 = __webpack_require__(/*! ./ui-request */ \"./node_modules/@trezor/connect/lib/events/ui-request.js\");\nexports.UI_RESPONSE = {\n    RECEIVE_PERMISSION: 'ui-receive_permission',\n    RECEIVE_CONFIRMATION: 'ui-receive_confirmation',\n    RECEIVE_PIN: 'ui-receive_pin',\n    RECEIVE_PASSPHRASE: 'ui-receive_passphrase',\n    RECEIVE_DEVICE: 'ui-receive_device',\n    RECEIVE_ACCOUNT: 'ui-receive_account',\n    RECEIVE_FEE: 'ui-receive_fee',\n    RECEIVE_WORD: 'ui-receive_word',\n    INVALID_PASSPHRASE_ACTION: 'ui-invalid_passphrase_action',\n    CHANGE_SETTINGS: 'ui-change_settings',\n    LOGIN_CHALLENGE_RESPONSE: 'ui-login_challenge_response',\n};\nconst createUiResponse = (type, payload) => ({\n    event: ui_request_1.UI_EVENT,\n    type,\n    payload,\n});\nexports.createUiResponse = createUiResponse;\n//# sourceMappingURL=ui-response.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci9jb25uZWN0L2xpYi9ldmVudHMvdWktcmVzcG9uc2UuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsd0JBQXdCLEdBQUcsbUJBQW1CO0FBQzlDLHFCQUFxQixtQkFBTyxDQUFDLDZFQUFjO0FBQzNDLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCx3QkFBd0I7QUFDeEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0B0cmV6b3IvY29ubmVjdC9saWIvZXZlbnRzL3VpLXJlc3BvbnNlLmpzPzYwOTEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmNyZWF0ZVVpUmVzcG9uc2UgPSBleHBvcnRzLlVJX1JFU1BPTlNFID0gdm9pZCAwO1xuY29uc3QgdWlfcmVxdWVzdF8xID0gcmVxdWlyZShcIi4vdWktcmVxdWVzdFwiKTtcbmV4cG9ydHMuVUlfUkVTUE9OU0UgPSB7XG4gICAgUkVDRUlWRV9QRVJNSVNTSU9OOiAndWktcmVjZWl2ZV9wZXJtaXNzaW9uJyxcbiAgICBSRUNFSVZFX0NPTkZJUk1BVElPTjogJ3VpLXJlY2VpdmVfY29uZmlybWF0aW9uJyxcbiAgICBSRUNFSVZFX1BJTjogJ3VpLXJlY2VpdmVfcGluJyxcbiAgICBSRUNFSVZFX1BBU1NQSFJBU0U6ICd1aS1yZWNlaXZlX3Bhc3NwaHJhc2UnLFxuICAgIFJFQ0VJVkVfREVWSUNFOiAndWktcmVjZWl2ZV9kZXZpY2UnLFxuICAgIFJFQ0VJVkVfQUNDT1VOVDogJ3VpLXJlY2VpdmVfYWNjb3VudCcsXG4gICAgUkVDRUlWRV9GRUU6ICd1aS1yZWNlaXZlX2ZlZScsXG4gICAgUkVDRUlWRV9XT1JEOiAndWktcmVjZWl2ZV93b3JkJyxcbiAgICBJTlZBTElEX1BBU1NQSFJBU0VfQUNUSU9OOiAndWktaW52YWxpZF9wYXNzcGhyYXNlX2FjdGlvbicsXG4gICAgQ0hBTkdFX1NFVFRJTkdTOiAndWktY2hhbmdlX3NldHRpbmdzJyxcbiAgICBMT0dJTl9DSEFMTEVOR0VfUkVTUE9OU0U6ICd1aS1sb2dpbl9jaGFsbGVuZ2VfcmVzcG9uc2UnLFxufTtcbmNvbnN0IGNyZWF0ZVVpUmVzcG9uc2UgPSAodHlwZSwgcGF5bG9hZCkgPT4gKHtcbiAgICBldmVudDogdWlfcmVxdWVzdF8xLlVJX0VWRU5ULFxuICAgIHR5cGUsXG4gICAgcGF5bG9hZCxcbn0pO1xuZXhwb3J0cy5jcmVhdGVVaVJlc3BvbnNlID0gY3JlYXRlVWlSZXNwb25zZTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXVpLXJlc3BvbnNlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@trezor/connect/lib/events/ui-response.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/connect/lib/events/webextension.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@trezor/connect/lib/events/webextension.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.WEBEXTENSION = void 0;\nexports.WEBEXTENSION = {\n    USB_PERMISSIONS_BROADCAST: 'usb-permissions',\n    USB_PERMISSIONS_INIT: 'usb-permissions-init',\n    USB_PERMISSIONS_CLOSE: 'usb-permissions-close',\n    USB_PERMISSIONS_FINISHED: 'usb-permissions-finished',\n};\n//# sourceMappingURL=webextension.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci9jb25uZWN0L2xpYi9ldmVudHMvd2ViZXh0ZW5zaW9uLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELG9CQUFvQjtBQUNwQixvQkFBb0I7QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AdHJlem9yL2Nvbm5lY3QvbGliL2V2ZW50cy93ZWJleHRlbnNpb24uanM/ZDBkNyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuV0VCRVhURU5TSU9OID0gdm9pZCAwO1xuZXhwb3J0cy5XRUJFWFRFTlNJT04gPSB7XG4gICAgVVNCX1BFUk1JU1NJT05TX0JST0FEQ0FTVDogJ3VzYi1wZXJtaXNzaW9ucycsXG4gICAgVVNCX1BFUk1JU1NJT05TX0lOSVQ6ICd1c2ItcGVybWlzc2lvbnMtaW5pdCcsXG4gICAgVVNCX1BFUk1JU1NJT05TX0NMT1NFOiAndXNiLXBlcm1pc3Npb25zLWNsb3NlJyxcbiAgICBVU0JfUEVSTUlTU0lPTlNfRklOSVNIRUQ6ICd1c2ItcGVybWlzc2lvbnMtZmluaXNoZWQnLFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXdlYmV4dGVuc2lvbi5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@trezor/connect/lib/events/webextension.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/connect/lib/exports.js":
/*!*****************************************************!*\
  !*** ./node_modules/@trezor/connect/lib/exports.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.parseConnectSettings = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.mjs\");\ntslib_1.__exportStar(__webpack_require__(/*! ./constants */ \"./node_modules/@trezor/connect/lib/constants/index.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./events */ \"./node_modules/@trezor/connect/lib/events/index.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./types */ \"./node_modules/@trezor/connect/lib/types/index.js\"), exports);\nvar connectSettings_1 = __webpack_require__(/*! ./data/connectSettings */ \"./node_modules/@trezor/connect/lib/data/connectSettings.js\");\nObject.defineProperty(exports, \"parseConnectSettings\", ({ enumerable: true, get: function () { return connectSettings_1.parseConnectSettings; } }));\n//# sourceMappingURL=exports.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci9jb25uZWN0L2xpYi9leHBvcnRzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDRCQUE0QjtBQUM1QixnQkFBZ0IsbUJBQU8sQ0FBQyxpREFBTztBQUMvQixxQkFBcUIsbUJBQU8sQ0FBQywwRUFBYTtBQUMxQyxxQkFBcUIsbUJBQU8sQ0FBQyxvRUFBVTtBQUN2QyxxQkFBcUIsbUJBQU8sQ0FBQyxrRUFBUztBQUN0Qyx3QkFBd0IsbUJBQU8sQ0FBQywwRkFBd0I7QUFDeEQsd0RBQXVELEVBQUUscUNBQXFDLGtEQUFrRCxFQUFDO0FBQ2pKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AdHJlem9yL2Nvbm5lY3QvbGliL2V4cG9ydHMuanM/MTk2ZCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMucGFyc2VDb25uZWN0U2V0dGluZ3MgPSB2b2lkIDA7XG5jb25zdCB0c2xpYl8xID0gcmVxdWlyZShcInRzbGliXCIpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vY29uc3RhbnRzXCIpLCBleHBvcnRzKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2V2ZW50c1wiKSwgZXhwb3J0cyk7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi90eXBlc1wiKSwgZXhwb3J0cyk7XG52YXIgY29ubmVjdFNldHRpbmdzXzEgPSByZXF1aXJlKFwiLi9kYXRhL2Nvbm5lY3RTZXR0aW5nc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcInBhcnNlQ29ubmVjdFNldHRpbmdzXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBjb25uZWN0U2V0dGluZ3NfMS5wYXJzZUNvbm5lY3RTZXR0aW5nczsgfSB9KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWV4cG9ydHMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@trezor/connect/lib/exports.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/connect/lib/factory.js":
/*!*****************************************************!*\
  !*** ./node_modules/@trezor/connect/lib/factory.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.factory = void 0;\nconst events_1 = __webpack_require__(/*! ./events */ \"./node_modules/@trezor/connect/lib/events/index.js\");\nconst factory = ({ eventEmitter, manifest, init, call, requestLogin, uiResponse, renderWebUSBButton, disableWebUSB, requestWebUSBDevice, cancel, dispose, }) => {\n    const api = {\n        manifest,\n        init,\n        getSettings: () => call({ method: 'getSettings' }),\n        on: (type, fn) => {\n            eventEmitter.on(type, fn);\n        },\n        off: (type, fn) => {\n            eventEmitter.removeListener(type, fn);\n        },\n        removeAllListeners: type => {\n            if (typeof type === 'string') {\n                eventEmitter.removeAllListeners(type);\n            }\n            else {\n                eventEmitter.removeAllListeners();\n            }\n        },\n        uiResponse,\n        blockchainGetAccountBalanceHistory: params => call({ ...params, method: 'blockchainGetAccountBalanceHistory' }),\n        blockchainGetCurrentFiatRates: params => call({ ...params, method: 'blockchainGetCurrentFiatRates' }),\n        blockchainGetFiatRatesForTimestamps: params => call({ ...params, method: 'blockchainGetFiatRatesForTimestamps' }),\n        blockchainDisconnect: params => call({ ...params, method: 'blockchainDisconnect' }),\n        blockchainEstimateFee: params => call({ ...params, method: 'blockchainEstimateFee' }),\n        blockchainGetTransactions: params => call({ ...params, method: 'blockchainGetTransactions' }),\n        blockchainSetCustomBackend: params => call({ ...params, method: 'blockchainSetCustomBackend' }),\n        blockchainSubscribe: params => call({ ...params, method: 'blockchainSubscribe' }),\n        blockchainSubscribeFiatRates: params => call({ ...params, method: 'blockchainSubscribeFiatRates' }),\n        blockchainUnsubscribe: params => call({ ...params, method: 'blockchainUnsubscribe' }),\n        blockchainUnsubscribeFiatRates: params => call({ ...params, method: 'blockchainUnsubscribeFiatRates' }),\n        requestLogin: params => requestLogin(params),\n        cardanoGetAddress: params => call({\n            ...params,\n            method: 'cardanoGetAddress',\n            useEventListener: eventEmitter.listenerCount(events_1.UI.ADDRESS_VALIDATION) > 0,\n        }),\n        cardanoGetNativeScriptHash: params => call({ ...params, method: 'cardanoGetNativeScriptHash' }),\n        cardanoGetPublicKey: params => call({ ...params, method: 'cardanoGetPublicKey' }),\n        cardanoSignTransaction: params => call({ ...params, method: 'cardanoSignTransaction' }),\n        cardanoComposeTransaction: params => call({ ...params, method: 'cardanoComposeTransaction' }),\n        cipherKeyValue: params => call({ ...params, method: 'cipherKeyValue' }),\n        composeTransaction: params => call({ ...params, method: 'composeTransaction' }),\n        ethereumGetAddress: params => call({\n            ...params,\n            method: 'ethereumGetAddress',\n            useEventListener: eventEmitter.listenerCount(events_1.UI.ADDRESS_VALIDATION) > 0,\n        }),\n        ethereumGetPublicKey: params => call({ ...params, method: 'ethereumGetPublicKey' }),\n        ethereumSignMessage: params => call({ ...params, method: 'ethereumSignMessage' }),\n        ethereumSignTransaction: params => call({ ...params, method: 'ethereumSignTransaction' }),\n        ethereumSignTypedData: params => call({ ...params, method: 'ethereumSignTypedData' }),\n        ethereumVerifyMessage: params => call({ ...params, method: 'ethereumVerifyMessage' }),\n        getAccountDescriptor: params => call({ ...params, method: 'getAccountDescriptor' }),\n        getAccountInfo: params => call({ ...params, method: 'getAccountInfo' }),\n        getAddress: params => call({\n            ...params,\n            method: 'getAddress',\n            useEventListener: eventEmitter.listenerCount(events_1.UI.ADDRESS_VALIDATION) > 0,\n        }),\n        getDeviceState: params => call({ ...params, method: 'getDeviceState' }),\n        getFeatures: params => call({ ...params, method: 'getFeatures' }),\n        getFirmwareHash: params => call({ ...params, method: 'getFirmwareHash' }),\n        getOwnershipId: params => call({ ...params, method: 'getOwnershipId' }),\n        getOwnershipProof: params => call({ ...params, method: 'getOwnershipProof' }),\n        getPublicKey: params => call({ ...params, method: 'getPublicKey' }),\n        nemGetAddress: params => call({\n            ...params,\n            method: 'nemGetAddress',\n            useEventListener: eventEmitter.listenerCount(events_1.UI.ADDRESS_VALIDATION) > 0,\n        }),\n        nemSignTransaction: params => call({ ...params, method: 'nemSignTransaction' }),\n        pushTransaction: params => call({ ...params, method: 'pushTransaction' }),\n        rippleGetAddress: params => call({\n            ...params,\n            method: 'rippleGetAddress',\n            useEventListener: eventEmitter.listenerCount(events_1.UI.ADDRESS_VALIDATION) > 0,\n        }),\n        rippleSignTransaction: params => call({ ...params, method: 'rippleSignTransaction' }),\n        signMessage: params => call({ ...params, method: 'signMessage' }),\n        signTransaction: params => call({ ...params, method: 'signTransaction' }),\n        solanaGetPublicKey: params => call({ ...params, method: 'solanaGetPublicKey' }),\n        solanaGetAddress: params => call({ ...params, method: 'solanaGetAddress' }),\n        solanaSignTransaction: params => call({ ...params, method: 'solanaSignTransaction' }),\n        stellarGetAddress: params => call({\n            ...params,\n            method: 'stellarGetAddress',\n            useEventListener: eventEmitter.listenerCount(events_1.UI.ADDRESS_VALIDATION) > 0,\n        }),\n        stellarSignTransaction: params => call({ ...params, method: 'stellarSignTransaction' }),\n        tezosGetAddress: params => call({\n            ...params,\n            method: 'tezosGetAddress',\n            useEventListener: eventEmitter.listenerCount(events_1.UI.ADDRESS_VALIDATION) > 0,\n        }),\n        tezosGetPublicKey: params => call({ ...params, method: 'tezosGetPublicKey' }),\n        tezosSignTransaction: params => call({ ...params, method: 'tezosSignTransaction' }),\n        unlockPath: params => call({ ...params, method: 'unlockPath' }),\n        eosGetPublicKey: params => call({ ...params, method: 'eosGetPublicKey' }),\n        eosSignTransaction: params => call({ ...params, method: 'eosSignTransaction' }),\n        binanceGetAddress: params => call({\n            ...params,\n            method: 'binanceGetAddress',\n            useEventListener: eventEmitter.listenerCount(events_1.UI.ADDRESS_VALIDATION) > 0,\n        }),\n        binanceGetPublicKey: params => call({ ...params, method: 'binanceGetPublicKey' }),\n        binanceSignTransaction: params => call({ ...params, method: 'binanceSignTransaction' }),\n        verifyMessage: params => call({ ...params, method: 'verifyMessage' }),\n        resetDevice: params => call({ ...params, method: 'resetDevice' }),\n        wipeDevice: params => call({ ...params, method: 'wipeDevice' }),\n        checkFirmwareAuthenticity: params => call({ ...params, method: 'checkFirmwareAuthenticity' }),\n        applyFlags: params => call({ ...params, method: 'applyFlags' }),\n        applySettings: params => call({ ...params, method: 'applySettings' }),\n        authenticateDevice: params => call({ ...params, method: 'authenticateDevice' }),\n        authorizeCoinjoin: params => call({ ...params, method: 'authorizeCoinjoin' }),\n        cancelCoinjoinAuthorization: params => call({ ...params, method: 'cancelCoinjoinAuthorization' }),\n        showDeviceTutorial: params => call({ ...params, method: 'showDeviceTutorial' }),\n        backupDevice: params => call({ ...params, method: 'backupDevice' }),\n        changePin: params => call({ ...params, method: 'changePin' }),\n        changeWipeCode: params => call({ ...params, method: 'changeWipeCode' }),\n        firmwareUpdate: params => call({ ...params, method: 'firmwareUpdate' }),\n        recoveryDevice: params => call({ ...params, method: 'recoveryDevice' }),\n        getCoinInfo: params => call({ ...params, method: 'getCoinInfo' }),\n        rebootToBootloader: params => call({ ...params, method: 'rebootToBootloader' }),\n        setBusy: params => call({ ...params, method: 'setBusy' }),\n        setProxy: params => call({ ...params, method: 'setProxy' }),\n        dispose,\n        cancel,\n        renderWebUSBButton,\n        disableWebUSB,\n        requestWebUSBDevice,\n    };\n    return api;\n};\nexports.factory = factory;\n//# sourceMappingURL=factory.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@trezor/connect/lib/factory.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/connect/lib/types/account.js":
/*!***********************************************************!*\
  !*** ./node_modules/@trezor/connect/lib/types/account.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n//# sourceMappingURL=account.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci9jb25uZWN0L2xpYi90eXBlcy9hY2NvdW50LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AdHJlem9yL2Nvbm5lY3QvbGliL3R5cGVzL2FjY291bnQuanM/MGY2MiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFjY291bnQuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@trezor/connect/lib/types/account.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/connect/lib/types/api/binance/index.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@trezor/connect/lib/types/api/binance/index.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.BinanceSignTransaction = exports.BinancePreparedTransaction = exports.BinancePreparedMessage = exports.BinanceSDKTransaction = void 0;\nconst constants_1 = __webpack_require__(/*! ../../../constants */ \"./node_modules/@trezor/connect/lib/constants/index.js\");\nconst params_1 = __webpack_require__(/*! ../../params */ \"./node_modules/@trezor/connect/lib/types/params.js\");\nconst schema_utils_1 = __webpack_require__(/*! @trezor/schema-utils */ \"./node_modules/@trezor/schema-utils/lib/index.js\");\nexports.BinanceSDKTransaction = schema_utils_1.Type.Object({\n    chain_id: schema_utils_1.Type.String(),\n    account_number: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    memo: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    sequence: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    source: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    transfer: schema_utils_1.Type.Optional(constants_1.PROTO.BinanceTransferMsg),\n    placeOrder: schema_utils_1.Type.Optional(constants_1.PROTO.BinanceOrderMsg),\n    cancelOrder: schema_utils_1.Type.Optional(constants_1.PROTO.BinanceCancelMsg),\n});\nexports.BinancePreparedMessage = schema_utils_1.Type.Union([\n    schema_utils_1.Type.Intersect([\n        constants_1.PROTO.BinanceTransferMsg,\n        schema_utils_1.Type.Object({\n            type: schema_utils_1.Type.Literal('BinanceTransferMsg'),\n        }),\n    ]),\n    schema_utils_1.Type.Intersect([\n        constants_1.PROTO.BinanceOrderMsg,\n        schema_utils_1.Type.Object({\n            type: schema_utils_1.Type.Literal('BinanceOrderMsg'),\n        }),\n    ]),\n    schema_utils_1.Type.Intersect([\n        constants_1.PROTO.BinanceCancelMsg,\n        schema_utils_1.Type.Object({\n            type: schema_utils_1.Type.Literal('BinanceCancelMsg'),\n        }),\n    ]),\n]);\nexports.BinancePreparedTransaction = schema_utils_1.Type.Intersect([\n    exports.BinanceSDKTransaction,\n    schema_utils_1.Type.Object({\n        messages: schema_utils_1.Type.Array(exports.BinancePreparedMessage),\n        account_number: schema_utils_1.Type.Number(),\n        sequence: schema_utils_1.Type.Number(),\n        source: schema_utils_1.Type.Number(),\n    }),\n]);\nexports.BinanceSignTransaction = schema_utils_1.Type.Object({\n    path: params_1.DerivationPath,\n    transaction: exports.BinanceSDKTransaction,\n    chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n});\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci9jb25uZWN0L2xpYi90eXBlcy9hcGkvYmluYW5jZS9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCw4QkFBOEIsR0FBRyxrQ0FBa0MsR0FBRyw4QkFBOEIsR0FBRyw2QkFBNkI7QUFDcEksb0JBQW9CLG1CQUFPLENBQUMsaUZBQW9CO0FBQ2hELGlCQUFpQixtQkFBTyxDQUFDLHdFQUFjO0FBQ3ZDLHVCQUF1QixtQkFBTyxDQUFDLDhFQUFzQjtBQUNyRCw2QkFBNkI7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCw4QkFBOEI7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxrQ0FBa0M7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsOEJBQThCO0FBQzlCO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHRyZXpvci9jb25uZWN0L2xpYi90eXBlcy9hcGkvYmluYW5jZS9pbmRleC5qcz9hMTNiIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5CaW5hbmNlU2lnblRyYW5zYWN0aW9uID0gZXhwb3J0cy5CaW5hbmNlUHJlcGFyZWRUcmFuc2FjdGlvbiA9IGV4cG9ydHMuQmluYW5jZVByZXBhcmVkTWVzc2FnZSA9IGV4cG9ydHMuQmluYW5jZVNES1RyYW5zYWN0aW9uID0gdm9pZCAwO1xuY29uc3QgY29uc3RhbnRzXzEgPSByZXF1aXJlKFwiLi4vLi4vLi4vY29uc3RhbnRzXCIpO1xuY29uc3QgcGFyYW1zXzEgPSByZXF1aXJlKFwiLi4vLi4vcGFyYW1zXCIpO1xuY29uc3Qgc2NoZW1hX3V0aWxzXzEgPSByZXF1aXJlKFwiQHRyZXpvci9zY2hlbWEtdXRpbHNcIik7XG5leHBvcnRzLkJpbmFuY2VTREtUcmFuc2FjdGlvbiA9IHNjaGVtYV91dGlsc18xLlR5cGUuT2JqZWN0KHtcbiAgICBjaGFpbl9pZDogc2NoZW1hX3V0aWxzXzEuVHlwZS5TdHJpbmcoKSxcbiAgICBhY2NvdW50X251bWJlcjogc2NoZW1hX3V0aWxzXzEuVHlwZS5PcHRpb25hbChzY2hlbWFfdXRpbHNfMS5UeXBlLk51bWJlcigpKSxcbiAgICBtZW1vOiBzY2hlbWFfdXRpbHNfMS5UeXBlLk9wdGlvbmFsKHNjaGVtYV91dGlsc18xLlR5cGUuU3RyaW5nKCkpLFxuICAgIHNlcXVlbmNlOiBzY2hlbWFfdXRpbHNfMS5UeXBlLk9wdGlvbmFsKHNjaGVtYV91dGlsc18xLlR5cGUuTnVtYmVyKCkpLFxuICAgIHNvdXJjZTogc2NoZW1hX3V0aWxzXzEuVHlwZS5PcHRpb25hbChzY2hlbWFfdXRpbHNfMS5UeXBlLk51bWJlcigpKSxcbiAgICB0cmFuc2Zlcjogc2NoZW1hX3V0aWxzXzEuVHlwZS5PcHRpb25hbChjb25zdGFudHNfMS5QUk9UTy5CaW5hbmNlVHJhbnNmZXJNc2cpLFxuICAgIHBsYWNlT3JkZXI6IHNjaGVtYV91dGlsc18xLlR5cGUuT3B0aW9uYWwoY29uc3RhbnRzXzEuUFJPVE8uQmluYW5jZU9yZGVyTXNnKSxcbiAgICBjYW5jZWxPcmRlcjogc2NoZW1hX3V0aWxzXzEuVHlwZS5PcHRpb25hbChjb25zdGFudHNfMS5QUk9UTy5CaW5hbmNlQ2FuY2VsTXNnKSxcbn0pO1xuZXhwb3J0cy5CaW5hbmNlUHJlcGFyZWRNZXNzYWdlID0gc2NoZW1hX3V0aWxzXzEuVHlwZS5VbmlvbihbXG4gICAgc2NoZW1hX3V0aWxzXzEuVHlwZS5JbnRlcnNlY3QoW1xuICAgICAgICBjb25zdGFudHNfMS5QUk9UTy5CaW5hbmNlVHJhbnNmZXJNc2csXG4gICAgICAgIHNjaGVtYV91dGlsc18xLlR5cGUuT2JqZWN0KHtcbiAgICAgICAgICAgIHR5cGU6IHNjaGVtYV91dGlsc18xLlR5cGUuTGl0ZXJhbCgnQmluYW5jZVRyYW5zZmVyTXNnJyksXG4gICAgICAgIH0pLFxuICAgIF0pLFxuICAgIHNjaGVtYV91dGlsc18xLlR5cGUuSW50ZXJzZWN0KFtcbiAgICAgICAgY29uc3RhbnRzXzEuUFJPVE8uQmluYW5jZU9yZGVyTXNnLFxuICAgICAgICBzY2hlbWFfdXRpbHNfMS5UeXBlLk9iamVjdCh7XG4gICAgICAgICAgICB0eXBlOiBzY2hlbWFfdXRpbHNfMS5UeXBlLkxpdGVyYWwoJ0JpbmFuY2VPcmRlck1zZycpLFxuICAgICAgICB9KSxcbiAgICBdKSxcbiAgICBzY2hlbWFfdXRpbHNfMS5UeXBlLkludGVyc2VjdChbXG4gICAgICAgIGNvbnN0YW50c18xLlBST1RPLkJpbmFuY2VDYW5jZWxNc2csXG4gICAgICAgIHNjaGVtYV91dGlsc18xLlR5cGUuT2JqZWN0KHtcbiAgICAgICAgICAgIHR5cGU6IHNjaGVtYV91dGlsc18xLlR5cGUuTGl0ZXJhbCgnQmluYW5jZUNhbmNlbE1zZycpLFxuICAgICAgICB9KSxcbiAgICBdKSxcbl0pO1xuZXhwb3J0cy5CaW5hbmNlUHJlcGFyZWRUcmFuc2FjdGlvbiA9IHNjaGVtYV91dGlsc18xLlR5cGUuSW50ZXJzZWN0KFtcbiAgICBleHBvcnRzLkJpbmFuY2VTREtUcmFuc2FjdGlvbixcbiAgICBzY2hlbWFfdXRpbHNfMS5UeXBlLk9iamVjdCh7XG4gICAgICAgIG1lc3NhZ2VzOiBzY2hlbWFfdXRpbHNfMS5UeXBlLkFycmF5KGV4cG9ydHMuQmluYW5jZVByZXBhcmVkTWVzc2FnZSksXG4gICAgICAgIGFjY291bnRfbnVtYmVyOiBzY2hlbWFfdXRpbHNfMS5UeXBlLk51bWJlcigpLFxuICAgICAgICBzZXF1ZW5jZTogc2NoZW1hX3V0aWxzXzEuVHlwZS5OdW1iZXIoKSxcbiAgICAgICAgc291cmNlOiBzY2hlbWFfdXRpbHNfMS5UeXBlLk51bWJlcigpLFxuICAgIH0pLFxuXSk7XG5leHBvcnRzLkJpbmFuY2VTaWduVHJhbnNhY3Rpb24gPSBzY2hlbWFfdXRpbHNfMS5UeXBlLk9iamVjdCh7XG4gICAgcGF0aDogcGFyYW1zXzEuRGVyaXZhdGlvblBhdGgsXG4gICAgdHJhbnNhY3Rpb246IGV4cG9ydHMuQmluYW5jZVNES1RyYW5zYWN0aW9uLFxuICAgIGNodW5raWZ5OiBzY2hlbWFfdXRpbHNfMS5UeXBlLk9wdGlvbmFsKHNjaGVtYV91dGlsc18xLlR5cGUuQm9vbGVhbigpKSxcbn0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@trezor/connect/lib/types/api/binance/index.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/connect/lib/types/api/bitcoin/index.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@trezor/connect/lib/types/api/bitcoin/index.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.VerifyMessage = exports.SignMessage = void 0;\nconst params_1 = __webpack_require__(/*! ../../params */ \"./node_modules/@trezor/connect/lib/types/params.js\");\nconst schema_utils_1 = __webpack_require__(/*! @trezor/schema-utils */ \"./node_modules/@trezor/schema-utils/lib/index.js\");\nexports.SignMessage = schema_utils_1.Type.Object({\n    path: params_1.DerivationPath,\n    coin: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    message: schema_utils_1.Type.String(),\n    hex: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    no_script_type: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n});\nexports.VerifyMessage = schema_utils_1.Type.Object({\n    address: schema_utils_1.Type.String(),\n    signature: schema_utils_1.Type.String(),\n    message: schema_utils_1.Type.String(),\n    coin: schema_utils_1.Type.String(),\n    hex: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n});\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci9jb25uZWN0L2xpYi90eXBlcy9hcGkvYml0Y29pbi9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxxQkFBcUIsR0FBRyxtQkFBbUI7QUFDM0MsaUJBQWlCLG1CQUFPLENBQUMsd0VBQWM7QUFDdkMsdUJBQXVCLG1CQUFPLENBQUMsOEVBQXNCO0FBQ3JELG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNELHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AdHJlem9yL2Nvbm5lY3QvbGliL3R5cGVzL2FwaS9iaXRjb2luL2luZGV4LmpzPzEwMWIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlZlcmlmeU1lc3NhZ2UgPSBleHBvcnRzLlNpZ25NZXNzYWdlID0gdm9pZCAwO1xuY29uc3QgcGFyYW1zXzEgPSByZXF1aXJlKFwiLi4vLi4vcGFyYW1zXCIpO1xuY29uc3Qgc2NoZW1hX3V0aWxzXzEgPSByZXF1aXJlKFwiQHRyZXpvci9zY2hlbWEtdXRpbHNcIik7XG5leHBvcnRzLlNpZ25NZXNzYWdlID0gc2NoZW1hX3V0aWxzXzEuVHlwZS5PYmplY3Qoe1xuICAgIHBhdGg6IHBhcmFtc18xLkRlcml2YXRpb25QYXRoLFxuICAgIGNvaW46IHNjaGVtYV91dGlsc18xLlR5cGUuT3B0aW9uYWwoc2NoZW1hX3V0aWxzXzEuVHlwZS5TdHJpbmcoKSksXG4gICAgbWVzc2FnZTogc2NoZW1hX3V0aWxzXzEuVHlwZS5TdHJpbmcoKSxcbiAgICBoZXg6IHNjaGVtYV91dGlsc18xLlR5cGUuT3B0aW9uYWwoc2NoZW1hX3V0aWxzXzEuVHlwZS5Cb29sZWFuKCkpLFxuICAgIG5vX3NjcmlwdF90eXBlOiBzY2hlbWFfdXRpbHNfMS5UeXBlLk9wdGlvbmFsKHNjaGVtYV91dGlsc18xLlR5cGUuQm9vbGVhbigpKSxcbn0pO1xuZXhwb3J0cy5WZXJpZnlNZXNzYWdlID0gc2NoZW1hX3V0aWxzXzEuVHlwZS5PYmplY3Qoe1xuICAgIGFkZHJlc3M6IHNjaGVtYV91dGlsc18xLlR5cGUuU3RyaW5nKCksXG4gICAgc2lnbmF0dXJlOiBzY2hlbWFfdXRpbHNfMS5UeXBlLlN0cmluZygpLFxuICAgIG1lc3NhZ2U6IHNjaGVtYV91dGlsc18xLlR5cGUuU3RyaW5nKCksXG4gICAgY29pbjogc2NoZW1hX3V0aWxzXzEuVHlwZS5TdHJpbmcoKSxcbiAgICBoZXg6IHNjaGVtYV91dGlsc18xLlR5cGUuT3B0aW9uYWwoc2NoZW1hX3V0aWxzXzEuVHlwZS5Cb29sZWFuKCkpLFxufSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@trezor/connect/lib/types/api/bitcoin/index.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/connect/lib/types/api/cardano/index.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@trezor/connect/lib/types/api/cardano/index.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.CardanoSignedTxData = exports.CardanoAuxiliaryDataSupplement = exports.CardanoSignedTxWitness = exports.CardanoSignTransactionExtended = exports.CardanoSignTransaction = exports.CardanoAuxiliaryData = exports.CardanoCVoteRegistrationParameters = exports.CardanoCVoteRegistrationDelegation = exports.CardanoReferenceInput = exports.CardanoRequiredSigner = exports.CardanoCollateralInput = exports.CardanoMint = exports.CardanoWithdrawal = exports.CardanoCertificate = exports.CardanoPoolParameters = exports.CardanoPoolMargin = exports.CardanoPoolMetadata = exports.CardanoPoolRelay = exports.CardanoPoolOwner = exports.CardanoOutput = exports.CardanoAssetGroup = exports.CardanoToken = exports.CardanoInput = exports.CardanoGetPublicKey = exports.CardanoNativeScriptHash = exports.CardanoGetNativeScriptHash = exports.CardanoNativeScript = exports.CardanoGetAddress = exports.CardanoAddressParameters = exports.CardanoCertificatePointer = void 0;\nconst schema_utils_1 = __webpack_require__(/*! @trezor/schema-utils */ \"./node_modules/@trezor/schema-utils/lib/index.js\");\nconst constants_1 = __webpack_require__(/*! ../../../constants */ \"./node_modules/@trezor/connect/lib/constants/index.js\");\nconst params_1 = __webpack_require__(/*! ../../params */ \"./node_modules/@trezor/connect/lib/types/params.js\");\nexports.CardanoCertificatePointer = schema_utils_1.Type.Object({\n    blockIndex: schema_utils_1.Type.Number(),\n    txIndex: schema_utils_1.Type.Number(),\n    certificateIndex: schema_utils_1.Type.Number(),\n});\nexports.CardanoAddressParameters = schema_utils_1.Type.Object({\n    addressType: constants_1.PROTO.EnumCardanoAddressType,\n    path: schema_utils_1.Type.Optional(params_1.DerivationPath),\n    stakingPath: schema_utils_1.Type.Optional(params_1.DerivationPath),\n    stakingKeyHash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    certificatePointer: schema_utils_1.Type.Optional(exports.CardanoCertificatePointer),\n    paymentScriptHash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    stakingScriptHash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n});\nexports.CardanoGetAddress = schema_utils_1.Type.Object({\n    addressParameters: exports.CardanoAddressParameters,\n    protocolMagic: schema_utils_1.Type.Number(),\n    networkId: schema_utils_1.Type.Number(),\n    address: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    showOnTrezor: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    derivationType: schema_utils_1.Type.Optional(constants_1.PROTO.EnumCardanoDerivationType),\n    chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n});\nexports.CardanoNativeScript = schema_utils_1.Type.Recursive(This => schema_utils_1.Type.Object({\n    type: constants_1.PROTO.EnumCardanoNativeScriptType,\n    scripts: schema_utils_1.Type.Optional(schema_utils_1.Type.Array(This)),\n    keyHash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    keyPath: schema_utils_1.Type.Optional(params_1.DerivationPath),\n    requiredSignaturesCount: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    invalidBefore: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    invalidHereafter: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n}));\nexports.CardanoGetNativeScriptHash = schema_utils_1.Type.Object({\n    script: exports.CardanoNativeScript,\n    displayFormat: constants_1.PROTO.EnumCardanoNativeScriptHashDisplayFormat,\n    derivationType: schema_utils_1.Type.Optional(constants_1.PROTO.EnumCardanoDerivationType),\n});\nexports.CardanoNativeScriptHash = schema_utils_1.Type.Object({\n    scriptHash: schema_utils_1.Type.String(),\n});\nexports.CardanoGetPublicKey = schema_utils_1.Type.Intersect([\n    params_1.GetPublicKey,\n    schema_utils_1.Type.Object({\n        derivationType: schema_utils_1.Type.Optional(constants_1.PROTO.EnumCardanoDerivationType),\n    }),\n]);\nexports.CardanoInput = schema_utils_1.Type.Object({\n    path: schema_utils_1.Type.Optional(params_1.DerivationPath),\n    prev_hash: schema_utils_1.Type.String(),\n    prev_index: schema_utils_1.Type.Number(),\n});\nexports.CardanoToken = schema_utils_1.Type.Object({\n    assetNameBytes: schema_utils_1.Type.String(),\n    amount: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    mintAmount: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n});\nexports.CardanoAssetGroup = schema_utils_1.Type.Object({\n    policyId: schema_utils_1.Type.String(),\n    tokenAmounts: schema_utils_1.Type.Array(exports.CardanoToken),\n});\nexports.CardanoOutput = schema_utils_1.Type.Intersect([\n    schema_utils_1.Type.Union([\n        schema_utils_1.Type.Object({\n            addressParameters: exports.CardanoAddressParameters,\n        }),\n        schema_utils_1.Type.Object({\n            address: schema_utils_1.Type.String(),\n        }),\n    ]),\n    schema_utils_1.Type.Object({\n        amount: schema_utils_1.Type.String(),\n        tokenBundle: schema_utils_1.Type.Optional(schema_utils_1.Type.Array(exports.CardanoAssetGroup)),\n        datumHash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n        format: schema_utils_1.Type.Optional(constants_1.PROTO.EnumCardanoTxOutputSerializationFormat),\n        inlineDatum: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n        referenceScript: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    }),\n]);\nexports.CardanoPoolOwner = schema_utils_1.Type.Object({\n    stakingKeyPath: schema_utils_1.Type.Optional(params_1.DerivationPath),\n    stakingKeyHash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n});\nexports.CardanoPoolRelay = schema_utils_1.Type.Object({\n    type: constants_1.PROTO.EnumCardanoPoolRelayType,\n    ipv4Address: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    ipv6Address: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    port: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    hostName: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n});\nexports.CardanoPoolMetadata = schema_utils_1.Type.Object({\n    url: schema_utils_1.Type.String(),\n    hash: schema_utils_1.Type.String(),\n});\nexports.CardanoPoolMargin = schema_utils_1.Type.Object({\n    numerator: schema_utils_1.Type.String(),\n    denominator: schema_utils_1.Type.String(),\n});\nexports.CardanoPoolParameters = schema_utils_1.Type.Object({\n    poolId: schema_utils_1.Type.String(),\n    vrfKeyHash: schema_utils_1.Type.String(),\n    pledge: schema_utils_1.Type.String(),\n    cost: schema_utils_1.Type.String(),\n    margin: exports.CardanoPoolMargin,\n    rewardAccount: schema_utils_1.Type.String(),\n    owners: schema_utils_1.Type.Array(exports.CardanoPoolOwner, { minItems: 1 }),\n    relays: schema_utils_1.Type.Array(exports.CardanoPoolRelay),\n    metadata: schema_utils_1.Type.Optional(exports.CardanoPoolMetadata),\n});\nexports.CardanoCertificate = schema_utils_1.Type.Object({\n    type: constants_1.PROTO.EnumCardanoCertificateType,\n    path: schema_utils_1.Type.Optional(params_1.DerivationPath),\n    pool: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    poolParameters: schema_utils_1.Type.Optional(exports.CardanoPoolParameters),\n    scriptHash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    keyHash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n});\nexports.CardanoWithdrawal = schema_utils_1.Type.Object({\n    path: schema_utils_1.Type.Optional(params_1.DerivationPath),\n    amount: schema_utils_1.Type.String(),\n    scriptHash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    keyHash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n});\nexports.CardanoMint = schema_utils_1.Type.Array(exports.CardanoAssetGroup);\nexports.CardanoCollateralInput = schema_utils_1.Type.Object({\n    path: schema_utils_1.Type.Optional(params_1.DerivationPath),\n    prev_hash: schema_utils_1.Type.String(),\n    prev_index: schema_utils_1.Type.Number(),\n});\nexports.CardanoRequiredSigner = schema_utils_1.Type.Object({\n    keyPath: schema_utils_1.Type.Optional(params_1.DerivationPath),\n    keyHash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n});\nexports.CardanoReferenceInput = schema_utils_1.Type.Object({\n    prev_hash: schema_utils_1.Type.String(),\n    prev_index: schema_utils_1.Type.Number(),\n});\nexports.CardanoCVoteRegistrationDelegation = schema_utils_1.Type.Object({\n    votePublicKey: schema_utils_1.Type.String(),\n    weight: schema_utils_1.Type.Number(),\n});\nexports.CardanoCVoteRegistrationParameters = schema_utils_1.Type.Object({\n    votePublicKey: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    stakingPath: params_1.DerivationPath,\n    paymentAddressParameters: schema_utils_1.Type.Optional(exports.CardanoAddressParameters),\n    nonce: schema_utils_1.Type.String(),\n    format: schema_utils_1.Type.Optional(constants_1.PROTO.EnumCardanoCVoteRegistrationFormat),\n    delegations: schema_utils_1.Type.Optional(schema_utils_1.Type.Array(exports.CardanoCVoteRegistrationDelegation)),\n    votingPurpose: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    paymentAddress: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n});\nexports.CardanoAuxiliaryData = schema_utils_1.Type.Object({\n    hash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    cVoteRegistrationParameters: schema_utils_1.Type.Optional(exports.CardanoCVoteRegistrationParameters),\n});\nexports.CardanoSignTransaction = schema_utils_1.Type.Object({\n    inputs: schema_utils_1.Type.Array(exports.CardanoInput),\n    outputs: schema_utils_1.Type.Array(exports.CardanoOutput),\n    fee: schema_utils_1.Type.Uint(),\n    ttl: schema_utils_1.Type.Optional(schema_utils_1.Type.Uint()),\n    certificates: schema_utils_1.Type.Optional(schema_utils_1.Type.Array(exports.CardanoCertificate)),\n    withdrawals: schema_utils_1.Type.Optional(schema_utils_1.Type.Array(exports.CardanoWithdrawal)),\n    validityIntervalStart: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    auxiliaryData: schema_utils_1.Type.Optional(exports.CardanoAuxiliaryData),\n    mint: schema_utils_1.Type.Optional(exports.CardanoMint),\n    scriptDataHash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    collateralInputs: schema_utils_1.Type.Optional(schema_utils_1.Type.Array(exports.CardanoCollateralInput)),\n    requiredSigners: schema_utils_1.Type.Optional(schema_utils_1.Type.Array(exports.CardanoRequiredSigner)),\n    collateralReturn: schema_utils_1.Type.Optional(exports.CardanoOutput),\n    totalCollateral: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    referenceInputs: schema_utils_1.Type.Optional(schema_utils_1.Type.Array(exports.CardanoReferenceInput)),\n    additionalWitnessRequests: schema_utils_1.Type.Optional(schema_utils_1.Type.Array(params_1.DerivationPath)),\n    protocolMagic: schema_utils_1.Type.Number(),\n    networkId: schema_utils_1.Type.Number(),\n    signingMode: constants_1.PROTO.EnumCardanoTxSigningMode,\n    derivationType: schema_utils_1.Type.Optional(constants_1.PROTO.EnumCardanoDerivationType),\n    includeNetworkId: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n});\nexports.CardanoSignTransactionExtended = schema_utils_1.Type.Intersect([\n    exports.CardanoSignTransaction,\n    schema_utils_1.Type.Object({\n        unsignedTx: schema_utils_1.Type.Object({\n            body: schema_utils_1.Type.String(),\n            hash: schema_utils_1.Type.String(),\n        }),\n        testnet: schema_utils_1.Type.Boolean(),\n    }),\n]);\nexports.CardanoSignedTxWitness = schema_utils_1.Type.Object({\n    type: constants_1.PROTO.EnumCardanoTxWitnessType,\n    pubKey: schema_utils_1.Type.String(),\n    signature: schema_utils_1.Type.String(),\n    chainCode: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n});\nexports.CardanoAuxiliaryDataSupplement = schema_utils_1.Type.Object({\n    type: constants_1.PROTO.EnumCardanoTxAuxiliaryDataSupplementType,\n    auxiliaryDataHash: schema_utils_1.Type.String(),\n    cVoteRegistrationSignature: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n});\nexports.CardanoSignedTxData = schema_utils_1.Type.Object({\n    hash: schema_utils_1.Type.String(),\n    witnesses: schema_utils_1.Type.Array(exports.CardanoSignedTxWitness),\n    auxiliaryDataSupplement: schema_utils_1.Type.Optional(exports.CardanoAuxiliaryDataSupplement),\n});\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@trezor/connect/lib/types/api/cardano/index.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/connect/lib/types/api/eos/index.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@trezor/connect/lib/types/api/eos/index.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.EosSignTransaction = exports.EosSDKTransaction = exports.EosTxAction = exports.EosTxActionCommon = exports.EosAuthorization = exports.EosTxHeader = exports.EosPublicKey = void 0;\nconst constants_1 = __webpack_require__(/*! ../../../constants */ \"./node_modules/@trezor/connect/lib/constants/index.js\");\nconst params_1 = __webpack_require__(/*! ../../params */ \"./node_modules/@trezor/connect/lib/types/params.js\");\nconst schema_utils_1 = __webpack_require__(/*! @trezor/schema-utils */ \"./node_modules/@trezor/schema-utils/lib/index.js\");\nexports.EosPublicKey = schema_utils_1.Type.Object({\n    wifPublicKey: schema_utils_1.Type.String(),\n    rawPublicKey: schema_utils_1.Type.String(),\n    path: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    serializedPath: schema_utils_1.Type.String(),\n});\nexports.EosTxHeader = schema_utils_1.Type.Object({\n    expiration: schema_utils_1.Type.Union([schema_utils_1.Type.Uint(), schema_utils_1.Type.String()]),\n    refBlockNum: schema_utils_1.Type.Number(),\n    refBlockPrefix: schema_utils_1.Type.Number(),\n    maxNetUsageWords: schema_utils_1.Type.Number(),\n    maxCpuUsageMs: schema_utils_1.Type.Number(),\n    delaySec: schema_utils_1.Type.Number(),\n});\nexports.EosAuthorization = schema_utils_1.Type.Object({\n    threshold: schema_utils_1.Type.Number(),\n    keys: schema_utils_1.Type.Array(constants_1.PROTO.EosAuthorizationKey),\n    accounts: schema_utils_1.Type.Array(schema_utils_1.Type.Object({\n        permission: constants_1.PROTO.EosPermissionLevel,\n        weight: schema_utils_1.Type.Number(),\n    })),\n    waits: schema_utils_1.Type.Array(constants_1.PROTO.EosAuthorizationWait),\n});\nexports.EosTxActionCommon = schema_utils_1.Type.Object({\n    account: schema_utils_1.Type.String(),\n    authorization: schema_utils_1.Type.Array(constants_1.PROTO.EosPermissionLevel),\n});\nexports.EosTxAction = schema_utils_1.Type.Union([\n    schema_utils_1.Type.Intersect([\n        exports.EosTxActionCommon,\n        schema_utils_1.Type.Object({\n            name: schema_utils_1.Type.Literal('transfer'),\n            data: schema_utils_1.Type.Object({\n                from: schema_utils_1.Type.String(),\n                to: schema_utils_1.Type.String(),\n                quantity: schema_utils_1.Type.String(),\n                memo: schema_utils_1.Type.String(),\n            }),\n        }),\n    ]),\n    schema_utils_1.Type.Intersect([\n        exports.EosTxActionCommon,\n        schema_utils_1.Type.Object({\n            name: schema_utils_1.Type.Literal('delegatebw'),\n            data: schema_utils_1.Type.Object({\n                from: schema_utils_1.Type.String(),\n                receiver: schema_utils_1.Type.String(),\n                stake_net_quantity: schema_utils_1.Type.String(),\n                stake_cpu_quantity: schema_utils_1.Type.String(),\n                transfer: schema_utils_1.Type.Boolean(),\n            }),\n        }),\n    ]),\n    schema_utils_1.Type.Intersect([\n        exports.EosTxActionCommon,\n        schema_utils_1.Type.Object({\n            name: schema_utils_1.Type.Literal('undelegatebw'),\n            data: schema_utils_1.Type.Object({\n                from: schema_utils_1.Type.String(),\n                receiver: schema_utils_1.Type.String(),\n                unstake_net_quantity: schema_utils_1.Type.String(),\n                unstake_cpu_quantity: schema_utils_1.Type.String(),\n            }),\n        }),\n    ]),\n    schema_utils_1.Type.Intersect([\n        exports.EosTxActionCommon,\n        schema_utils_1.Type.Object({\n            name: schema_utils_1.Type.Literal('buyram'),\n            data: schema_utils_1.Type.Object({\n                payer: schema_utils_1.Type.String(),\n                receiver: schema_utils_1.Type.String(),\n                quant: schema_utils_1.Type.String(),\n            }),\n        }),\n    ]),\n    schema_utils_1.Type.Intersect([\n        exports.EosTxActionCommon,\n        schema_utils_1.Type.Object({\n            name: schema_utils_1.Type.Literal('buyrambytes'),\n            data: constants_1.PROTO.EosActionBuyRamBytes,\n        }),\n    ]),\n    schema_utils_1.Type.Intersect([\n        exports.EosTxActionCommon,\n        schema_utils_1.Type.Object({\n            name: schema_utils_1.Type.Literal('sellram'),\n            data: constants_1.PROTO.EosActionSellRam,\n        }),\n    ]),\n    schema_utils_1.Type.Intersect([\n        exports.EosTxActionCommon,\n        schema_utils_1.Type.Object({\n            name: schema_utils_1.Type.Literal('voteproducer'),\n            data: schema_utils_1.Type.Object({\n                voter: schema_utils_1.Type.String(),\n                proxy: schema_utils_1.Type.String(),\n                producers: schema_utils_1.Type.Array(schema_utils_1.Type.String()),\n            }),\n        }),\n    ]),\n    schema_utils_1.Type.Intersect([\n        exports.EosTxActionCommon,\n        schema_utils_1.Type.Object({\n            name: schema_utils_1.Type.Literal('refund'),\n            data: constants_1.PROTO.EosActionRefund,\n        }),\n    ]),\n    schema_utils_1.Type.Intersect([\n        exports.EosTxActionCommon,\n        schema_utils_1.Type.Object({\n            name: schema_utils_1.Type.Literal('updateauth'),\n            data: schema_utils_1.Type.Object({\n                account: schema_utils_1.Type.String(),\n                permission: schema_utils_1.Type.String(),\n                parent: schema_utils_1.Type.String(),\n                auth: exports.EosAuthorization,\n            }),\n        }),\n    ]),\n    schema_utils_1.Type.Intersect([\n        exports.EosTxActionCommon,\n        schema_utils_1.Type.Object({\n            name: schema_utils_1.Type.Literal('deleteauth'),\n            data: constants_1.PROTO.EosActionDeleteAuth,\n        }),\n    ]),\n    schema_utils_1.Type.Intersect([\n        exports.EosTxActionCommon,\n        schema_utils_1.Type.Object({\n            name: schema_utils_1.Type.Literal('linkauth'),\n            data: constants_1.PROTO.EosActionLinkAuth,\n        }),\n    ]),\n    schema_utils_1.Type.Intersect([\n        exports.EosTxActionCommon,\n        schema_utils_1.Type.Object({\n            name: schema_utils_1.Type.Literal('unlinkauth'),\n            data: constants_1.PROTO.EosActionUnlinkAuth,\n        }),\n    ]),\n    schema_utils_1.Type.Intersect([\n        exports.EosTxActionCommon,\n        schema_utils_1.Type.Object({\n            name: schema_utils_1.Type.Literal('newaccount'),\n            data: schema_utils_1.Type.Object({\n                creator: schema_utils_1.Type.String(),\n                name: schema_utils_1.Type.String(),\n                owner: exports.EosAuthorization,\n                active: exports.EosAuthorization,\n            }),\n        }),\n    ]),\n]);\nexports.EosSDKTransaction = schema_utils_1.Type.Object({\n    chainId: schema_utils_1.Type.String(),\n    header: exports.EosTxHeader,\n    actions: schema_utils_1.Type.Array(schema_utils_1.Type.Union([\n        exports.EosTxAction,\n        schema_utils_1.Type.Intersect([\n            exports.EosTxActionCommon,\n            schema_utils_1.Type.Object({\n                name: schema_utils_1.Type.String(),\n                data: schema_utils_1.Type.String(),\n            }),\n        ]),\n    ])),\n});\nexports.EosSignTransaction = schema_utils_1.Type.Object({\n    path: params_1.DerivationPath,\n    transaction: exports.EosSDKTransaction,\n    chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n});\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@trezor/connect/lib/types/api/eos/index.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/connect/lib/types/api/ethereum/index.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@trezor/connect/lib/types/api/ethereum/index.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.EthereumVerifyMessage = exports.EthereumSignTypedHash = exports.EthereumSignTypedData = exports.EthereumSignTypedDataMessage = exports.EthereumSignTypedDataTypes = exports.EthereumSignedTx = exports.EthereumSignTransaction = exports.EthereumTransactionEIP1559 = exports.EthereumAccessList = exports.EthereumTransaction = exports.EthereumSignMessage = void 0;\nconst schema_utils_1 = __webpack_require__(/*! @trezor/schema-utils */ \"./node_modules/@trezor/schema-utils/lib/index.js\");\nconst params_1 = __webpack_require__(/*! ../../params */ \"./node_modules/@trezor/connect/lib/types/params.js\");\nexports.EthereumSignMessage = schema_utils_1.Type.Object({\n    path: params_1.DerivationPath,\n    message: schema_utils_1.Type.String(),\n    hex: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n});\nexports.EthereumTransaction = schema_utils_1.Type.Object({\n    to: schema_utils_1.Type.String(),\n    value: schema_utils_1.Type.String(),\n    gasPrice: schema_utils_1.Type.String(),\n    gasLimit: schema_utils_1.Type.String(),\n    maxFeePerGas: schema_utils_1.Type.Optional(schema_utils_1.Type.Undefined()),\n    maxPriorityFeePerGas: schema_utils_1.Type.Optional(schema_utils_1.Type.Undefined()),\n    nonce: schema_utils_1.Type.String(),\n    data: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    chainId: schema_utils_1.Type.Number(),\n    txType: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n});\nexports.EthereumAccessList = schema_utils_1.Type.Object({\n    address: schema_utils_1.Type.String(),\n    storageKeys: schema_utils_1.Type.Array(schema_utils_1.Type.String()),\n});\nexports.EthereumTransactionEIP1559 = schema_utils_1.Type.Object({\n    to: schema_utils_1.Type.String(),\n    value: schema_utils_1.Type.String(),\n    gasLimit: schema_utils_1.Type.String(),\n    gasPrice: schema_utils_1.Type.Optional(schema_utils_1.Type.Undefined()),\n    nonce: schema_utils_1.Type.String(),\n    data: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    chainId: schema_utils_1.Type.Number(),\n    maxFeePerGas: schema_utils_1.Type.String(),\n    maxPriorityFeePerGas: schema_utils_1.Type.String(),\n    accessList: schema_utils_1.Type.Optional(schema_utils_1.Type.Array(exports.EthereumAccessList)),\n});\nexports.EthereumSignTransaction = schema_utils_1.Type.Object({\n    path: params_1.DerivationPath,\n    transaction: schema_utils_1.Type.Union([exports.EthereumTransaction, exports.EthereumTransactionEIP1559]),\n    chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n});\nexports.EthereumSignedTx = schema_utils_1.Type.Object({\n    v: schema_utils_1.Type.String(),\n    r: schema_utils_1.Type.String(),\n    s: schema_utils_1.Type.String(),\n    serializedTx: schema_utils_1.Type.String(),\n});\nconst EthereumSignTypedDataTypeProperty = schema_utils_1.Type.Object({\n    name: schema_utils_1.Type.String(),\n    type: schema_utils_1.Type.String(),\n});\nexports.EthereumSignTypedDataTypes = schema_utils_1.Type.Object({\n    EIP712Domain: schema_utils_1.Type.Array(EthereumSignTypedDataTypeProperty),\n}, {\n    additionalProperties: schema_utils_1.Type.Array(EthereumSignTypedDataTypeProperty),\n});\nexports.EthereumSignTypedDataMessage = schema_utils_1.Type.Object({\n    types: exports.EthereumSignTypedDataTypes,\n    primaryType: schema_utils_1.Type.String(),\n    domain: schema_utils_1.Type.Object({\n        name: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n        version: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n        chainId: schema_utils_1.Type.Optional(schema_utils_1.Type.Union([schema_utils_1.Type.Number(), schema_utils_1.Type.BigInt()])),\n        verifyingContract: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n        salt: schema_utils_1.Type.Optional(schema_utils_1.Type.Union([schema_utils_1.Type.ArrayBuffer(), schema_utils_1.Type.String()])),\n    }),\n    message: schema_utils_1.Type.Object({}, {\n        additionalProperties: schema_utils_1.Type.Any(),\n    }),\n});\nexports.EthereumSignTypedData = schema_utils_1.Type.Object({\n    path: params_1.DerivationPath,\n    data: exports.EthereumSignTypedDataMessage,\n    metamask_v4_compat: schema_utils_1.Type.Boolean(),\n    domain_separator_hash: schema_utils_1.Type.Optional(schema_utils_1.Type.Undefined()),\n    message_hash: schema_utils_1.Type.Optional(schema_utils_1.Type.Undefined()),\n});\nexports.EthereumSignTypedHash = schema_utils_1.Type.Object({\n    path: params_1.DerivationPath,\n    data: exports.EthereumSignTypedDataMessage,\n    metamask_v4_compat: schema_utils_1.Type.Boolean(),\n    domain_separator_hash: schema_utils_1.Type.String(),\n    message_hash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n});\nexports.EthereumVerifyMessage = schema_utils_1.Type.Object({\n    address: schema_utils_1.Type.String(),\n    message: schema_utils_1.Type.String(),\n    hex: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    signature: schema_utils_1.Type.String(),\n});\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@trezor/connect/lib/types/api/ethereum/index.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/connect/lib/types/api/index.js":
/*!*************************************************************!*\
  !*** ./node_modules/@trezor/connect/lib/types/api/index.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci9jb25uZWN0L2xpYi90eXBlcy9hcGkvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0B0cmV6b3IvY29ubmVjdC9saWIvdHlwZXMvYXBpL2luZGV4LmpzPzZmNDYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@trezor/connect/lib/types/api/index.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/connect/lib/types/api/ripple/index.js":
/*!********************************************************************!*\
  !*** ./node_modules/@trezor/connect/lib/types/api/ripple/index.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.RippleSignedTx = exports.RippleSignTransaction = exports.RippleTransaction = exports.RipplePayment = void 0;\nconst params_1 = __webpack_require__(/*! ../../params */ \"./node_modules/@trezor/connect/lib/types/params.js\");\nconst schema_utils_1 = __webpack_require__(/*! @trezor/schema-utils */ \"./node_modules/@trezor/schema-utils/lib/index.js\");\nexports.RipplePayment = schema_utils_1.Type.Object({\n    amount: schema_utils_1.Type.String(),\n    destination: schema_utils_1.Type.String(),\n    destinationTag: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n});\nexports.RippleTransaction = schema_utils_1.Type.Object({\n    fee: schema_utils_1.Type.String(),\n    flags: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    sequence: schema_utils_1.Type.Number(),\n    maxLedgerVersion: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    payment: exports.RipplePayment,\n});\nexports.RippleSignTransaction = schema_utils_1.Type.Object({\n    path: params_1.DerivationPath,\n    transaction: exports.RippleTransaction,\n    chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n});\nexports.RippleSignedTx = schema_utils_1.Type.Object({\n    serializedTx: schema_utils_1.Type.String(),\n    signature: schema_utils_1.Type.String(),\n});\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci9jb25uZWN0L2xpYi90eXBlcy9hcGkvcmlwcGxlL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHNCQUFzQixHQUFHLDZCQUE2QixHQUFHLHlCQUF5QixHQUFHLHFCQUFxQjtBQUMxRyxpQkFBaUIsbUJBQU8sQ0FBQyx3RUFBYztBQUN2Qyx1QkFBdUIsbUJBQU8sQ0FBQyw4RUFBc0I7QUFDckQscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCx5QkFBeUI7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCw2QkFBNkI7QUFDN0I7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNELHNCQUFzQjtBQUN0QjtBQUNBO0FBQ0EsQ0FBQztBQUNEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AdHJlem9yL2Nvbm5lY3QvbGliL3R5cGVzL2FwaS9yaXBwbGUvaW5kZXguanM/NWEyZiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuUmlwcGxlU2lnbmVkVHggPSBleHBvcnRzLlJpcHBsZVNpZ25UcmFuc2FjdGlvbiA9IGV4cG9ydHMuUmlwcGxlVHJhbnNhY3Rpb24gPSBleHBvcnRzLlJpcHBsZVBheW1lbnQgPSB2b2lkIDA7XG5jb25zdCBwYXJhbXNfMSA9IHJlcXVpcmUoXCIuLi8uLi9wYXJhbXNcIik7XG5jb25zdCBzY2hlbWFfdXRpbHNfMSA9IHJlcXVpcmUoXCJAdHJlem9yL3NjaGVtYS11dGlsc1wiKTtcbmV4cG9ydHMuUmlwcGxlUGF5bWVudCA9IHNjaGVtYV91dGlsc18xLlR5cGUuT2JqZWN0KHtcbiAgICBhbW91bnQ6IHNjaGVtYV91dGlsc18xLlR5cGUuU3RyaW5nKCksXG4gICAgZGVzdGluYXRpb246IHNjaGVtYV91dGlsc18xLlR5cGUuU3RyaW5nKCksXG4gICAgZGVzdGluYXRpb25UYWc6IHNjaGVtYV91dGlsc18xLlR5cGUuT3B0aW9uYWwoc2NoZW1hX3V0aWxzXzEuVHlwZS5OdW1iZXIoKSksXG59KTtcbmV4cG9ydHMuUmlwcGxlVHJhbnNhY3Rpb24gPSBzY2hlbWFfdXRpbHNfMS5UeXBlLk9iamVjdCh7XG4gICAgZmVlOiBzY2hlbWFfdXRpbHNfMS5UeXBlLlN0cmluZygpLFxuICAgIGZsYWdzOiBzY2hlbWFfdXRpbHNfMS5UeXBlLk9wdGlvbmFsKHNjaGVtYV91dGlsc18xLlR5cGUuTnVtYmVyKCkpLFxuICAgIHNlcXVlbmNlOiBzY2hlbWFfdXRpbHNfMS5UeXBlLk51bWJlcigpLFxuICAgIG1heExlZGdlclZlcnNpb246IHNjaGVtYV91dGlsc18xLlR5cGUuT3B0aW9uYWwoc2NoZW1hX3V0aWxzXzEuVHlwZS5OdW1iZXIoKSksXG4gICAgcGF5bWVudDogZXhwb3J0cy5SaXBwbGVQYXltZW50LFxufSk7XG5leHBvcnRzLlJpcHBsZVNpZ25UcmFuc2FjdGlvbiA9IHNjaGVtYV91dGlsc18xLlR5cGUuT2JqZWN0KHtcbiAgICBwYXRoOiBwYXJhbXNfMS5EZXJpdmF0aW9uUGF0aCxcbiAgICB0cmFuc2FjdGlvbjogZXhwb3J0cy5SaXBwbGVUcmFuc2FjdGlvbixcbiAgICBjaHVua2lmeTogc2NoZW1hX3V0aWxzXzEuVHlwZS5PcHRpb25hbChzY2hlbWFfdXRpbHNfMS5UeXBlLkJvb2xlYW4oKSksXG59KTtcbmV4cG9ydHMuUmlwcGxlU2lnbmVkVHggPSBzY2hlbWFfdXRpbHNfMS5UeXBlLk9iamVjdCh7XG4gICAgc2VyaWFsaXplZFR4OiBzY2hlbWFfdXRpbHNfMS5UeXBlLlN0cmluZygpLFxuICAgIHNpZ25hdHVyZTogc2NoZW1hX3V0aWxzXzEuVHlwZS5TdHJpbmcoKSxcbn0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@trezor/connect/lib/types/api/ripple/index.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/connect/lib/types/api/solana/index.js":
/*!********************************************************************!*\
  !*** ./node_modules/@trezor/connect/lib/types/api/solana/index.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SolanaSignedTransaction = exports.SolanaSignTransaction = exports.SolanaTxAdditionalInfo = exports.SolanaTxTokenAccountInfo = exports.SolanaPublicKey = void 0;\nconst params_1 = __webpack_require__(/*! ../../params */ \"./node_modules/@trezor/connect/lib/types/params.js\");\nconst schema_utils_1 = __webpack_require__(/*! @trezor/schema-utils */ \"./node_modules/@trezor/schema-utils/lib/index.js\");\nexports.SolanaPublicKey = schema_utils_1.Type.Intersect([\n    params_1.PublicKey,\n    schema_utils_1.Type.Object({\n        publicKey: schema_utils_1.Type.String(),\n    }),\n]);\nexports.SolanaTxTokenAccountInfo = schema_utils_1.Type.Object({\n    baseAddress: schema_utils_1.Type.String(),\n    tokenProgram: schema_utils_1.Type.String(),\n    tokenMint: schema_utils_1.Type.String(),\n    tokenAccount: schema_utils_1.Type.String(),\n});\nexports.SolanaTxAdditionalInfo = schema_utils_1.Type.Object({\n    tokenAccountsInfos: schema_utils_1.Type.Optional(schema_utils_1.Type.Array(exports.SolanaTxTokenAccountInfo, { minItems: 1 })),\n});\nexports.SolanaSignTransaction = schema_utils_1.Type.Object({\n    path: schema_utils_1.Type.Union([schema_utils_1.Type.String(), schema_utils_1.Type.Array(schema_utils_1.Type.Number())]),\n    serializedTx: schema_utils_1.Type.String(),\n    additionalInfo: schema_utils_1.Type.Optional(exports.SolanaTxAdditionalInfo),\n});\nexports.SolanaSignedTransaction = schema_utils_1.Type.Object({\n    signature: schema_utils_1.Type.String(),\n});\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci9jb25uZWN0L2xpYi90eXBlcy9hcGkvc29sYW5hL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELCtCQUErQixHQUFHLDZCQUE2QixHQUFHLDhCQUE4QixHQUFHLGdDQUFnQyxHQUFHLHVCQUF1QjtBQUM3SixpQkFBaUIsbUJBQU8sQ0FBQyx3RUFBYztBQUN2Qyx1QkFBdUIsbUJBQU8sQ0FBQyw4RUFBc0I7QUFDckQsdUJBQXVCO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLGdDQUFnQztBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCw4QkFBOEI7QUFDOUIsbUhBQW1ILGFBQWE7QUFDaEksQ0FBQztBQUNELDZCQUE2QjtBQUM3QjtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0QsK0JBQStCO0FBQy9CO0FBQ0EsQ0FBQztBQUNEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AdHJlem9yL2Nvbm5lY3QvbGliL3R5cGVzL2FwaS9zb2xhbmEvaW5kZXguanM/NzhkZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuU29sYW5hU2lnbmVkVHJhbnNhY3Rpb24gPSBleHBvcnRzLlNvbGFuYVNpZ25UcmFuc2FjdGlvbiA9IGV4cG9ydHMuU29sYW5hVHhBZGRpdGlvbmFsSW5mbyA9IGV4cG9ydHMuU29sYW5hVHhUb2tlbkFjY291bnRJbmZvID0gZXhwb3J0cy5Tb2xhbmFQdWJsaWNLZXkgPSB2b2lkIDA7XG5jb25zdCBwYXJhbXNfMSA9IHJlcXVpcmUoXCIuLi8uLi9wYXJhbXNcIik7XG5jb25zdCBzY2hlbWFfdXRpbHNfMSA9IHJlcXVpcmUoXCJAdHJlem9yL3NjaGVtYS11dGlsc1wiKTtcbmV4cG9ydHMuU29sYW5hUHVibGljS2V5ID0gc2NoZW1hX3V0aWxzXzEuVHlwZS5JbnRlcnNlY3QoW1xuICAgIHBhcmFtc18xLlB1YmxpY0tleSxcbiAgICBzY2hlbWFfdXRpbHNfMS5UeXBlLk9iamVjdCh7XG4gICAgICAgIHB1YmxpY0tleTogc2NoZW1hX3V0aWxzXzEuVHlwZS5TdHJpbmcoKSxcbiAgICB9KSxcbl0pO1xuZXhwb3J0cy5Tb2xhbmFUeFRva2VuQWNjb3VudEluZm8gPSBzY2hlbWFfdXRpbHNfMS5UeXBlLk9iamVjdCh7XG4gICAgYmFzZUFkZHJlc3M6IHNjaGVtYV91dGlsc18xLlR5cGUuU3RyaW5nKCksXG4gICAgdG9rZW5Qcm9ncmFtOiBzY2hlbWFfdXRpbHNfMS5UeXBlLlN0cmluZygpLFxuICAgIHRva2VuTWludDogc2NoZW1hX3V0aWxzXzEuVHlwZS5TdHJpbmcoKSxcbiAgICB0b2tlbkFjY291bnQ6IHNjaGVtYV91dGlsc18xLlR5cGUuU3RyaW5nKCksXG59KTtcbmV4cG9ydHMuU29sYW5hVHhBZGRpdGlvbmFsSW5mbyA9IHNjaGVtYV91dGlsc18xLlR5cGUuT2JqZWN0KHtcbiAgICB0b2tlbkFjY291bnRzSW5mb3M6IHNjaGVtYV91dGlsc18xLlR5cGUuT3B0aW9uYWwoc2NoZW1hX3V0aWxzXzEuVHlwZS5BcnJheShleHBvcnRzLlNvbGFuYVR4VG9rZW5BY2NvdW50SW5mbywgeyBtaW5JdGVtczogMSB9KSksXG59KTtcbmV4cG9ydHMuU29sYW5hU2lnblRyYW5zYWN0aW9uID0gc2NoZW1hX3V0aWxzXzEuVHlwZS5PYmplY3Qoe1xuICAgIHBhdGg6IHNjaGVtYV91dGlsc18xLlR5cGUuVW5pb24oW3NjaGVtYV91dGlsc18xLlR5cGUuU3RyaW5nKCksIHNjaGVtYV91dGlsc18xLlR5cGUuQXJyYXkoc2NoZW1hX3V0aWxzXzEuVHlwZS5OdW1iZXIoKSldKSxcbiAgICBzZXJpYWxpemVkVHg6IHNjaGVtYV91dGlsc18xLlR5cGUuU3RyaW5nKCksXG4gICAgYWRkaXRpb25hbEluZm86IHNjaGVtYV91dGlsc18xLlR5cGUuT3B0aW9uYWwoZXhwb3J0cy5Tb2xhbmFUeEFkZGl0aW9uYWxJbmZvKSxcbn0pO1xuZXhwb3J0cy5Tb2xhbmFTaWduZWRUcmFuc2FjdGlvbiA9IHNjaGVtYV91dGlsc18xLlR5cGUuT2JqZWN0KHtcbiAgICBzaWduYXR1cmU6IHNjaGVtYV91dGlsc18xLlR5cGUuU3RyaW5nKCksXG59KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@trezor/connect/lib/types/api/solana/index.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/connect/lib/types/api/stellar/index.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@trezor/connect/lib/types/api/stellar/index.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.StellarOperationMessage = exports.StellarSignedTx = exports.StellarSignTransaction = exports.StellarTransaction = exports.StellarOperation = exports.StellarInflationOperation = exports.StellarBumpSequenceOperation = exports.StellarManageDataOperation = exports.StellarAccountMergeOperation = exports.StellarAllowTrustOperation = exports.StellarChangeTrustOperation = exports.StellarSetOptionsOperation = exports.StellarManageBuyOfferOperation = exports.StellarManageSellOfferOperation = exports.StellarPassiveSellOfferOperation = exports.StellarPathPaymentStrictSendOperation = exports.StellarPathPaymentStrictReceiveOperation = exports.StellarPaymentOperation = exports.StellarCreateAccountOperation = exports.StellarAsset = void 0;\nconst constants_1 = __webpack_require__(/*! ../../../constants */ \"./node_modules/@trezor/connect/lib/constants/index.js\");\nconst params_1 = __webpack_require__(/*! ../../params */ \"./node_modules/@trezor/connect/lib/types/params.js\");\nconst schema_utils_1 = __webpack_require__(/*! @trezor/schema-utils */ \"./node_modules/@trezor/schema-utils/lib/index.js\");\nexports.StellarAsset = schema_utils_1.Type.Object({\n    type: schema_utils_1.Type.Union([constants_1.PROTO.EnumStellarAssetType, schema_utils_1.Type.KeyOfEnum(constants_1.PROTO.StellarAssetType)]),\n    code: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    issuer: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n});\nexports.StellarCreateAccountOperation = schema_utils_1.Type.Object({\n    type: schema_utils_1.Type.Literal('createAccount'),\n    source: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    destination: schema_utils_1.Type.String(),\n    startingBalance: schema_utils_1.Type.String(),\n});\nexports.StellarPaymentOperation = schema_utils_1.Type.Object({\n    type: schema_utils_1.Type.Literal('payment'),\n    source: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    destination: schema_utils_1.Type.String(),\n    asset: exports.StellarAsset,\n    amount: schema_utils_1.Type.String(),\n});\nexports.StellarPathPaymentStrictReceiveOperation = schema_utils_1.Type.Object({\n    type: schema_utils_1.Type.Literal('pathPaymentStrictReceive'),\n    source: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    sendAsset: exports.StellarAsset,\n    sendMax: schema_utils_1.Type.Uint(),\n    destination: schema_utils_1.Type.String(),\n    destAsset: exports.StellarAsset,\n    destAmount: schema_utils_1.Type.Uint(),\n    path: schema_utils_1.Type.Optional(schema_utils_1.Type.Array(exports.StellarAsset)),\n});\nexports.StellarPathPaymentStrictSendOperation = schema_utils_1.Type.Object({\n    type: schema_utils_1.Type.Literal('pathPaymentStrictSend'),\n    source: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    sendAsset: exports.StellarAsset,\n    sendAmount: schema_utils_1.Type.Uint(),\n    destination: schema_utils_1.Type.String(),\n    destAsset: exports.StellarAsset,\n    destMin: schema_utils_1.Type.Uint(),\n    path: schema_utils_1.Type.Optional(schema_utils_1.Type.Array(exports.StellarAsset)),\n});\nexports.StellarPassiveSellOfferOperation = schema_utils_1.Type.Object({\n    type: schema_utils_1.Type.Literal('createPassiveSellOffer'),\n    source: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    buying: exports.StellarAsset,\n    selling: exports.StellarAsset,\n    amount: schema_utils_1.Type.Uint(),\n    price: schema_utils_1.Type.Object({\n        n: schema_utils_1.Type.Number(),\n        d: schema_utils_1.Type.Number(),\n    }),\n});\nexports.StellarManageSellOfferOperation = schema_utils_1.Type.Object({\n    type: schema_utils_1.Type.Literal('manageSellOffer'),\n    source: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    buying: exports.StellarAsset,\n    selling: exports.StellarAsset,\n    amount: schema_utils_1.Type.Uint(),\n    offerId: schema_utils_1.Type.Optional(schema_utils_1.Type.Uint()),\n    price: schema_utils_1.Type.Object({\n        n: schema_utils_1.Type.Number(),\n        d: schema_utils_1.Type.Number(),\n    }),\n});\nexports.StellarManageBuyOfferOperation = schema_utils_1.Type.Object({\n    type: schema_utils_1.Type.Literal('manageBuyOffer'),\n    source: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    buying: exports.StellarAsset,\n    selling: exports.StellarAsset,\n    amount: schema_utils_1.Type.Uint(),\n    offerId: schema_utils_1.Type.Optional(schema_utils_1.Type.Uint()),\n    price: schema_utils_1.Type.Object({\n        n: schema_utils_1.Type.Number(),\n        d: schema_utils_1.Type.Number(),\n    }),\n});\nexports.StellarSetOptionsOperation = schema_utils_1.Type.Object({\n    type: schema_utils_1.Type.Literal('setOptions'),\n    source: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    signer: schema_utils_1.Type.Optional(schema_utils_1.Type.Object({\n        type: constants_1.PROTO.EnumStellarSignerType,\n        key: schema_utils_1.Type.Union([schema_utils_1.Type.String(), schema_utils_1.Type.Buffer()]),\n        weight: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    })),\n    inflationDest: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    clearFlags: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    setFlags: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    masterWeight: schema_utils_1.Type.Optional(schema_utils_1.Type.Uint()),\n    lowThreshold: schema_utils_1.Type.Optional(schema_utils_1.Type.Uint()),\n    medThreshold: schema_utils_1.Type.Optional(schema_utils_1.Type.Uint()),\n    highThreshold: schema_utils_1.Type.Optional(schema_utils_1.Type.Uint()),\n    homeDomain: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n});\nexports.StellarChangeTrustOperation = schema_utils_1.Type.Object({\n    type: schema_utils_1.Type.Literal('changeTrust'),\n    source: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    line: exports.StellarAsset,\n    limit: schema_utils_1.Type.String(),\n});\nexports.StellarAllowTrustOperation = schema_utils_1.Type.Object({\n    type: schema_utils_1.Type.Literal('allowTrust'),\n    source: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    trustor: schema_utils_1.Type.String(),\n    assetCode: schema_utils_1.Type.String(),\n    assetType: constants_1.PROTO.EnumStellarAssetType,\n    authorize: schema_utils_1.Type.Optional(schema_utils_1.Type.Union([schema_utils_1.Type.Boolean(), schema_utils_1.Type.Undefined()])),\n});\nexports.StellarAccountMergeOperation = schema_utils_1.Type.Object({\n    type: schema_utils_1.Type.Literal('accountMerge'),\n    source: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    destination: schema_utils_1.Type.String(),\n});\nexports.StellarManageDataOperation = schema_utils_1.Type.Object({\n    type: schema_utils_1.Type.Literal('manageData'),\n    source: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    name: schema_utils_1.Type.String(),\n    value: schema_utils_1.Type.Optional(schema_utils_1.Type.Union([schema_utils_1.Type.String(), schema_utils_1.Type.Buffer()])),\n});\nexports.StellarBumpSequenceOperation = schema_utils_1.Type.Object({\n    type: schema_utils_1.Type.Literal('bumpSequence'),\n    source: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    bumpTo: schema_utils_1.Type.Uint(),\n});\nexports.StellarInflationOperation = schema_utils_1.Type.Object({\n    type: schema_utils_1.Type.Literal('inflation'),\n    source: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n});\nexports.StellarOperation = schema_utils_1.Type.Union([\n    exports.StellarCreateAccountOperation,\n    exports.StellarPaymentOperation,\n    exports.StellarPathPaymentStrictReceiveOperation,\n    exports.StellarPathPaymentStrictSendOperation,\n    exports.StellarPassiveSellOfferOperation,\n    exports.StellarManageSellOfferOperation,\n    exports.StellarManageBuyOfferOperation,\n    exports.StellarSetOptionsOperation,\n    exports.StellarChangeTrustOperation,\n    exports.StellarAllowTrustOperation,\n    exports.StellarAccountMergeOperation,\n    exports.StellarInflationOperation,\n    exports.StellarManageDataOperation,\n    exports.StellarBumpSequenceOperation,\n]);\nexports.StellarTransaction = schema_utils_1.Type.Object({\n    source: schema_utils_1.Type.String(),\n    fee: schema_utils_1.Type.Number(),\n    sequence: schema_utils_1.Type.Uint(),\n    timebounds: schema_utils_1.Type.Optional(schema_utils_1.Type.Object({\n        minTime: schema_utils_1.Type.Number(),\n        maxTime: schema_utils_1.Type.Number(),\n    })),\n    memo: schema_utils_1.Type.Optional(schema_utils_1.Type.Object({\n        type: constants_1.PROTO.EnumStellarMemoType,\n        id: schema_utils_1.Type.Optional(schema_utils_1.Type.Uint()),\n        text: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n        hash: schema_utils_1.Type.Optional(schema_utils_1.Type.Union([schema_utils_1.Type.String(), schema_utils_1.Type.Buffer()])),\n    })),\n    operations: schema_utils_1.Type.Array(exports.StellarOperation),\n});\nexports.StellarSignTransaction = schema_utils_1.Type.Object({\n    path: params_1.DerivationPath,\n    networkPassphrase: schema_utils_1.Type.String(),\n    transaction: exports.StellarTransaction,\n});\nexports.StellarSignedTx = schema_utils_1.Type.Object({\n    publicKey: schema_utils_1.Type.String(),\n    signature: schema_utils_1.Type.String(),\n});\nexports.StellarOperationMessage = schema_utils_1.Type.Union([\n    schema_utils_1.Type.Intersect([\n        schema_utils_1.Type.Object({\n            type: schema_utils_1.Type.Literal('StellarCreateAccountOp'),\n        }),\n        constants_1.PROTO.StellarCreateAccountOp,\n    ]),\n    schema_utils_1.Type.Intersect([\n        schema_utils_1.Type.Object({\n            type: schema_utils_1.Type.Literal('StellarPaymentOp'),\n        }),\n        constants_1.PROTO.StellarPaymentOp,\n    ]),\n    schema_utils_1.Type.Intersect([\n        schema_utils_1.Type.Object({\n            type: schema_utils_1.Type.Literal('StellarPathPaymentStrictReceiveOp'),\n        }),\n        constants_1.PROTO.StellarPathPaymentStrictReceiveOp,\n    ]),\n    schema_utils_1.Type.Intersect([\n        schema_utils_1.Type.Object({\n            type: schema_utils_1.Type.Literal('StellarPathPaymentStrictSendOp'),\n        }),\n        constants_1.PROTO.StellarPathPaymentStrictSendOp,\n    ]),\n    schema_utils_1.Type.Intersect([\n        schema_utils_1.Type.Object({\n            type: schema_utils_1.Type.Literal('StellarManageSellOfferOp'),\n        }),\n        constants_1.PROTO.StellarManageSellOfferOp,\n    ]),\n    schema_utils_1.Type.Intersect([\n        schema_utils_1.Type.Object({\n            type: schema_utils_1.Type.Literal('StellarManageBuyOfferOp'),\n        }),\n        constants_1.PROTO.StellarManageBuyOfferOp,\n    ]),\n    schema_utils_1.Type.Intersect([\n        schema_utils_1.Type.Object({\n            type: schema_utils_1.Type.Literal('StellarCreatePassiveSellOfferOp'),\n        }),\n        constants_1.PROTO.StellarCreatePassiveSellOfferOp,\n    ]),\n    schema_utils_1.Type.Intersect([\n        schema_utils_1.Type.Object({\n            type: schema_utils_1.Type.Literal('StellarSetOptionsOp'),\n        }),\n        constants_1.PROTO.StellarSetOptionsOp,\n    ]),\n    schema_utils_1.Type.Intersect([\n        schema_utils_1.Type.Object({\n            type: schema_utils_1.Type.Literal('StellarChangeTrustOp'),\n        }),\n        constants_1.PROTO.StellarChangeTrustOp,\n    ]),\n    schema_utils_1.Type.Intersect([\n        schema_utils_1.Type.Object({\n            type: schema_utils_1.Type.Literal('StellarAllowTrustOp'),\n        }),\n        constants_1.PROTO.StellarAllowTrustOp,\n    ]),\n    schema_utils_1.Type.Intersect([\n        schema_utils_1.Type.Object({\n            type: schema_utils_1.Type.Literal('StellarAccountMergeOp'),\n        }),\n        constants_1.PROTO.StellarAccountMergeOp,\n    ]),\n    schema_utils_1.Type.Intersect([\n        schema_utils_1.Type.Object({\n            type: schema_utils_1.Type.Literal('StellarManageDataOp'),\n        }),\n        constants_1.PROTO.StellarManageDataOp,\n    ]),\n    schema_utils_1.Type.Intersect([\n        schema_utils_1.Type.Object({\n            type: schema_utils_1.Type.Literal('StellarBumpSequenceOp'),\n        }),\n        constants_1.PROTO.StellarBumpSequenceOp,\n    ]),\n]);\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@trezor/connect/lib/types/api/stellar/index.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/connect/lib/types/api/tezos/index.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@trezor/connect/lib/types/api/tezos/index.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.TezosSignTransaction = exports.TezosOperation = exports.TezosDelegationOperation = exports.TezosOriginationOperation = exports.TezosTransactionOperation = exports.TezosParametersManager = exports.TezosManagerTransfer = exports.TezosRevealOperation = void 0;\nconst params_1 = __webpack_require__(/*! ../../params */ \"./node_modules/@trezor/connect/lib/types/params.js\");\nconst schema_utils_1 = __webpack_require__(/*! @trezor/schema-utils */ \"./node_modules/@trezor/schema-utils/lib/index.js\");\nexports.TezosRevealOperation = schema_utils_1.Type.Object({\n    source: schema_utils_1.Type.String(),\n    fee: schema_utils_1.Type.Number(),\n    counter: schema_utils_1.Type.Number(),\n    gas_limit: schema_utils_1.Type.Number(),\n    storage_limit: schema_utils_1.Type.Number(),\n    public_key: schema_utils_1.Type.String(),\n});\nexports.TezosManagerTransfer = schema_utils_1.Type.Object({\n    destination: schema_utils_1.Type.String(),\n    amount: schema_utils_1.Type.Number(),\n});\nexports.TezosParametersManager = schema_utils_1.Type.Object({\n    set_delegate: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    cancel_delegate: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    transfer: schema_utils_1.Type.Optional(exports.TezosManagerTransfer),\n});\nexports.TezosTransactionOperation = schema_utils_1.Type.Object({\n    source: schema_utils_1.Type.String(),\n    destination: schema_utils_1.Type.String(),\n    amount: schema_utils_1.Type.Number(),\n    counter: schema_utils_1.Type.Number(),\n    fee: schema_utils_1.Type.Number(),\n    gas_limit: schema_utils_1.Type.Number(),\n    storage_limit: schema_utils_1.Type.Number(),\n    parameters: schema_utils_1.Type.Optional(schema_utils_1.Type.Array(schema_utils_1.Type.Number())),\n    parameters_manager: schema_utils_1.Type.Optional(exports.TezosParametersManager),\n});\nexports.TezosOriginationOperation = schema_utils_1.Type.Object({\n    source: schema_utils_1.Type.String(),\n    balance: schema_utils_1.Type.Number(),\n    delegate: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    script: params_1.DerivationPath,\n    fee: schema_utils_1.Type.Number(),\n    counter: schema_utils_1.Type.Number(),\n    gas_limit: schema_utils_1.Type.Number(),\n    storage_limit: schema_utils_1.Type.Number(),\n});\nexports.TezosDelegationOperation = schema_utils_1.Type.Object({\n    source: schema_utils_1.Type.String(),\n    delegate: schema_utils_1.Type.String(),\n    fee: schema_utils_1.Type.Number(),\n    counter: schema_utils_1.Type.Number(),\n    gas_limit: schema_utils_1.Type.Number(),\n    storage_limit: schema_utils_1.Type.Number(),\n});\nexports.TezosOperation = schema_utils_1.Type.Object({\n    reveal: schema_utils_1.Type.Optional(exports.TezosRevealOperation),\n    transaction: schema_utils_1.Type.Optional(exports.TezosTransactionOperation),\n    origination: schema_utils_1.Type.Optional(exports.TezosOriginationOperation),\n    delegation: schema_utils_1.Type.Optional(exports.TezosDelegationOperation),\n});\nexports.TezosSignTransaction = schema_utils_1.Type.Object({\n    path: params_1.DerivationPath,\n    branch: schema_utils_1.Type.String(),\n    operation: exports.TezosOperation,\n    chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n});\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci9jb25uZWN0L2xpYi90eXBlcy9hcGkvdGV6b3MvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsNEJBQTRCLEdBQUcsc0JBQXNCLEdBQUcsZ0NBQWdDLEdBQUcsaUNBQWlDLEdBQUcsaUNBQWlDLEdBQUcsOEJBQThCLEdBQUcsNEJBQTRCLEdBQUcsNEJBQTRCO0FBQy9QLGlCQUFpQixtQkFBTyxDQUFDLHdFQUFjO0FBQ3ZDLHVCQUF1QixtQkFBTyxDQUFDLDhFQUFzQjtBQUNyRCw0QkFBNEI7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNELDRCQUE0QjtBQUM1QjtBQUNBO0FBQ0EsQ0FBQztBQUNELDhCQUE4QjtBQUM5QjtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0QsaUNBQWlDO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCxpQ0FBaUM7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCxnQ0FBZ0M7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNELHNCQUFzQjtBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCw0QkFBNEI7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0B0cmV6b3IvY29ubmVjdC9saWIvdHlwZXMvYXBpL3Rlem9zL2luZGV4LmpzPzJjMzciXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlRlem9zU2lnblRyYW5zYWN0aW9uID0gZXhwb3J0cy5UZXpvc09wZXJhdGlvbiA9IGV4cG9ydHMuVGV6b3NEZWxlZ2F0aW9uT3BlcmF0aW9uID0gZXhwb3J0cy5UZXpvc09yaWdpbmF0aW9uT3BlcmF0aW9uID0gZXhwb3J0cy5UZXpvc1RyYW5zYWN0aW9uT3BlcmF0aW9uID0gZXhwb3J0cy5UZXpvc1BhcmFtZXRlcnNNYW5hZ2VyID0gZXhwb3J0cy5UZXpvc01hbmFnZXJUcmFuc2ZlciA9IGV4cG9ydHMuVGV6b3NSZXZlYWxPcGVyYXRpb24gPSB2b2lkIDA7XG5jb25zdCBwYXJhbXNfMSA9IHJlcXVpcmUoXCIuLi8uLi9wYXJhbXNcIik7XG5jb25zdCBzY2hlbWFfdXRpbHNfMSA9IHJlcXVpcmUoXCJAdHJlem9yL3NjaGVtYS11dGlsc1wiKTtcbmV4cG9ydHMuVGV6b3NSZXZlYWxPcGVyYXRpb24gPSBzY2hlbWFfdXRpbHNfMS5UeXBlLk9iamVjdCh7XG4gICAgc291cmNlOiBzY2hlbWFfdXRpbHNfMS5UeXBlLlN0cmluZygpLFxuICAgIGZlZTogc2NoZW1hX3V0aWxzXzEuVHlwZS5OdW1iZXIoKSxcbiAgICBjb3VudGVyOiBzY2hlbWFfdXRpbHNfMS5UeXBlLk51bWJlcigpLFxuICAgIGdhc19saW1pdDogc2NoZW1hX3V0aWxzXzEuVHlwZS5OdW1iZXIoKSxcbiAgICBzdG9yYWdlX2xpbWl0OiBzY2hlbWFfdXRpbHNfMS5UeXBlLk51bWJlcigpLFxuICAgIHB1YmxpY19rZXk6IHNjaGVtYV91dGlsc18xLlR5cGUuU3RyaW5nKCksXG59KTtcbmV4cG9ydHMuVGV6b3NNYW5hZ2VyVHJhbnNmZXIgPSBzY2hlbWFfdXRpbHNfMS5UeXBlLk9iamVjdCh7XG4gICAgZGVzdGluYXRpb246IHNjaGVtYV91dGlsc18xLlR5cGUuU3RyaW5nKCksXG4gICAgYW1vdW50OiBzY2hlbWFfdXRpbHNfMS5UeXBlLk51bWJlcigpLFxufSk7XG5leHBvcnRzLlRlem9zUGFyYW1ldGVyc01hbmFnZXIgPSBzY2hlbWFfdXRpbHNfMS5UeXBlLk9iamVjdCh7XG4gICAgc2V0X2RlbGVnYXRlOiBzY2hlbWFfdXRpbHNfMS5UeXBlLk9wdGlvbmFsKHNjaGVtYV91dGlsc18xLlR5cGUuU3RyaW5nKCkpLFxuICAgIGNhbmNlbF9kZWxlZ2F0ZTogc2NoZW1hX3V0aWxzXzEuVHlwZS5PcHRpb25hbChzY2hlbWFfdXRpbHNfMS5UeXBlLkJvb2xlYW4oKSksXG4gICAgdHJhbnNmZXI6IHNjaGVtYV91dGlsc18xLlR5cGUuT3B0aW9uYWwoZXhwb3J0cy5UZXpvc01hbmFnZXJUcmFuc2ZlciksXG59KTtcbmV4cG9ydHMuVGV6b3NUcmFuc2FjdGlvbk9wZXJhdGlvbiA9IHNjaGVtYV91dGlsc18xLlR5cGUuT2JqZWN0KHtcbiAgICBzb3VyY2U6IHNjaGVtYV91dGlsc18xLlR5cGUuU3RyaW5nKCksXG4gICAgZGVzdGluYXRpb246IHNjaGVtYV91dGlsc18xLlR5cGUuU3RyaW5nKCksXG4gICAgYW1vdW50OiBzY2hlbWFfdXRpbHNfMS5UeXBlLk51bWJlcigpLFxuICAgIGNvdW50ZXI6IHNjaGVtYV91dGlsc18xLlR5cGUuTnVtYmVyKCksXG4gICAgZmVlOiBzY2hlbWFfdXRpbHNfMS5UeXBlLk51bWJlcigpLFxuICAgIGdhc19saW1pdDogc2NoZW1hX3V0aWxzXzEuVHlwZS5OdW1iZXIoKSxcbiAgICBzdG9yYWdlX2xpbWl0OiBzY2hlbWFfdXRpbHNfMS5UeXBlLk51bWJlcigpLFxuICAgIHBhcmFtZXRlcnM6IHNjaGVtYV91dGlsc18xLlR5cGUuT3B0aW9uYWwoc2NoZW1hX3V0aWxzXzEuVHlwZS5BcnJheShzY2hlbWFfdXRpbHNfMS5UeXBlLk51bWJlcigpKSksXG4gICAgcGFyYW1ldGVyc19tYW5hZ2VyOiBzY2hlbWFfdXRpbHNfMS5UeXBlLk9wdGlvbmFsKGV4cG9ydHMuVGV6b3NQYXJhbWV0ZXJzTWFuYWdlciksXG59KTtcbmV4cG9ydHMuVGV6b3NPcmlnaW5hdGlvbk9wZXJhdGlvbiA9IHNjaGVtYV91dGlsc18xLlR5cGUuT2JqZWN0KHtcbiAgICBzb3VyY2U6IHNjaGVtYV91dGlsc18xLlR5cGUuU3RyaW5nKCksXG4gICAgYmFsYW5jZTogc2NoZW1hX3V0aWxzXzEuVHlwZS5OdW1iZXIoKSxcbiAgICBkZWxlZ2F0ZTogc2NoZW1hX3V0aWxzXzEuVHlwZS5PcHRpb25hbChzY2hlbWFfdXRpbHNfMS5UeXBlLlN0cmluZygpKSxcbiAgICBzY3JpcHQ6IHBhcmFtc18xLkRlcml2YXRpb25QYXRoLFxuICAgIGZlZTogc2NoZW1hX3V0aWxzXzEuVHlwZS5OdW1iZXIoKSxcbiAgICBjb3VudGVyOiBzY2hlbWFfdXRpbHNfMS5UeXBlLk51bWJlcigpLFxuICAgIGdhc19saW1pdDogc2NoZW1hX3V0aWxzXzEuVHlwZS5OdW1iZXIoKSxcbiAgICBzdG9yYWdlX2xpbWl0OiBzY2hlbWFfdXRpbHNfMS5UeXBlLk51bWJlcigpLFxufSk7XG5leHBvcnRzLlRlem9zRGVsZWdhdGlvbk9wZXJhdGlvbiA9IHNjaGVtYV91dGlsc18xLlR5cGUuT2JqZWN0KHtcbiAgICBzb3VyY2U6IHNjaGVtYV91dGlsc18xLlR5cGUuU3RyaW5nKCksXG4gICAgZGVsZWdhdGU6IHNjaGVtYV91dGlsc18xLlR5cGUuU3RyaW5nKCksXG4gICAgZmVlOiBzY2hlbWFfdXRpbHNfMS5UeXBlLk51bWJlcigpLFxuICAgIGNvdW50ZXI6IHNjaGVtYV91dGlsc18xLlR5cGUuTnVtYmVyKCksXG4gICAgZ2FzX2xpbWl0OiBzY2hlbWFfdXRpbHNfMS5UeXBlLk51bWJlcigpLFxuICAgIHN0b3JhZ2VfbGltaXQ6IHNjaGVtYV91dGlsc18xLlR5cGUuTnVtYmVyKCksXG59KTtcbmV4cG9ydHMuVGV6b3NPcGVyYXRpb24gPSBzY2hlbWFfdXRpbHNfMS5UeXBlLk9iamVjdCh7XG4gICAgcmV2ZWFsOiBzY2hlbWFfdXRpbHNfMS5UeXBlLk9wdGlvbmFsKGV4cG9ydHMuVGV6b3NSZXZlYWxPcGVyYXRpb24pLFxuICAgIHRyYW5zYWN0aW9uOiBzY2hlbWFfdXRpbHNfMS5UeXBlLk9wdGlvbmFsKGV4cG9ydHMuVGV6b3NUcmFuc2FjdGlvbk9wZXJhdGlvbiksXG4gICAgb3JpZ2luYXRpb246IHNjaGVtYV91dGlsc18xLlR5cGUuT3B0aW9uYWwoZXhwb3J0cy5UZXpvc09yaWdpbmF0aW9uT3BlcmF0aW9uKSxcbiAgICBkZWxlZ2F0aW9uOiBzY2hlbWFfdXRpbHNfMS5UeXBlLk9wdGlvbmFsKGV4cG9ydHMuVGV6b3NEZWxlZ2F0aW9uT3BlcmF0aW9uKSxcbn0pO1xuZXhwb3J0cy5UZXpvc1NpZ25UcmFuc2FjdGlvbiA9IHNjaGVtYV91dGlsc18xLlR5cGUuT2JqZWN0KHtcbiAgICBwYXRoOiBwYXJhbXNfMS5EZXJpdmF0aW9uUGF0aCxcbiAgICBicmFuY2g6IHNjaGVtYV91dGlsc18xLlR5cGUuU3RyaW5nKCksXG4gICAgb3BlcmF0aW9uOiBleHBvcnRzLlRlem9zT3BlcmF0aW9uLFxuICAgIGNodW5raWZ5OiBzY2hlbWFfdXRpbHNfMS5UeXBlLk9wdGlvbmFsKHNjaGVtYV91dGlsc18xLlR5cGUuQm9vbGVhbigpKSxcbn0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@trezor/connect/lib/types/api/tezos/index.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/connect/lib/types/coinInfo.js":
/*!************************************************************!*\
  !*** ./node_modules/@trezor/connect/lib/types/coinInfo.js ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.CoinInfo = exports.MiscNetworkInfo = exports.EthereumNetworkInfo = exports.BitcoinNetworkInfo = exports.BlockchainLink = exports.CoinSupport = exports.CoinObj = exports.Network = exports.Bip32 = void 0;\nconst schema_utils_1 = __webpack_require__(/*! @trezor/schema-utils */ \"./node_modules/@trezor/schema-utils/lib/index.js\");\nconst fees_1 = __webpack_require__(/*! ./fees */ \"./node_modules/@trezor/connect/lib/types/fees.js\");\nexports.Bip32 = schema_utils_1.Type.Object({\n    public: schema_utils_1.Type.Number(),\n    private: schema_utils_1.Type.Number(),\n});\nexports.Network = schema_utils_1.Type.Object({\n    messagePrefix: schema_utils_1.Type.String(),\n    bech32: schema_utils_1.Type.String(),\n    bip32: exports.Bip32,\n    pubKeyHash: schema_utils_1.Type.Number(),\n    scriptHash: schema_utils_1.Type.Number(),\n    wif: schema_utils_1.Type.Number(),\n    forkId: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n});\nexports.CoinObj = schema_utils_1.Type.Object({\n    coin: schema_utils_1.Type.String(),\n});\nexports.CoinSupport = schema_utils_1.Type.Object({\n    connect: schema_utils_1.Type.Boolean(),\n    T1B1: schema_utils_1.Type.Union([schema_utils_1.Type.String(), schema_utils_1.Type.Literal(false)]),\n    T2T1: schema_utils_1.Type.Union([schema_utils_1.Type.String(), schema_utils_1.Type.Literal(false)]),\n    T2B1: schema_utils_1.Type.Union([schema_utils_1.Type.String(), schema_utils_1.Type.Literal(false)]),\n});\nexports.BlockchainLink = schema_utils_1.Type.Object({\n    type: schema_utils_1.Type.String(),\n    url: schema_utils_1.Type.Array(schema_utils_1.Type.String()),\n});\nconst Common = schema_utils_1.Type.Object({\n    label: schema_utils_1.Type.String(),\n    name: schema_utils_1.Type.String(),\n    shortcut: schema_utils_1.Type.String(),\n    slip44: schema_utils_1.Type.Number(),\n    support: exports.CoinSupport,\n    decimals: schema_utils_1.Type.Number(),\n    blockchainLink: schema_utils_1.Type.Optional(exports.BlockchainLink),\n    blockTime: schema_utils_1.Type.Number(),\n    minFee: schema_utils_1.Type.Number(),\n    maxFee: schema_utils_1.Type.Number(),\n    defaultFees: schema_utils_1.Type.Array(fees_1.FeeLevel),\n});\nexports.BitcoinNetworkInfo = schema_utils_1.Type.Intersect([\n    Common,\n    schema_utils_1.Type.Object({\n        type: schema_utils_1.Type.Literal('bitcoin'),\n        cashAddrPrefix: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n        curveName: schema_utils_1.Type.String(),\n        dustLimit: schema_utils_1.Type.Number(),\n        forceBip143: schema_utils_1.Type.Boolean(),\n        hashGenesisBlock: schema_utils_1.Type.String(),\n        maxAddressLength: schema_utils_1.Type.Number(),\n        maxFeeSatoshiKb: schema_utils_1.Type.Number(),\n        minAddressLength: schema_utils_1.Type.Number(),\n        minFeeSatoshiKb: schema_utils_1.Type.Number(),\n        segwit: schema_utils_1.Type.Boolean(),\n        xPubMagic: schema_utils_1.Type.Number(),\n        xPubMagicSegwitNative: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n        xPubMagicSegwit: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n        taproot: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n        network: exports.Network,\n        isBitcoin: schema_utils_1.Type.Boolean(),\n    }),\n]);\nexports.EthereumNetworkInfo = schema_utils_1.Type.Intersect([\n    Common,\n    schema_utils_1.Type.Object({\n        type: schema_utils_1.Type.Literal('ethereum'),\n        chainId: schema_utils_1.Type.Number(),\n        network: schema_utils_1.Type.Optional(schema_utils_1.Type.Undefined()),\n    }),\n]);\nexports.MiscNetworkInfo = schema_utils_1.Type.Intersect([\n    Common,\n    schema_utils_1.Type.Object({\n        type: schema_utils_1.Type.Union([schema_utils_1.Type.Literal('misc'), schema_utils_1.Type.Literal('nem')]),\n        curve: schema_utils_1.Type.String(),\n        network: schema_utils_1.Type.Optional(schema_utils_1.Type.Undefined()),\n    }),\n]);\nexports.CoinInfo = schema_utils_1.Type.Union([exports.BitcoinNetworkInfo, exports.EthereumNetworkInfo, exports.MiscNetworkInfo]);\n//# sourceMappingURL=coinInfo.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci9jb25uZWN0L2xpYi90eXBlcy9jb2luSW5mby5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxnQkFBZ0IsR0FBRyx1QkFBdUIsR0FBRywyQkFBMkIsR0FBRywwQkFBMEIsR0FBRyxzQkFBc0IsR0FBRyxtQkFBbUIsR0FBRyxlQUFlLEdBQUcsZUFBZSxHQUFHLGFBQWE7QUFDeE0sdUJBQXVCLG1CQUFPLENBQUMsOEVBQXNCO0FBQ3JELGVBQWUsbUJBQU8sQ0FBQyxnRUFBUTtBQUMvQixhQUFhO0FBQ2I7QUFDQTtBQUNBLENBQUM7QUFDRCxlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0QsZUFBZTtBQUNmO0FBQ0EsQ0FBQztBQUNELG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCxzQkFBc0I7QUFDdEI7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0QsMEJBQTBCO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsMkJBQTJCO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSx1QkFBdUI7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLGdCQUFnQjtBQUNoQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHRyZXpvci9jb25uZWN0L2xpYi90eXBlcy9jb2luSW5mby5qcz84YmI2Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Db2luSW5mbyA9IGV4cG9ydHMuTWlzY05ldHdvcmtJbmZvID0gZXhwb3J0cy5FdGhlcmV1bU5ldHdvcmtJbmZvID0gZXhwb3J0cy5CaXRjb2luTmV0d29ya0luZm8gPSBleHBvcnRzLkJsb2NrY2hhaW5MaW5rID0gZXhwb3J0cy5Db2luU3VwcG9ydCA9IGV4cG9ydHMuQ29pbk9iaiA9IGV4cG9ydHMuTmV0d29yayA9IGV4cG9ydHMuQmlwMzIgPSB2b2lkIDA7XG5jb25zdCBzY2hlbWFfdXRpbHNfMSA9IHJlcXVpcmUoXCJAdHJlem9yL3NjaGVtYS11dGlsc1wiKTtcbmNvbnN0IGZlZXNfMSA9IHJlcXVpcmUoXCIuL2ZlZXNcIik7XG5leHBvcnRzLkJpcDMyID0gc2NoZW1hX3V0aWxzXzEuVHlwZS5PYmplY3Qoe1xuICAgIHB1YmxpYzogc2NoZW1hX3V0aWxzXzEuVHlwZS5OdW1iZXIoKSxcbiAgICBwcml2YXRlOiBzY2hlbWFfdXRpbHNfMS5UeXBlLk51bWJlcigpLFxufSk7XG5leHBvcnRzLk5ldHdvcmsgPSBzY2hlbWFfdXRpbHNfMS5UeXBlLk9iamVjdCh7XG4gICAgbWVzc2FnZVByZWZpeDogc2NoZW1hX3V0aWxzXzEuVHlwZS5TdHJpbmcoKSxcbiAgICBiZWNoMzI6IHNjaGVtYV91dGlsc18xLlR5cGUuU3RyaW5nKCksXG4gICAgYmlwMzI6IGV4cG9ydHMuQmlwMzIsXG4gICAgcHViS2V5SGFzaDogc2NoZW1hX3V0aWxzXzEuVHlwZS5OdW1iZXIoKSxcbiAgICBzY3JpcHRIYXNoOiBzY2hlbWFfdXRpbHNfMS5UeXBlLk51bWJlcigpLFxuICAgIHdpZjogc2NoZW1hX3V0aWxzXzEuVHlwZS5OdW1iZXIoKSxcbiAgICBmb3JrSWQ6IHNjaGVtYV91dGlsc18xLlR5cGUuT3B0aW9uYWwoc2NoZW1hX3V0aWxzXzEuVHlwZS5OdW1iZXIoKSksXG59KTtcbmV4cG9ydHMuQ29pbk9iaiA9IHNjaGVtYV91dGlsc18xLlR5cGUuT2JqZWN0KHtcbiAgICBjb2luOiBzY2hlbWFfdXRpbHNfMS5UeXBlLlN0cmluZygpLFxufSk7XG5leHBvcnRzLkNvaW5TdXBwb3J0ID0gc2NoZW1hX3V0aWxzXzEuVHlwZS5PYmplY3Qoe1xuICAgIGNvbm5lY3Q6IHNjaGVtYV91dGlsc18xLlR5cGUuQm9vbGVhbigpLFxuICAgIFQxQjE6IHNjaGVtYV91dGlsc18xLlR5cGUuVW5pb24oW3NjaGVtYV91dGlsc18xLlR5cGUuU3RyaW5nKCksIHNjaGVtYV91dGlsc18xLlR5cGUuTGl0ZXJhbChmYWxzZSldKSxcbiAgICBUMlQxOiBzY2hlbWFfdXRpbHNfMS5UeXBlLlVuaW9uKFtzY2hlbWFfdXRpbHNfMS5UeXBlLlN0cmluZygpLCBzY2hlbWFfdXRpbHNfMS5UeXBlLkxpdGVyYWwoZmFsc2UpXSksXG4gICAgVDJCMTogc2NoZW1hX3V0aWxzXzEuVHlwZS5Vbmlvbihbc2NoZW1hX3V0aWxzXzEuVHlwZS5TdHJpbmcoKSwgc2NoZW1hX3V0aWxzXzEuVHlwZS5MaXRlcmFsKGZhbHNlKV0pLFxufSk7XG5leHBvcnRzLkJsb2NrY2hhaW5MaW5rID0gc2NoZW1hX3V0aWxzXzEuVHlwZS5PYmplY3Qoe1xuICAgIHR5cGU6IHNjaGVtYV91dGlsc18xLlR5cGUuU3RyaW5nKCksXG4gICAgdXJsOiBzY2hlbWFfdXRpbHNfMS5UeXBlLkFycmF5KHNjaGVtYV91dGlsc18xLlR5cGUuU3RyaW5nKCkpLFxufSk7XG5jb25zdCBDb21tb24gPSBzY2hlbWFfdXRpbHNfMS5UeXBlLk9iamVjdCh7XG4gICAgbGFiZWw6IHNjaGVtYV91dGlsc18xLlR5cGUuU3RyaW5nKCksXG4gICAgbmFtZTogc2NoZW1hX3V0aWxzXzEuVHlwZS5TdHJpbmcoKSxcbiAgICBzaG9ydGN1dDogc2NoZW1hX3V0aWxzXzEuVHlwZS5TdHJpbmcoKSxcbiAgICBzbGlwNDQ6IHNjaGVtYV91dGlsc18xLlR5cGUuTnVtYmVyKCksXG4gICAgc3VwcG9ydDogZXhwb3J0cy5Db2luU3VwcG9ydCxcbiAgICBkZWNpbWFsczogc2NoZW1hX3V0aWxzXzEuVHlwZS5OdW1iZXIoKSxcbiAgICBibG9ja2NoYWluTGluazogc2NoZW1hX3V0aWxzXzEuVHlwZS5PcHRpb25hbChleHBvcnRzLkJsb2NrY2hhaW5MaW5rKSxcbiAgICBibG9ja1RpbWU6IHNjaGVtYV91dGlsc18xLlR5cGUuTnVtYmVyKCksXG4gICAgbWluRmVlOiBzY2hlbWFfdXRpbHNfMS5UeXBlLk51bWJlcigpLFxuICAgIG1heEZlZTogc2NoZW1hX3V0aWxzXzEuVHlwZS5OdW1iZXIoKSxcbiAgICBkZWZhdWx0RmVlczogc2NoZW1hX3V0aWxzXzEuVHlwZS5BcnJheShmZWVzXzEuRmVlTGV2ZWwpLFxufSk7XG5leHBvcnRzLkJpdGNvaW5OZXR3b3JrSW5mbyA9IHNjaGVtYV91dGlsc18xLlR5cGUuSW50ZXJzZWN0KFtcbiAgICBDb21tb24sXG4gICAgc2NoZW1hX3V0aWxzXzEuVHlwZS5PYmplY3Qoe1xuICAgICAgICB0eXBlOiBzY2hlbWFfdXRpbHNfMS5UeXBlLkxpdGVyYWwoJ2JpdGNvaW4nKSxcbiAgICAgICAgY2FzaEFkZHJQcmVmaXg6IHNjaGVtYV91dGlsc18xLlR5cGUuT3B0aW9uYWwoc2NoZW1hX3V0aWxzXzEuVHlwZS5TdHJpbmcoKSksXG4gICAgICAgIGN1cnZlTmFtZTogc2NoZW1hX3V0aWxzXzEuVHlwZS5TdHJpbmcoKSxcbiAgICAgICAgZHVzdExpbWl0OiBzY2hlbWFfdXRpbHNfMS5UeXBlLk51bWJlcigpLFxuICAgICAgICBmb3JjZUJpcDE0Mzogc2NoZW1hX3V0aWxzXzEuVHlwZS5Cb29sZWFuKCksXG4gICAgICAgIGhhc2hHZW5lc2lzQmxvY2s6IHNjaGVtYV91dGlsc18xLlR5cGUuU3RyaW5nKCksXG4gICAgICAgIG1heEFkZHJlc3NMZW5ndGg6IHNjaGVtYV91dGlsc18xLlR5cGUuTnVtYmVyKCksXG4gICAgICAgIG1heEZlZVNhdG9zaGlLYjogc2NoZW1hX3V0aWxzXzEuVHlwZS5OdW1iZXIoKSxcbiAgICAgICAgbWluQWRkcmVzc0xlbmd0aDogc2NoZW1hX3V0aWxzXzEuVHlwZS5OdW1iZXIoKSxcbiAgICAgICAgbWluRmVlU2F0b3NoaUtiOiBzY2hlbWFfdXRpbHNfMS5UeXBlLk51bWJlcigpLFxuICAgICAgICBzZWd3aXQ6IHNjaGVtYV91dGlsc18xLlR5cGUuQm9vbGVhbigpLFxuICAgICAgICB4UHViTWFnaWM6IHNjaGVtYV91dGlsc18xLlR5cGUuTnVtYmVyKCksXG4gICAgICAgIHhQdWJNYWdpY1NlZ3dpdE5hdGl2ZTogc2NoZW1hX3V0aWxzXzEuVHlwZS5PcHRpb25hbChzY2hlbWFfdXRpbHNfMS5UeXBlLk51bWJlcigpKSxcbiAgICAgICAgeFB1Yk1hZ2ljU2Vnd2l0OiBzY2hlbWFfdXRpbHNfMS5UeXBlLk9wdGlvbmFsKHNjaGVtYV91dGlsc18xLlR5cGUuTnVtYmVyKCkpLFxuICAgICAgICB0YXByb290OiBzY2hlbWFfdXRpbHNfMS5UeXBlLk9wdGlvbmFsKHNjaGVtYV91dGlsc18xLlR5cGUuQm9vbGVhbigpKSxcbiAgICAgICAgbmV0d29yazogZXhwb3J0cy5OZXR3b3JrLFxuICAgICAgICBpc0JpdGNvaW46IHNjaGVtYV91dGlsc18xLlR5cGUuQm9vbGVhbigpLFxuICAgIH0pLFxuXSk7XG5leHBvcnRzLkV0aGVyZXVtTmV0d29ya0luZm8gPSBzY2hlbWFfdXRpbHNfMS5UeXBlLkludGVyc2VjdChbXG4gICAgQ29tbW9uLFxuICAgIHNjaGVtYV91dGlsc18xLlR5cGUuT2JqZWN0KHtcbiAgICAgICAgdHlwZTogc2NoZW1hX3V0aWxzXzEuVHlwZS5MaXRlcmFsKCdldGhlcmV1bScpLFxuICAgICAgICBjaGFpbklkOiBzY2hlbWFfdXRpbHNfMS5UeXBlLk51bWJlcigpLFxuICAgICAgICBuZXR3b3JrOiBzY2hlbWFfdXRpbHNfMS5UeXBlLk9wdGlvbmFsKHNjaGVtYV91dGlsc18xLlR5cGUuVW5kZWZpbmVkKCkpLFxuICAgIH0pLFxuXSk7XG5leHBvcnRzLk1pc2NOZXR3b3JrSW5mbyA9IHNjaGVtYV91dGlsc18xLlR5cGUuSW50ZXJzZWN0KFtcbiAgICBDb21tb24sXG4gICAgc2NoZW1hX3V0aWxzXzEuVHlwZS5PYmplY3Qoe1xuICAgICAgICB0eXBlOiBzY2hlbWFfdXRpbHNfMS5UeXBlLlVuaW9uKFtzY2hlbWFfdXRpbHNfMS5UeXBlLkxpdGVyYWwoJ21pc2MnKSwgc2NoZW1hX3V0aWxzXzEuVHlwZS5MaXRlcmFsKCduZW0nKV0pLFxuICAgICAgICBjdXJ2ZTogc2NoZW1hX3V0aWxzXzEuVHlwZS5TdHJpbmcoKSxcbiAgICAgICAgbmV0d29yazogc2NoZW1hX3V0aWxzXzEuVHlwZS5PcHRpb25hbChzY2hlbWFfdXRpbHNfMS5UeXBlLlVuZGVmaW5lZCgpKSxcbiAgICB9KSxcbl0pO1xuZXhwb3J0cy5Db2luSW5mbyA9IHNjaGVtYV91dGlsc18xLlR5cGUuVW5pb24oW2V4cG9ydHMuQml0Y29pbk5ldHdvcmtJbmZvLCBleHBvcnRzLkV0aGVyZXVtTmV0d29ya0luZm8sIGV4cG9ydHMuTWlzY05ldHdvcmtJbmZvXSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jb2luSW5mby5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@trezor/connect/lib/types/coinInfo.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/connect/lib/types/device.js":
/*!**********************************************************!*\
  !*** ./node_modules/@trezor/connect/lib/types/device.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.DeviceModelInternal = exports.FirmwareType = void 0;\nvar FirmwareType;\n(function (FirmwareType) {\n    FirmwareType[\"BitcoinOnly\"] = \"bitcoin-only\";\n    FirmwareType[\"Regular\"] = \"regular\";\n})(FirmwareType || (exports.FirmwareType = FirmwareType = {}));\nvar messages_schema_1 = __webpack_require__(/*! @trezor/protobuf/lib/messages-schema */ \"./node_modules/@trezor/protobuf/lib/messages-schema.js\");\nObject.defineProperty(exports, \"DeviceModelInternal\", ({ enumerable: true, get: function () { return messages_schema_1.DeviceModelInternal; } }));\n//# sourceMappingURL=device.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci9jb25uZWN0L2xpYi90eXBlcy9kZXZpY2UuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsMkJBQTJCLEdBQUcsb0JBQW9CO0FBQ2xEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxtQkFBbUIsb0JBQW9CLG9CQUFvQjtBQUM1RCx3QkFBd0IsbUJBQU8sQ0FBQyxvR0FBc0M7QUFDdEUsdURBQXNELEVBQUUscUNBQXFDLGlEQUFpRCxFQUFDO0FBQy9JIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AdHJlem9yL2Nvbm5lY3QvbGliL3R5cGVzL2RldmljZS5qcz9hOWE1Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5EZXZpY2VNb2RlbEludGVybmFsID0gZXhwb3J0cy5GaXJtd2FyZVR5cGUgPSB2b2lkIDA7XG52YXIgRmlybXdhcmVUeXBlO1xuKGZ1bmN0aW9uIChGaXJtd2FyZVR5cGUpIHtcbiAgICBGaXJtd2FyZVR5cGVbXCJCaXRjb2luT25seVwiXSA9IFwiYml0Y29pbi1vbmx5XCI7XG4gICAgRmlybXdhcmVUeXBlW1wiUmVndWxhclwiXSA9IFwicmVndWxhclwiO1xufSkoRmlybXdhcmVUeXBlIHx8IChleHBvcnRzLkZpcm13YXJlVHlwZSA9IEZpcm13YXJlVHlwZSA9IHt9KSk7XG52YXIgbWVzc2FnZXNfc2NoZW1hXzEgPSByZXF1aXJlKFwiQHRyZXpvci9wcm90b2J1Zi9saWIvbWVzc2FnZXMtc2NoZW1hXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiRGV2aWNlTW9kZWxJbnRlcm5hbFwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gbWVzc2FnZXNfc2NoZW1hXzEuRGV2aWNlTW9kZWxJbnRlcm5hbDsgfSB9KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRldmljZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@trezor/connect/lib/types/device.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/connect/lib/types/fees.js":
/*!********************************************************!*\
  !*** ./node_modules/@trezor/connect/lib/types/fees.js ***!
  \********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SelectFeeLevel = exports.FeeLevel = exports.FeeInfo = void 0;\nconst schema_utils_1 = __webpack_require__(/*! @trezor/schema-utils */ \"./node_modules/@trezor/schema-utils/lib/index.js\");\nexports.FeeInfo = schema_utils_1.Type.Object({\n    blockTime: schema_utils_1.Type.Number(),\n    minFee: schema_utils_1.Type.Number(),\n    maxFee: schema_utils_1.Type.Number(),\n    dustLimit: schema_utils_1.Type.Number(),\n});\nexports.FeeLevel = schema_utils_1.Type.Object({\n    label: schema_utils_1.Type.Union([\n        schema_utils_1.Type.Literal('high'),\n        schema_utils_1.Type.Literal('normal'),\n        schema_utils_1.Type.Literal('economy'),\n        schema_utils_1.Type.Literal('low'),\n        schema_utils_1.Type.Literal('custom'),\n    ]),\n    feePerUnit: schema_utils_1.Type.String(),\n    blocks: schema_utils_1.Type.Number(),\n    feeLimit: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    feePerTx: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n});\nexports.SelectFeeLevel = schema_utils_1.Type.Union([\n    schema_utils_1.Type.Object({\n        name: schema_utils_1.Type.String(),\n        fee: schema_utils_1.Type.Literal('0'),\n        feePerByte: schema_utils_1.Type.Optional(schema_utils_1.Type.Undefined()),\n        disabled: schema_utils_1.Type.Literal(true),\n    }),\n    schema_utils_1.Type.Object({\n        name: schema_utils_1.Type.String(),\n        fee: schema_utils_1.Type.String(),\n        feePerByte: schema_utils_1.Type.String(),\n        minutes: schema_utils_1.Type.Number(),\n        total: schema_utils_1.Type.String(),\n    }),\n]);\n//# sourceMappingURL=fees.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci9jb25uZWN0L2xpYi90eXBlcy9mZWVzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHNCQUFzQixHQUFHLGdCQUFnQixHQUFHLGVBQWU7QUFDM0QsdUJBQXVCLG1CQUFPLENBQUMsOEVBQXNCO0FBQ3JELGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCxnQkFBZ0I7QUFDaEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCxzQkFBc0I7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHRyZXpvci9jb25uZWN0L2xpYi90eXBlcy9mZWVzLmpzPzkyYjkiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlNlbGVjdEZlZUxldmVsID0gZXhwb3J0cy5GZWVMZXZlbCA9IGV4cG9ydHMuRmVlSW5mbyA9IHZvaWQgMDtcbmNvbnN0IHNjaGVtYV91dGlsc18xID0gcmVxdWlyZShcIkB0cmV6b3Ivc2NoZW1hLXV0aWxzXCIpO1xuZXhwb3J0cy5GZWVJbmZvID0gc2NoZW1hX3V0aWxzXzEuVHlwZS5PYmplY3Qoe1xuICAgIGJsb2NrVGltZTogc2NoZW1hX3V0aWxzXzEuVHlwZS5OdW1iZXIoKSxcbiAgICBtaW5GZWU6IHNjaGVtYV91dGlsc18xLlR5cGUuTnVtYmVyKCksXG4gICAgbWF4RmVlOiBzY2hlbWFfdXRpbHNfMS5UeXBlLk51bWJlcigpLFxuICAgIGR1c3RMaW1pdDogc2NoZW1hX3V0aWxzXzEuVHlwZS5OdW1iZXIoKSxcbn0pO1xuZXhwb3J0cy5GZWVMZXZlbCA9IHNjaGVtYV91dGlsc18xLlR5cGUuT2JqZWN0KHtcbiAgICBsYWJlbDogc2NoZW1hX3V0aWxzXzEuVHlwZS5VbmlvbihbXG4gICAgICAgIHNjaGVtYV91dGlsc18xLlR5cGUuTGl0ZXJhbCgnaGlnaCcpLFxuICAgICAgICBzY2hlbWFfdXRpbHNfMS5UeXBlLkxpdGVyYWwoJ25vcm1hbCcpLFxuICAgICAgICBzY2hlbWFfdXRpbHNfMS5UeXBlLkxpdGVyYWwoJ2Vjb25vbXknKSxcbiAgICAgICAgc2NoZW1hX3V0aWxzXzEuVHlwZS5MaXRlcmFsKCdsb3cnKSxcbiAgICAgICAgc2NoZW1hX3V0aWxzXzEuVHlwZS5MaXRlcmFsKCdjdXN0b20nKSxcbiAgICBdKSxcbiAgICBmZWVQZXJVbml0OiBzY2hlbWFfdXRpbHNfMS5UeXBlLlN0cmluZygpLFxuICAgIGJsb2Nrczogc2NoZW1hX3V0aWxzXzEuVHlwZS5OdW1iZXIoKSxcbiAgICBmZWVMaW1pdDogc2NoZW1hX3V0aWxzXzEuVHlwZS5PcHRpb25hbChzY2hlbWFfdXRpbHNfMS5UeXBlLlN0cmluZygpKSxcbiAgICBmZWVQZXJUeDogc2NoZW1hX3V0aWxzXzEuVHlwZS5PcHRpb25hbChzY2hlbWFfdXRpbHNfMS5UeXBlLlN0cmluZygpKSxcbn0pO1xuZXhwb3J0cy5TZWxlY3RGZWVMZXZlbCA9IHNjaGVtYV91dGlsc18xLlR5cGUuVW5pb24oW1xuICAgIHNjaGVtYV91dGlsc18xLlR5cGUuT2JqZWN0KHtcbiAgICAgICAgbmFtZTogc2NoZW1hX3V0aWxzXzEuVHlwZS5TdHJpbmcoKSxcbiAgICAgICAgZmVlOiBzY2hlbWFfdXRpbHNfMS5UeXBlLkxpdGVyYWwoJzAnKSxcbiAgICAgICAgZmVlUGVyQnl0ZTogc2NoZW1hX3V0aWxzXzEuVHlwZS5PcHRpb25hbChzY2hlbWFfdXRpbHNfMS5UeXBlLlVuZGVmaW5lZCgpKSxcbiAgICAgICAgZGlzYWJsZWQ6IHNjaGVtYV91dGlsc18xLlR5cGUuTGl0ZXJhbCh0cnVlKSxcbiAgICB9KSxcbiAgICBzY2hlbWFfdXRpbHNfMS5UeXBlLk9iamVjdCh7XG4gICAgICAgIG5hbWU6IHNjaGVtYV91dGlsc18xLlR5cGUuU3RyaW5nKCksXG4gICAgICAgIGZlZTogc2NoZW1hX3V0aWxzXzEuVHlwZS5TdHJpbmcoKSxcbiAgICAgICAgZmVlUGVyQnl0ZTogc2NoZW1hX3V0aWxzXzEuVHlwZS5TdHJpbmcoKSxcbiAgICAgICAgbWludXRlczogc2NoZW1hX3V0aWxzXzEuVHlwZS5OdW1iZXIoKSxcbiAgICAgICAgdG90YWw6IHNjaGVtYV91dGlsc18xLlR5cGUuU3RyaW5nKCksXG4gICAgfSksXG5dKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWZlZXMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@trezor/connect/lib/types/fees.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/connect/lib/types/firmware.js":
/*!************************************************************!*\
  !*** ./node_modules/@trezor/connect/lib/types/firmware.js ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.IntermediaryVersion = void 0;\nconst schema_utils_1 = __webpack_require__(/*! @trezor/schema-utils */ \"./node_modules/@trezor/schema-utils/lib/index.js\");\nexports.IntermediaryVersion = schema_utils_1.Type.Union([schema_utils_1.Type.Literal(1), schema_utils_1.Type.Literal(2), schema_utils_1.Type.Literal(3)]);\n//# sourceMappingURL=firmware.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci9jb25uZWN0L2xpYi90eXBlcy9maXJtd2FyZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCwyQkFBMkI7QUFDM0IsdUJBQXVCLG1CQUFPLENBQUMsOEVBQXNCO0FBQ3JELDJCQUEyQjtBQUMzQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHRyZXpvci9jb25uZWN0L2xpYi90eXBlcy9maXJtd2FyZS5qcz84ODI3Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5JbnRlcm1lZGlhcnlWZXJzaW9uID0gdm9pZCAwO1xuY29uc3Qgc2NoZW1hX3V0aWxzXzEgPSByZXF1aXJlKFwiQHRyZXpvci9zY2hlbWEtdXRpbHNcIik7XG5leHBvcnRzLkludGVybWVkaWFyeVZlcnNpb24gPSBzY2hlbWFfdXRpbHNfMS5UeXBlLlVuaW9uKFtzY2hlbWFfdXRpbHNfMS5UeXBlLkxpdGVyYWwoMSksIHNjaGVtYV91dGlsc18xLlR5cGUuTGl0ZXJhbCgyKSwgc2NoZW1hX3V0aWxzXzEuVHlwZS5MaXRlcmFsKDMpXSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1maXJtd2FyZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@trezor/connect/lib/types/firmware.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/connect/lib/types/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/@trezor/connect/lib/types/index.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.mjs\");\ntslib_1.__exportStar(__webpack_require__(/*! ./api */ \"./node_modules/@trezor/connect/lib/types/api/index.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./account */ \"./node_modules/@trezor/connect/lib/types/account.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./coinInfo */ \"./node_modules/@trezor/connect/lib/types/coinInfo.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./device */ \"./node_modules/@trezor/connect/lib/types/device.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./fees */ \"./node_modules/@trezor/connect/lib/types/fees.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./firmware */ \"./node_modules/@trezor/connect/lib/types/firmware.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./params */ \"./node_modules/@trezor/connect/lib/types/params.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./settings */ \"./node_modules/@trezor/connect/lib/types/settings.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./api/cardano */ \"./node_modules/@trezor/connect/lib/types/api/cardano/index.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./api/binance */ \"./node_modules/@trezor/connect/lib/types/api/binance/index.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./api/bitcoin */ \"./node_modules/@trezor/connect/lib/types/api/bitcoin/index.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./api/eos */ \"./node_modules/@trezor/connect/lib/types/api/eos/index.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./api/ripple */ \"./node_modules/@trezor/connect/lib/types/api/ripple/index.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./api/ethereum */ \"./node_modules/@trezor/connect/lib/types/api/ethereum/index.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./api/solana */ \"./node_modules/@trezor/connect/lib/types/api/solana/index.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./api/stellar */ \"./node_modules/@trezor/connect/lib/types/api/stellar/index.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./api/tezos */ \"./node_modules/@trezor/connect/lib/types/api/tezos/index.js\"), exports);\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci9jb25uZWN0L2xpYi90eXBlcy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxnQkFBZ0IsbUJBQU8sQ0FBQyxpREFBTztBQUMvQixxQkFBcUIsbUJBQU8sQ0FBQyxvRUFBTztBQUNwQyxxQkFBcUIsbUJBQU8sQ0FBQyxzRUFBVztBQUN4QyxxQkFBcUIsbUJBQU8sQ0FBQyx3RUFBWTtBQUN6QyxxQkFBcUIsbUJBQU8sQ0FBQyxvRUFBVTtBQUN2QyxxQkFBcUIsbUJBQU8sQ0FBQyxnRUFBUTtBQUNyQyxxQkFBcUIsbUJBQU8sQ0FBQyx3RUFBWTtBQUN6QyxxQkFBcUIsbUJBQU8sQ0FBQyxvRUFBVTtBQUN2QyxxQkFBcUIsbUJBQU8sQ0FBQyx3RUFBWTtBQUN6QyxxQkFBcUIsbUJBQU8sQ0FBQyxvRkFBZTtBQUM1QyxxQkFBcUIsbUJBQU8sQ0FBQyxvRkFBZTtBQUM1QyxxQkFBcUIsbUJBQU8sQ0FBQyxvRkFBZTtBQUM1QyxxQkFBcUIsbUJBQU8sQ0FBQyw0RUFBVztBQUN4QyxxQkFBcUIsbUJBQU8sQ0FBQyxrRkFBYztBQUMzQyxxQkFBcUIsbUJBQU8sQ0FBQyxzRkFBZ0I7QUFDN0MscUJBQXFCLG1CQUFPLENBQUMsa0ZBQWM7QUFDM0MscUJBQXFCLG1CQUFPLENBQUMsb0ZBQWU7QUFDNUMscUJBQXFCLG1CQUFPLENBQUMsZ0ZBQWE7QUFDMUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0B0cmV6b3IvY29ubmVjdC9saWIvdHlwZXMvaW5kZXguanM/MjBlMyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNvbnN0IHRzbGliXzEgPSByZXF1aXJlKFwidHNsaWJcIik7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9hcGlcIiksIGV4cG9ydHMpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vYWNjb3VudFwiKSwgZXhwb3J0cyk7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9jb2luSW5mb1wiKSwgZXhwb3J0cyk7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9kZXZpY2VcIiksIGV4cG9ydHMpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vZmVlc1wiKSwgZXhwb3J0cyk7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9maXJtd2FyZVwiKSwgZXhwb3J0cyk7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9wYXJhbXNcIiksIGV4cG9ydHMpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vc2V0dGluZ3NcIiksIGV4cG9ydHMpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vYXBpL2NhcmRhbm9cIiksIGV4cG9ydHMpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vYXBpL2JpbmFuY2VcIiksIGV4cG9ydHMpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vYXBpL2JpdGNvaW5cIiksIGV4cG9ydHMpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vYXBpL2Vvc1wiKSwgZXhwb3J0cyk7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9hcGkvcmlwcGxlXCIpLCBleHBvcnRzKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2FwaS9ldGhlcmV1bVwiKSwgZXhwb3J0cyk7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9hcGkvc29sYW5hXCIpLCBleHBvcnRzKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2FwaS9zdGVsbGFyXCIpLCBleHBvcnRzKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2FwaS90ZXpvc1wiKSwgZXhwb3J0cyk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@trezor/connect/lib/types/index.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/connect/lib/types/params.js":
/*!**********************************************************!*\
  !*** ./node_modules/@trezor/connect/lib/types/params.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PublicKey = exports.GetPublicKey = exports.GetAddress = exports.DerivationPath = exports.Bundle = void 0;\nconst schema_utils_1 = __webpack_require__(/*! @trezor/schema-utils */ \"./node_modules/@trezor/schema-utils/lib/index.js\");\nconst Bundle = (type) => schema_utils_1.Type.Object({ bundle: schema_utils_1.Type.Array(type, { minItems: 1 }) });\nexports.Bundle = Bundle;\nexports.DerivationPath = schema_utils_1.Type.Union([schema_utils_1.Type.String(), schema_utils_1.Type.Array(schema_utils_1.Type.Number())]);\nexports.GetAddress = schema_utils_1.Type.Object({\n    path: exports.DerivationPath,\n    address: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    showOnTrezor: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    useEventListener: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n});\nexports.GetPublicKey = schema_utils_1.Type.Object({\n    path: exports.DerivationPath,\n    showOnTrezor: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    suppressBackupWarning: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n});\nexports.PublicKey = schema_utils_1.Type.Object({\n    publicKey: schema_utils_1.Type.String(),\n    path: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    serializedPath: schema_utils_1.Type.String(),\n});\n//# sourceMappingURL=params.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci9jb25uZWN0L2xpYi90eXBlcy9wYXJhbXMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsaUJBQWlCLEdBQUcsb0JBQW9CLEdBQUcsa0JBQWtCLEdBQUcsc0JBQXNCLEdBQUcsY0FBYztBQUN2Ryx1QkFBdUIsbUJBQU8sQ0FBQyw4RUFBc0I7QUFDckQsc0RBQXNELDBDQUEwQyxhQUFhLEdBQUc7QUFDaEgsY0FBYztBQUNkLHNCQUFzQjtBQUN0QixrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCxvQkFBb0I7QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0QsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHRyZXpvci9jb25uZWN0L2xpYi90eXBlcy9wYXJhbXMuanM/N2UxMCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuUHVibGljS2V5ID0gZXhwb3J0cy5HZXRQdWJsaWNLZXkgPSBleHBvcnRzLkdldEFkZHJlc3MgPSBleHBvcnRzLkRlcml2YXRpb25QYXRoID0gZXhwb3J0cy5CdW5kbGUgPSB2b2lkIDA7XG5jb25zdCBzY2hlbWFfdXRpbHNfMSA9IHJlcXVpcmUoXCJAdHJlem9yL3NjaGVtYS11dGlsc1wiKTtcbmNvbnN0IEJ1bmRsZSA9ICh0eXBlKSA9PiBzY2hlbWFfdXRpbHNfMS5UeXBlLk9iamVjdCh7IGJ1bmRsZTogc2NoZW1hX3V0aWxzXzEuVHlwZS5BcnJheSh0eXBlLCB7IG1pbkl0ZW1zOiAxIH0pIH0pO1xuZXhwb3J0cy5CdW5kbGUgPSBCdW5kbGU7XG5leHBvcnRzLkRlcml2YXRpb25QYXRoID0gc2NoZW1hX3V0aWxzXzEuVHlwZS5Vbmlvbihbc2NoZW1hX3V0aWxzXzEuVHlwZS5TdHJpbmcoKSwgc2NoZW1hX3V0aWxzXzEuVHlwZS5BcnJheShzY2hlbWFfdXRpbHNfMS5UeXBlLk51bWJlcigpKV0pO1xuZXhwb3J0cy5HZXRBZGRyZXNzID0gc2NoZW1hX3V0aWxzXzEuVHlwZS5PYmplY3Qoe1xuICAgIHBhdGg6IGV4cG9ydHMuRGVyaXZhdGlvblBhdGgsXG4gICAgYWRkcmVzczogc2NoZW1hX3V0aWxzXzEuVHlwZS5PcHRpb25hbChzY2hlbWFfdXRpbHNfMS5UeXBlLlN0cmluZygpKSxcbiAgICBzaG93T25UcmV6b3I6IHNjaGVtYV91dGlsc18xLlR5cGUuT3B0aW9uYWwoc2NoZW1hX3V0aWxzXzEuVHlwZS5Cb29sZWFuKCkpLFxuICAgIGNodW5raWZ5OiBzY2hlbWFfdXRpbHNfMS5UeXBlLk9wdGlvbmFsKHNjaGVtYV91dGlsc18xLlR5cGUuQm9vbGVhbigpKSxcbiAgICB1c2VFdmVudExpc3RlbmVyOiBzY2hlbWFfdXRpbHNfMS5UeXBlLk9wdGlvbmFsKHNjaGVtYV91dGlsc18xLlR5cGUuQm9vbGVhbigpKSxcbn0pO1xuZXhwb3J0cy5HZXRQdWJsaWNLZXkgPSBzY2hlbWFfdXRpbHNfMS5UeXBlLk9iamVjdCh7XG4gICAgcGF0aDogZXhwb3J0cy5EZXJpdmF0aW9uUGF0aCxcbiAgICBzaG93T25UcmV6b3I6IHNjaGVtYV91dGlsc18xLlR5cGUuT3B0aW9uYWwoc2NoZW1hX3V0aWxzXzEuVHlwZS5Cb29sZWFuKCkpLFxuICAgIHN1cHByZXNzQmFja3VwV2FybmluZzogc2NoZW1hX3V0aWxzXzEuVHlwZS5PcHRpb25hbChzY2hlbWFfdXRpbHNfMS5UeXBlLkJvb2xlYW4oKSksXG4gICAgY2h1bmtpZnk6IHNjaGVtYV91dGlsc18xLlR5cGUuT3B0aW9uYWwoc2NoZW1hX3V0aWxzXzEuVHlwZS5Cb29sZWFuKCkpLFxufSk7XG5leHBvcnRzLlB1YmxpY0tleSA9IHNjaGVtYV91dGlsc18xLlR5cGUuT2JqZWN0KHtcbiAgICBwdWJsaWNLZXk6IHNjaGVtYV91dGlsc18xLlR5cGUuU3RyaW5nKCksXG4gICAgcGF0aDogc2NoZW1hX3V0aWxzXzEuVHlwZS5BcnJheShzY2hlbWFfdXRpbHNfMS5UeXBlLk51bWJlcigpKSxcbiAgICBzZXJpYWxpemVkUGF0aDogc2NoZW1hX3V0aWxzXzEuVHlwZS5TdHJpbmcoKSxcbn0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cGFyYW1zLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@trezor/connect/lib/types/params.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/connect/lib/types/settings.js":
/*!************************************************************!*\
  !*** ./node_modules/@trezor/connect/lib/types/settings.js ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n//# sourceMappingURL=settings.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci9jb25uZWN0L2xpYi90eXBlcy9zZXR0aW5ncy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHRyZXpvci9jb25uZWN0L2xpYi90eXBlcy9zZXR0aW5ncy5qcz8xNDA5Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c2V0dGluZ3MuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@trezor/connect/lib/types/settings.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/connect/lib/utils/debug.js":
/*!*********************************************************!*\
  !*** ./node_modules/@trezor/connect/lib/utils/debug.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getLog = exports.enableLogByPrefix = exports.enableLog = exports.setLogWriter = exports.initLog = exports.Log = void 0;\nconst green = '#bada55';\nconst blue = '#20abd8';\nconst orange = '#f4a744';\nconst yellow = '#fbd948';\nconst colors = {\n    '@trezor/connect': `color: ${blue}; background: #000;`,\n    '@trezor/connect-web': `color: ${blue}; background: #000;`,\n    '@trezor/connect-webextension': `color: ${blue}; background: #000;`,\n    IFrame: `color: ${orange}; background: #000;`,\n    Core: `color: ${orange}; background: #000;`,\n    DeviceList: `color: ${green}; background: #000;`,\n    Device: `color: ${green}; background: #000;`,\n    DeviceCommands: `color: ${green}; background: #000;`,\n    '@trezor/transport': `color: ${green}; background: #000;`,\n    InteractionTimeout: `color: ${green}; background: #000;`,\n    '@trezor/connect-popup': `color: ${yellow}; background: #000;`,\n};\nconst MAX_ENTRIES = 100;\nclass Log {\n    constructor(prefix, enabled, logWriter) {\n        this.prefix = prefix;\n        this.enabled = enabled;\n        this.messages = [];\n        this.css = typeof window !== 'undefined' && colors[prefix] ? colors[prefix] : '';\n        if (logWriter) {\n            this.logWriter = logWriter;\n        }\n    }\n    addMessage({ level, prefix, timestamp }, ...args) {\n        const message = {\n            level,\n            prefix,\n            css: this.css,\n            message: args,\n            timestamp: timestamp || Date.now(),\n        };\n        this.messages.push(message);\n        if (this.logWriter) {\n            try {\n                this.logWriter.add(message);\n            }\n            catch (err) {\n                console.error('There was an error adding log message', err, message);\n            }\n        }\n        if (this.messages.length > MAX_ENTRIES) {\n            this.messages.shift();\n        }\n    }\n    setWriter(logWriter) {\n        this.logWriter = logWriter;\n    }\n    log(...args) {\n        this.addMessage({ level: 'log', prefix: this.prefix }, ...args);\n        if (this.enabled) {\n            console.log(`%c${this.prefix}`, this.css, ...args);\n        }\n    }\n    error(...args) {\n        this.addMessage({ level: 'error', prefix: this.prefix }, ...args);\n        if (this.enabled) {\n            console.error(`%c${this.prefix}`, this.css, ...args);\n        }\n    }\n    warn(...args) {\n        this.addMessage({ level: 'warn', prefix: this.prefix }, ...args);\n        if (this.enabled) {\n            console.warn(`%c${this.prefix}`, this.css, ...args);\n        }\n    }\n    debug(...args) {\n        this.addMessage({ level: 'debug', prefix: this.prefix }, ...args);\n        if (this.enabled) {\n            if (this.css) {\n                console.log(`%c${this.prefix}`, this.css, ...args);\n            }\n            else {\n                console.log(this.prefix, ...args);\n            }\n        }\n    }\n}\nexports.Log = Log;\nconst _logs = {};\nlet writer;\nconst initLog = (prefix, enabled, logWriter) => {\n    const instanceWriter = logWriter || writer;\n    const instance = new Log(prefix, !!enabled, instanceWriter);\n    _logs[prefix] = instance;\n    return instance;\n};\nexports.initLog = initLog;\nconst setLogWriter = (logWriterFactory) => {\n    Object.keys(_logs).forEach(key => {\n        writer = logWriterFactory();\n        if (writer) {\n            _logs[key].setWriter(writer);\n            const { messages } = _logs[key];\n            messages.forEach(message => {\n                writer === null || writer === void 0 ? void 0 : writer.add(message);\n            });\n        }\n    });\n};\nexports.setLogWriter = setLogWriter;\nconst enableLog = (enabled) => {\n    Object.keys(_logs).forEach(key => {\n        _logs[key].enabled = !!enabled;\n    });\n};\nexports.enableLog = enableLog;\nconst enableLogByPrefix = (prefix, enabled) => {\n    if (_logs[prefix]) {\n        _logs[prefix].enabled = enabled;\n    }\n};\nexports.enableLogByPrefix = enableLogByPrefix;\nconst getLog = () => {\n    let logs = [];\n    Object.keys(_logs).forEach(key => {\n        logs = logs.concat(_logs[key].messages);\n    });\n    logs.sort((a, b) => a.timestamp - b.timestamp);\n    return logs;\n};\nexports.getLog = getLog;\n//# sourceMappingURL=debug.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci9jb25uZWN0L2xpYi91dGlscy9kZWJ1Zy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxjQUFjLEdBQUcseUJBQXlCLEdBQUcsaUJBQWlCLEdBQUcsb0JBQW9CLEdBQUcsZUFBZSxHQUFHLFdBQVc7QUFDckg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlDQUFpQyxPQUFPLGlCQUFpQjtBQUN6RCxxQ0FBcUMsT0FBTyxpQkFBaUI7QUFDN0QsOENBQThDLE9BQU8saUJBQWlCO0FBQ3RFLHNCQUFzQixTQUFTLGlCQUFpQjtBQUNoRCxvQkFBb0IsU0FBUyxpQkFBaUI7QUFDOUMsMEJBQTBCLFFBQVEsaUJBQWlCO0FBQ25ELHNCQUFzQixRQUFRLGlCQUFpQjtBQUMvQyw4QkFBOEIsUUFBUSxpQkFBaUI7QUFDdkQsbUNBQW1DLFFBQVEsaUJBQWlCO0FBQzVELGtDQUFrQyxRQUFRLGlCQUFpQjtBQUMzRCx1Q0FBdUMsU0FBUyxpQkFBaUI7QUFDakU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLDBCQUEwQjtBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEIsbUNBQW1DO0FBQzdEO0FBQ0EsNkJBQTZCLFlBQVk7QUFDekM7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLHFDQUFxQztBQUMvRDtBQUNBLCtCQUErQixZQUFZO0FBQzNDO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQixvQ0FBb0M7QUFDOUQ7QUFDQSw4QkFBOEIsWUFBWTtBQUMxQztBQUNBO0FBQ0E7QUFDQSwwQkFBMEIscUNBQXFDO0FBQy9EO0FBQ0E7QUFDQSxpQ0FBaUMsWUFBWTtBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsV0FBVztBQUMvQjtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0EsS0FBSztBQUNMO0FBQ0Esb0JBQW9CO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLGNBQWM7QUFDZCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHRyZXpvci9jb25uZWN0L2xpYi91dGlscy9kZWJ1Zy5qcz9lYTY0Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5nZXRMb2cgPSBleHBvcnRzLmVuYWJsZUxvZ0J5UHJlZml4ID0gZXhwb3J0cy5lbmFibGVMb2cgPSBleHBvcnRzLnNldExvZ1dyaXRlciA9IGV4cG9ydHMuaW5pdExvZyA9IGV4cG9ydHMuTG9nID0gdm9pZCAwO1xuY29uc3QgZ3JlZW4gPSAnI2JhZGE1NSc7XG5jb25zdCBibHVlID0gJyMyMGFiZDgnO1xuY29uc3Qgb3JhbmdlID0gJyNmNGE3NDQnO1xuY29uc3QgeWVsbG93ID0gJyNmYmQ5NDgnO1xuY29uc3QgY29sb3JzID0ge1xuICAgICdAdHJlem9yL2Nvbm5lY3QnOiBgY29sb3I6ICR7Ymx1ZX07IGJhY2tncm91bmQ6ICMwMDA7YCxcbiAgICAnQHRyZXpvci9jb25uZWN0LXdlYic6IGBjb2xvcjogJHtibHVlfTsgYmFja2dyb3VuZDogIzAwMDtgLFxuICAgICdAdHJlem9yL2Nvbm5lY3Qtd2ViZXh0ZW5zaW9uJzogYGNvbG9yOiAke2JsdWV9OyBiYWNrZ3JvdW5kOiAjMDAwO2AsXG4gICAgSUZyYW1lOiBgY29sb3I6ICR7b3JhbmdlfTsgYmFja2dyb3VuZDogIzAwMDtgLFxuICAgIENvcmU6IGBjb2xvcjogJHtvcmFuZ2V9OyBiYWNrZ3JvdW5kOiAjMDAwO2AsXG4gICAgRGV2aWNlTGlzdDogYGNvbG9yOiAke2dyZWVufTsgYmFja2dyb3VuZDogIzAwMDtgLFxuICAgIERldmljZTogYGNvbG9yOiAke2dyZWVufTsgYmFja2dyb3VuZDogIzAwMDtgLFxuICAgIERldmljZUNvbW1hbmRzOiBgY29sb3I6ICR7Z3JlZW59OyBiYWNrZ3JvdW5kOiAjMDAwO2AsXG4gICAgJ0B0cmV6b3IvdHJhbnNwb3J0JzogYGNvbG9yOiAke2dyZWVufTsgYmFja2dyb3VuZDogIzAwMDtgLFxuICAgIEludGVyYWN0aW9uVGltZW91dDogYGNvbG9yOiAke2dyZWVufTsgYmFja2dyb3VuZDogIzAwMDtgLFxuICAgICdAdHJlem9yL2Nvbm5lY3QtcG9wdXAnOiBgY29sb3I6ICR7eWVsbG93fTsgYmFja2dyb3VuZDogIzAwMDtgLFxufTtcbmNvbnN0IE1BWF9FTlRSSUVTID0gMTAwO1xuY2xhc3MgTG9nIHtcbiAgICBjb25zdHJ1Y3RvcihwcmVmaXgsIGVuYWJsZWQsIGxvZ1dyaXRlcikge1xuICAgICAgICB0aGlzLnByZWZpeCA9IHByZWZpeDtcbiAgICAgICAgdGhpcy5lbmFibGVkID0gZW5hYmxlZDtcbiAgICAgICAgdGhpcy5tZXNzYWdlcyA9IFtdO1xuICAgICAgICB0aGlzLmNzcyA9IHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnICYmIGNvbG9yc1twcmVmaXhdID8gY29sb3JzW3ByZWZpeF0gOiAnJztcbiAgICAgICAgaWYgKGxvZ1dyaXRlcikge1xuICAgICAgICAgICAgdGhpcy5sb2dXcml0ZXIgPSBsb2dXcml0ZXI7XG4gICAgICAgIH1cbiAgICB9XG4gICAgYWRkTWVzc2FnZSh7IGxldmVsLCBwcmVmaXgsIHRpbWVzdGFtcCB9LCAuLi5hcmdzKSB7XG4gICAgICAgIGNvbnN0IG1lc3NhZ2UgPSB7XG4gICAgICAgICAgICBsZXZlbCxcbiAgICAgICAgICAgIHByZWZpeCxcbiAgICAgICAgICAgIGNzczogdGhpcy5jc3MsXG4gICAgICAgICAgICBtZXNzYWdlOiBhcmdzLFxuICAgICAgICAgICAgdGltZXN0YW1wOiB0aW1lc3RhbXAgfHwgRGF0ZS5ub3coKSxcbiAgICAgICAgfTtcbiAgICAgICAgdGhpcy5tZXNzYWdlcy5wdXNoKG1lc3NhZ2UpO1xuICAgICAgICBpZiAodGhpcy5sb2dXcml0ZXIpIHtcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgdGhpcy5sb2dXcml0ZXIuYWRkKG1lc3NhZ2UpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY2F0Y2ggKGVycikge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ1RoZXJlIHdhcyBhbiBlcnJvciBhZGRpbmcgbG9nIG1lc3NhZ2UnLCBlcnIsIG1lc3NhZ2UpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGlmICh0aGlzLm1lc3NhZ2VzLmxlbmd0aCA+IE1BWF9FTlRSSUVTKSB7XG4gICAgICAgICAgICB0aGlzLm1lc3NhZ2VzLnNoaWZ0KCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgc2V0V3JpdGVyKGxvZ1dyaXRlcikge1xuICAgICAgICB0aGlzLmxvZ1dyaXRlciA9IGxvZ1dyaXRlcjtcbiAgICB9XG4gICAgbG9nKC4uLmFyZ3MpIHtcbiAgICAgICAgdGhpcy5hZGRNZXNzYWdlKHsgbGV2ZWw6ICdsb2cnLCBwcmVmaXg6IHRoaXMucHJlZml4IH0sIC4uLmFyZ3MpO1xuICAgICAgICBpZiAodGhpcy5lbmFibGVkKSB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhgJWMke3RoaXMucHJlZml4fWAsIHRoaXMuY3NzLCAuLi5hcmdzKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBlcnJvciguLi5hcmdzKSB7XG4gICAgICAgIHRoaXMuYWRkTWVzc2FnZSh7IGxldmVsOiAnZXJyb3InLCBwcmVmaXg6IHRoaXMucHJlZml4IH0sIC4uLmFyZ3MpO1xuICAgICAgICBpZiAodGhpcy5lbmFibGVkKSB7XG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKGAlYyR7dGhpcy5wcmVmaXh9YCwgdGhpcy5jc3MsIC4uLmFyZ3MpO1xuICAgICAgICB9XG4gICAgfVxuICAgIHdhcm4oLi4uYXJncykge1xuICAgICAgICB0aGlzLmFkZE1lc3NhZ2UoeyBsZXZlbDogJ3dhcm4nLCBwcmVmaXg6IHRoaXMucHJlZml4IH0sIC4uLmFyZ3MpO1xuICAgICAgICBpZiAodGhpcy5lbmFibGVkKSB7XG4gICAgICAgICAgICBjb25zb2xlLndhcm4oYCVjJHt0aGlzLnByZWZpeH1gLCB0aGlzLmNzcywgLi4uYXJncyk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZGVidWcoLi4uYXJncykge1xuICAgICAgICB0aGlzLmFkZE1lc3NhZ2UoeyBsZXZlbDogJ2RlYnVnJywgcHJlZml4OiB0aGlzLnByZWZpeCB9LCAuLi5hcmdzKTtcbiAgICAgICAgaWYgKHRoaXMuZW5hYmxlZCkge1xuICAgICAgICAgICAgaWYgKHRoaXMuY3NzKSB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coYCVjJHt0aGlzLnByZWZpeH1gLCB0aGlzLmNzcywgLi4uYXJncyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyh0aGlzLnByZWZpeCwgLi4uYXJncyk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59XG5leHBvcnRzLkxvZyA9IExvZztcbmNvbnN0IF9sb2dzID0ge307XG5sZXQgd3JpdGVyO1xuY29uc3QgaW5pdExvZyA9IChwcmVmaXgsIGVuYWJsZWQsIGxvZ1dyaXRlcikgPT4ge1xuICAgIGNvbnN0IGluc3RhbmNlV3JpdGVyID0gbG9nV3JpdGVyIHx8IHdyaXRlcjtcbiAgICBjb25zdCBpbnN0YW5jZSA9IG5ldyBMb2cocHJlZml4LCAhIWVuYWJsZWQsIGluc3RhbmNlV3JpdGVyKTtcbiAgICBfbG9nc1twcmVmaXhdID0gaW5zdGFuY2U7XG4gICAgcmV0dXJuIGluc3RhbmNlO1xufTtcbmV4cG9ydHMuaW5pdExvZyA9IGluaXRMb2c7XG5jb25zdCBzZXRMb2dXcml0ZXIgPSAobG9nV3JpdGVyRmFjdG9yeSkgPT4ge1xuICAgIE9iamVjdC5rZXlzKF9sb2dzKS5mb3JFYWNoKGtleSA9PiB7XG4gICAgICAgIHdyaXRlciA9IGxvZ1dyaXRlckZhY3RvcnkoKTtcbiAgICAgICAgaWYgKHdyaXRlcikge1xuICAgICAgICAgICAgX2xvZ3Nba2V5XS5zZXRXcml0ZXIod3JpdGVyKTtcbiAgICAgICAgICAgIGNvbnN0IHsgbWVzc2FnZXMgfSA9IF9sb2dzW2tleV07XG4gICAgICAgICAgICBtZXNzYWdlcy5mb3JFYWNoKG1lc3NhZ2UgPT4ge1xuICAgICAgICAgICAgICAgIHdyaXRlciA9PT0gbnVsbCB8fCB3cml0ZXIgPT09IHZvaWQgMCA/IHZvaWQgMCA6IHdyaXRlci5hZGQobWVzc2FnZSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgIH0pO1xufTtcbmV4cG9ydHMuc2V0TG9nV3JpdGVyID0gc2V0TG9nV3JpdGVyO1xuY29uc3QgZW5hYmxlTG9nID0gKGVuYWJsZWQpID0+IHtcbiAgICBPYmplY3Qua2V5cyhfbG9ncykuZm9yRWFjaChrZXkgPT4ge1xuICAgICAgICBfbG9nc1trZXldLmVuYWJsZWQgPSAhIWVuYWJsZWQ7XG4gICAgfSk7XG59O1xuZXhwb3J0cy5lbmFibGVMb2cgPSBlbmFibGVMb2c7XG5jb25zdCBlbmFibGVMb2dCeVByZWZpeCA9IChwcmVmaXgsIGVuYWJsZWQpID0+IHtcbiAgICBpZiAoX2xvZ3NbcHJlZml4XSkge1xuICAgICAgICBfbG9nc1twcmVmaXhdLmVuYWJsZWQgPSBlbmFibGVkO1xuICAgIH1cbn07XG5leHBvcnRzLmVuYWJsZUxvZ0J5UHJlZml4ID0gZW5hYmxlTG9nQnlQcmVmaXg7XG5jb25zdCBnZXRMb2cgPSAoKSA9PiB7XG4gICAgbGV0IGxvZ3MgPSBbXTtcbiAgICBPYmplY3Qua2V5cyhfbG9ncykuZm9yRWFjaChrZXkgPT4ge1xuICAgICAgICBsb2dzID0gbG9ncy5jb25jYXQoX2xvZ3Nba2V5XS5tZXNzYWdlcyk7XG4gICAgfSk7XG4gICAgbG9ncy5zb3J0KChhLCBiKSA9PiBhLnRpbWVzdGFtcCAtIGIudGltZXN0YW1wKTtcbiAgICByZXR1cm4gbG9ncztcbn07XG5leHBvcnRzLmdldExvZyA9IGdldExvZztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRlYnVnLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@trezor/connect/lib/utils/debug.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/connect/lib/utils/urlUtils.js":
/*!************************************************************!*\
  !*** ./node_modules/@trezor/connect/lib/utils/urlUtils.js ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getOnionDomain = exports.getHost = exports.getOrigin = void 0;\nconst urlToOnion_1 = __webpack_require__(/*! @trezor/utils/lib/urlToOnion */ \"./node_modules/@trezor/utils/lib/urlToOnion.js\");\nconst getOrigin = (url) => {\n    var _a;\n    if (typeof url !== 'string')\n        return 'unknown';\n    if (url.indexOf('file://') === 0)\n        return 'file://';\n    const [origin] = (_a = url.match(/^https?:\\/\\/[^/]+/)) !== null && _a !== void 0 ? _a : [];\n    return origin !== null && origin !== void 0 ? origin : 'unknown';\n};\nexports.getOrigin = getOrigin;\nconst getHost = (url) => {\n    var _a;\n    if (typeof url !== 'string')\n        return;\n    const [, , uri] = (_a = url.match(/^(https?):\\/\\/([^:/]+)?/i)) !== null && _a !== void 0 ? _a : [];\n    if (uri) {\n        const parts = uri.split('.');\n        return parts.length > 2\n            ?\n                parts.slice(parts.length - 2, parts.length).join('.')\n            : uri;\n    }\n};\nexports.getHost = getHost;\nconst getOnionDomain = (url, dict) => {\n    var _a;\n    if (Array.isArray(url))\n        return url.map(u => { var _a; return (_a = (0, urlToOnion_1.urlToOnion)(u, dict)) !== null && _a !== void 0 ? _a : u; });\n    if (typeof url === 'string')\n        return (_a = (0, urlToOnion_1.urlToOnion)(url, dict)) !== null && _a !== void 0 ? _a : url;\n    return url;\n};\nexports.getOnionDomain = getOnionDomain;\n//# sourceMappingURL=urlUtils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci9jb25uZWN0L2xpYi91dGlscy91cmxVdGlscy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxzQkFBc0IsR0FBRyxlQUFlLEdBQUcsaUJBQWlCO0FBQzVELHFCQUFxQixtQkFBTyxDQUFDLG9GQUE4QjtBQUMzRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0EsOEJBQThCLFFBQVEseUZBQXlGO0FBQy9IO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCO0FBQ3RCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AdHJlem9yL2Nvbm5lY3QvbGliL3V0aWxzL3VybFV0aWxzLmpzPzc3YjIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmdldE9uaW9uRG9tYWluID0gZXhwb3J0cy5nZXRIb3N0ID0gZXhwb3J0cy5nZXRPcmlnaW4gPSB2b2lkIDA7XG5jb25zdCB1cmxUb09uaW9uXzEgPSByZXF1aXJlKFwiQHRyZXpvci91dGlscy9saWIvdXJsVG9PbmlvblwiKTtcbmNvbnN0IGdldE9yaWdpbiA9ICh1cmwpID0+IHtcbiAgICB2YXIgX2E7XG4gICAgaWYgKHR5cGVvZiB1cmwgIT09ICdzdHJpbmcnKVxuICAgICAgICByZXR1cm4gJ3Vua25vd24nO1xuICAgIGlmICh1cmwuaW5kZXhPZignZmlsZTovLycpID09PSAwKVxuICAgICAgICByZXR1cm4gJ2ZpbGU6Ly8nO1xuICAgIGNvbnN0IFtvcmlnaW5dID0gKF9hID0gdXJsLm1hdGNoKC9eaHR0cHM/OlxcL1xcL1teL10rLykpICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IFtdO1xuICAgIHJldHVybiBvcmlnaW4gIT09IG51bGwgJiYgb3JpZ2luICE9PSB2b2lkIDAgPyBvcmlnaW4gOiAndW5rbm93bic7XG59O1xuZXhwb3J0cy5nZXRPcmlnaW4gPSBnZXRPcmlnaW47XG5jb25zdCBnZXRIb3N0ID0gKHVybCkgPT4ge1xuICAgIHZhciBfYTtcbiAgICBpZiAodHlwZW9mIHVybCAhPT0gJ3N0cmluZycpXG4gICAgICAgIHJldHVybjtcbiAgICBjb25zdCBbLCAsIHVyaV0gPSAoX2EgPSB1cmwubWF0Y2goL14oaHR0cHM/KTpcXC9cXC8oW146L10rKT8vaSkpICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IFtdO1xuICAgIGlmICh1cmkpIHtcbiAgICAgICAgY29uc3QgcGFydHMgPSB1cmkuc3BsaXQoJy4nKTtcbiAgICAgICAgcmV0dXJuIHBhcnRzLmxlbmd0aCA+IDJcbiAgICAgICAgICAgID9cbiAgICAgICAgICAgICAgICBwYXJ0cy5zbGljZShwYXJ0cy5sZW5ndGggLSAyLCBwYXJ0cy5sZW5ndGgpLmpvaW4oJy4nKVxuICAgICAgICAgICAgOiB1cmk7XG4gICAgfVxufTtcbmV4cG9ydHMuZ2V0SG9zdCA9IGdldEhvc3Q7XG5jb25zdCBnZXRPbmlvbkRvbWFpbiA9ICh1cmwsIGRpY3QpID0+IHtcbiAgICB2YXIgX2E7XG4gICAgaWYgKEFycmF5LmlzQXJyYXkodXJsKSlcbiAgICAgICAgcmV0dXJuIHVybC5tYXAodSA9PiB7IHZhciBfYTsgcmV0dXJuIChfYSA9ICgwLCB1cmxUb09uaW9uXzEudXJsVG9PbmlvbikodSwgZGljdCkpICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IHU7IH0pO1xuICAgIGlmICh0eXBlb2YgdXJsID09PSAnc3RyaW5nJylcbiAgICAgICAgcmV0dXJuIChfYSA9ICgwLCB1cmxUb09uaW9uXzEudXJsVG9PbmlvbikodXJsLCBkaWN0KSkgIT09IG51bGwgJiYgX2EgIT09IHZvaWQgMCA/IF9hIDogdXJsO1xuICAgIHJldHVybiB1cmw7XG59O1xuZXhwb3J0cy5nZXRPbmlvbkRvbWFpbiA9IGdldE9uaW9uRG9tYWluO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dXJsVXRpbHMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@trezor/connect/lib/utils/urlUtils.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/protobuf/lib/messages-schema.js":
/*!**************************************************************!*\
  !*** ./node_modules/@trezor/protobuf/lib/messages-schema.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.TxRequest = exports.TxRequestSerializedType = exports.TxRequestDetailsType = exports.RequestType = exports.EnumEnum_RequestType = exports.Enum_RequestType = exports.SignTx = exports.CoinJoinRequest = exports.VerifyMessage = exports.MessageSignature = exports.SignMessage = exports.OwnershipId = exports.GetOwnershipId = exports.Address = exports.GetAddress = exports.PublicKey = exports.GetPublicKey = exports.MultisigRedeemScriptType = exports.HDNodePathType = exports.HDNodeType = exports.EnumAmountUnit = exports.AmountUnit = exports.EnumDecredStakingSpendType = exports.DecredStakingSpendType = exports.OutputScriptType = exports.EnumEnum_OutputScriptType = exports.Enum_OutputScriptType = exports.InputScriptType = exports.EnumEnum_InputScriptType = exports.Enum_InputScriptType = exports.BinanceSignedTx = exports.BinanceCancelMsg = exports.BinanceOrderMsg = exports.EnumBinanceTimeInForce = exports.BinanceTimeInForce = exports.EnumBinanceOrderSide = exports.BinanceOrderSide = exports.EnumBinanceOrderType = exports.BinanceOrderType = exports.BinanceTransferMsg = exports.BinanceInputOutput = exports.BinanceCoin = exports.BinanceTxRequest = exports.BinanceSignTx = exports.BinancePublicKey = exports.BinanceGetPublicKey = exports.BinanceAddress = exports.BinanceGetAddress = exports.EnumDeviceModelInternal = exports.DeviceModelInternal = void 0;\nexports.CardanoTxAuxiliaryDataSupplementType = exports.EnumCardanoPoolRelayType = exports.CardanoPoolRelayType = exports.EnumCardanoCertificateType = exports.CardanoCertificateType = exports.EnumCardanoTxOutputSerializationFormat = exports.CardanoTxOutputSerializationFormat = exports.EnumCardanoNativeScriptHashDisplayFormat = exports.CardanoNativeScriptHashDisplayFormat = exports.EnumCardanoNativeScriptType = exports.CardanoNativeScriptType = exports.EnumCardanoAddressType = exports.CardanoAddressType = exports.EnumCardanoDerivationType = exports.CardanoDerivationType = exports.SelfTest = exports.FirmwareUpload = exports.FirmwareRequest = exports.FirmwareErase = exports.AuthorizeCoinJoin = exports.OwnershipProof = exports.GetOwnershipProof = exports.TxAckPrevExtraData = exports.TxAckPrevExtraDataWrapper = exports.TxAckPrevOutput = exports.TxAckPrevOutputWrapper = exports.TxAckPrevInput = exports.TxAckPrevInputWrapper = exports.TxAckPrevMeta = exports.TxAckOutput = exports.TxAckOutputWrapper = exports.TxAckInput = exports.TxAckInputWrapper = exports.TxAck = exports.TxAckResponse = exports.TxAckPaymentRequest = exports.PaymentRequestMemo = exports.CoinPurchaseMemo = exports.RefundMemo = exports.TextMemo = exports.PrevOutput = exports.PrevInput = exports.PrevTx = exports.TxOutput = exports.TxOutputType = exports.ChangeOutputScriptType = exports.TxOutputBinType = exports.TxInput = exports.TxInputType = exports.InternalInputScriptType = void 0;\nexports.ButtonRequestType = exports.EnumEnum_ButtonRequestType = exports.Enum_ButtonRequestType = exports.Failure = exports.EnumFailureType = exports.FailureType = exports.Success = exports.CardanoSignTxFinished = exports.CardanoTxBodyHash = exports.CardanoTxHostAck = exports.CardanoTxWitnessResponse = exports.CardanoTxWitnessRequest = exports.CardanoTxAuxiliaryDataSupplement = exports.CardanoTxItemAck = exports.CardanoTxReferenceInput = exports.CardanoTxRequiredSigner = exports.CardanoTxCollateralInput = exports.CardanoTxMint = exports.CardanoTxAuxiliaryData = exports.CardanoCVoteRegistrationParametersType = exports.CardanoCVoteRegistrationDelegation = exports.CardanoTxWithdrawal = exports.CardanoTxCertificate = exports.CardanoPoolParametersType = exports.CardanoPoolMetadataType = exports.CardanoPoolRelayParameters = exports.CardanoPoolOwner = exports.CardanoTxReferenceScriptChunk = exports.CardanoTxInlineDatumChunk = exports.CardanoToken = exports.CardanoAssetGroup = exports.CardanoTxOutput = exports.CardanoTxInput = exports.CardanoSignTxInit = exports.CardanoPublicKey = exports.CardanoGetPublicKey = exports.CardanoAddress = exports.CardanoGetAddress = exports.CardanoAddressParametersType = exports.CardanoNativeScriptHash = exports.CardanoGetNativeScriptHash = exports.CardanoNativeScript = exports.CardanoBlockchainPointerType = exports.EnumCardanoTxWitnessType = exports.CardanoTxWitnessType = exports.EnumCardanoTxSigningMode = exports.CardanoTxSigningMode = exports.EnumCardanoCVoteRegistrationFormat = exports.CardanoCVoteRegistrationFormat = exports.EnumCardanoTxAuxiliaryDataSupplementType = void 0;\nexports.EosTxActionAck = exports.EosActionUnknown = exports.EosActionNewAccount = exports.EosActionUnlinkAuth = exports.EosActionLinkAuth = exports.EosActionDeleteAuth = exports.EosActionUpdateAuth = exports.EosActionVoteProducer = exports.EosActionSellRam = exports.EosActionBuyRamBytes = exports.EosActionBuyRam = exports.EosActionRefund = exports.EosActionUndelegate = exports.EosActionDelegate = exports.EosActionTransfer = exports.EosActionCommon = exports.EosAuthorization = exports.EosAuthorizationWait = exports.EosAuthorizationAccount = exports.EosAuthorizationKey = exports.EosPermissionLevel = exports.EosAsset = exports.EosTxActionRequest = exports.EosSignTx = exports.EosTxHeader = exports.EosPublicKey = exports.EosGetPublicKey = exports.DebugLinkResetDebugEvents = exports.EnumDebugPhysicalButton = exports.DebugPhysicalButton = exports.EnumDebugButton = exports.DebugButton = exports.ECDHSessionKey = exports.GetECDHSessionKey = exports.SignedIdentity = exports.SignIdentity = exports.IdentityType = exports.CipheredKeyValue = exports.CipherKeyValue = exports.Deprecated_PassphraseStateAck = exports.Deprecated_PassphraseStateRequest = exports.PassphraseAck = exports.PassphraseRequest = exports.PinMatrixAck = exports.PinMatrixRequest = exports.PinMatrixRequestType = exports.EnumEnum_PinMatrixRequestType = exports.Enum_PinMatrixRequestType = exports.ButtonAck = exports.ButtonRequest = void 0;\nexports.ChangePin = exports.ApplyFlags = exports.ApplySettings = exports.EndSession = exports.SetBusy = exports.LockDevice = exports.Features = exports.Capability = exports.EnumEnum_Capability = exports.Enum_Capability = exports.GetFeatures = exports.Initialize = exports.HomescreenFormat = exports.EnumEnum_HomescreenFormat = exports.Enum_HomescreenFormat = exports.SafetyCheckLevel = exports.EnumEnum_SafetyCheckLevel = exports.Enum_SafetyCheckLevel = exports.BackupType = exports.EnumEnum_BackupType = exports.Enum_BackupType = exports.EthereumTypedDataSignature = exports.EthereumSignTypedHash = exports.EthereumVerifyMessage = exports.EthereumMessageSignature = exports.EthereumSignMessage = exports.EthereumTxAck = exports.EthereumTxRequest = exports.EthereumSignTxEIP1559 = exports.EthereumAccessList = exports.EthereumSignTx = exports.EthereumAddress = exports.EthereumGetAddress = exports.EthereumPublicKey = exports.EthereumGetPublicKey = exports.EthereumTypedDataValueAck = exports.EthereumTypedDataValueRequest = exports.EthereumTypedDataStructAck = exports.EthereumStructMember = exports.EthereumFieldType = exports.EnumEthereumDataType = exports.EthereumDataType = exports.EthereumTypedDataStructRequest = exports.EthereumSignTypedData = exports.EthereumDefinitions = exports.EthereumTokenInfo = exports.EthereumNetworkInfo = exports.EnumEthereumDefinitionType = exports.EthereumDefinitionType = exports.EosSignedTx = void 0;\nexports.EnumNEMMosaicLevy = exports.NEMMosaicLevy = exports.NEMProvisionNamespace = exports.NEMTransfer = exports.NEMMosaic = exports.NEMTransactionCommon = exports.NEMAddress = exports.NEMGetAddress = exports.EnumMoneroNetworkType = exports.MoneroNetworkType = exports.UnlockBootloader = exports.ShowDeviceTutorial = exports.UnlockedPathRequest = exports.UnlockPath = exports.Nonce = exports.GetNonce = exports.RebootToBootloader = exports.EnumBootCommand = exports.BootCommand = exports.CancelAuthorization = exports.PreauthorizedRequest = exports.DoPreauthorized = exports.NextU2FCounter = exports.GetNextU2FCounter = exports.SetU2FCounter = exports.WordAck = exports.WordRequest = exports.WordRequestType = exports.EnumEnum_WordRequestType = exports.Enum_WordRequestType = exports.RecoveryDevice = exports.EnumRecoveryDeviceType = exports.RecoveryDeviceType = exports.EntropyAck = exports.EntropyRequest = exports.BackupDevice = exports.ResetDevice = exports.WipeDevice = exports.AuthenticityProof = exports.AuthenticateDevice = exports.FirmwareHash = exports.GetFirmwareHash = exports.Entropy = exports.GetEntropy = exports.Cancel = exports.Ping = exports.SdProtect = exports.EnumSdProtectOperationType = exports.SdProtectOperationType = exports.ChangeWipeCode = void 0;\nexports.StellarAllowTrustOp = exports.StellarChangeTrustOp = exports.StellarSetOptionsOp = exports.EnumStellarSignerType = exports.StellarSignerType = exports.StellarCreatePassiveSellOfferOp = exports.StellarManageBuyOfferOp = exports.StellarManageSellOfferOp = exports.StellarPathPaymentStrictSendOp = exports.StellarPathPaymentStrictReceiveOp = exports.StellarCreateAccountOp = exports.StellarPaymentOp = exports.StellarTxOpRequest = exports.StellarSignTx = exports.EnumStellarMemoType = exports.StellarMemoType = exports.StellarAddress = exports.StellarGetAddress = exports.StellarAsset = exports.EnumStellarAssetType = exports.StellarAssetType = exports.SolanaTxSignature = exports.SolanaSignTx = exports.SolanaTxAdditionalInfo = exports.SolanaTxTokenAccountInfo = exports.SolanaAddress = exports.SolanaGetAddress = exports.SolanaPublicKey = exports.SolanaGetPublicKey = exports.RippleSignedTx = exports.RippleSignTx = exports.RipplePayment = exports.RippleAddress = exports.RippleGetAddress = exports.NEMDecryptedMessage = exports.NEMDecryptMessage = exports.NEMSignedTx = exports.NEMSignTx = exports.NEMImportanceTransfer = exports.EnumNEMImportanceTransferMode = exports.NEMImportanceTransferMode = exports.NEMAggregateModification = exports.NEMCosignatoryModification = exports.EnumNEMModificationType = exports.NEMModificationType = exports.NEMMosaicSupplyChange = exports.EnumNEMSupplyChangeType = exports.NEMSupplyChangeType = exports.NEMMosaicCreation = exports.NEMMosaicDefinition = void 0;\nexports.MessageType = exports.experimental_field = exports.experimental_message = exports.TezosSignedTx = exports.TezosSignTx = exports.TezosBallotOp = exports.EnumTezosBallotType = exports.TezosBallotType = exports.TezosProposalOp = exports.TezosDelegationOp = exports.TezosOriginationOp = exports.TezosTransactionOp = exports.TezosParametersManager = exports.TezosManagerTransfer = exports.TezosRevealOp = exports.TezosContractID = exports.EnumTezosContractType = exports.TezosContractType = exports.TezosPublicKey = exports.TezosGetPublicKey = exports.TezosAddress = exports.TezosGetAddress = exports.StellarSignedTx = exports.StellarBumpSequenceOp = exports.StellarManageDataOp = exports.StellarAccountMergeOp = void 0;\nconst schema_utils_1 = __webpack_require__(/*! @trezor/schema-utils */ \"./node_modules/@trezor/schema-utils/lib/index.js\");\nvar DeviceModelInternal;\n(function (DeviceModelInternal) {\n    DeviceModelInternal[\"T1B1\"] = \"T1B1\";\n    DeviceModelInternal[\"T2T1\"] = \"T2T1\";\n    DeviceModelInternal[\"T2B1\"] = \"T2B1\";\n})(DeviceModelInternal || (exports.DeviceModelInternal = DeviceModelInternal = {}));\nexports.EnumDeviceModelInternal = schema_utils_1.Type.Enum(DeviceModelInternal);\nexports.BinanceGetAddress = schema_utils_1.Type.Object({\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    show_display: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n});\nexports.BinanceAddress = schema_utils_1.Type.Object({\n    address: schema_utils_1.Type.String(),\n});\nexports.BinanceGetPublicKey = schema_utils_1.Type.Object({\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    show_display: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n});\nexports.BinancePublicKey = schema_utils_1.Type.Object({\n    public_key: schema_utils_1.Type.String(),\n});\nexports.BinanceSignTx = schema_utils_1.Type.Object({\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    msg_count: schema_utils_1.Type.Number(),\n    account_number: schema_utils_1.Type.Number(),\n    chain_id: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    memo: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    sequence: schema_utils_1.Type.Number(),\n    source: schema_utils_1.Type.Number(),\n    chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n});\nexports.BinanceTxRequest = schema_utils_1.Type.Object({});\nexports.BinanceCoin = schema_utils_1.Type.Object({\n    amount: schema_utils_1.Type.Uint(),\n    denom: schema_utils_1.Type.String(),\n});\nexports.BinanceInputOutput = schema_utils_1.Type.Object({\n    address: schema_utils_1.Type.String(),\n    coins: schema_utils_1.Type.Array(exports.BinanceCoin),\n});\nexports.BinanceTransferMsg = schema_utils_1.Type.Object({\n    inputs: schema_utils_1.Type.Array(exports.BinanceInputOutput),\n    outputs: schema_utils_1.Type.Array(exports.BinanceInputOutput),\n    chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n});\nvar BinanceOrderType;\n(function (BinanceOrderType) {\n    BinanceOrderType[BinanceOrderType[\"OT_UNKNOWN\"] = 0] = \"OT_UNKNOWN\";\n    BinanceOrderType[BinanceOrderType[\"MARKET\"] = 1] = \"MARKET\";\n    BinanceOrderType[BinanceOrderType[\"LIMIT\"] = 2] = \"LIMIT\";\n    BinanceOrderType[BinanceOrderType[\"OT_RESERVED\"] = 3] = \"OT_RESERVED\";\n})(BinanceOrderType || (exports.BinanceOrderType = BinanceOrderType = {}));\nexports.EnumBinanceOrderType = schema_utils_1.Type.Enum(BinanceOrderType);\nvar BinanceOrderSide;\n(function (BinanceOrderSide) {\n    BinanceOrderSide[BinanceOrderSide[\"SIDE_UNKNOWN\"] = 0] = \"SIDE_UNKNOWN\";\n    BinanceOrderSide[BinanceOrderSide[\"BUY\"] = 1] = \"BUY\";\n    BinanceOrderSide[BinanceOrderSide[\"SELL\"] = 2] = \"SELL\";\n})(BinanceOrderSide || (exports.BinanceOrderSide = BinanceOrderSide = {}));\nexports.EnumBinanceOrderSide = schema_utils_1.Type.Enum(BinanceOrderSide);\nvar BinanceTimeInForce;\n(function (BinanceTimeInForce) {\n    BinanceTimeInForce[BinanceTimeInForce[\"TIF_UNKNOWN\"] = 0] = \"TIF_UNKNOWN\";\n    BinanceTimeInForce[BinanceTimeInForce[\"GTE\"] = 1] = \"GTE\";\n    BinanceTimeInForce[BinanceTimeInForce[\"TIF_RESERVED\"] = 2] = \"TIF_RESERVED\";\n    BinanceTimeInForce[BinanceTimeInForce[\"IOC\"] = 3] = \"IOC\";\n})(BinanceTimeInForce || (exports.BinanceTimeInForce = BinanceTimeInForce = {}));\nexports.EnumBinanceTimeInForce = schema_utils_1.Type.Enum(BinanceTimeInForce);\nexports.BinanceOrderMsg = schema_utils_1.Type.Object({\n    id: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    ordertype: exports.EnumBinanceOrderType,\n    price: schema_utils_1.Type.Number(),\n    quantity: schema_utils_1.Type.Number(),\n    sender: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    side: exports.EnumBinanceOrderSide,\n    symbol: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    timeinforce: exports.EnumBinanceTimeInForce,\n});\nexports.BinanceCancelMsg = schema_utils_1.Type.Object({\n    refid: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    sender: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    symbol: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n});\nexports.BinanceSignedTx = schema_utils_1.Type.Object({\n    signature: schema_utils_1.Type.String(),\n    public_key: schema_utils_1.Type.String(),\n});\nvar Enum_InputScriptType;\n(function (Enum_InputScriptType) {\n    Enum_InputScriptType[Enum_InputScriptType[\"SPENDADDRESS\"] = 0] = \"SPENDADDRESS\";\n    Enum_InputScriptType[Enum_InputScriptType[\"SPENDMULTISIG\"] = 1] = \"SPENDMULTISIG\";\n    Enum_InputScriptType[Enum_InputScriptType[\"EXTERNAL\"] = 2] = \"EXTERNAL\";\n    Enum_InputScriptType[Enum_InputScriptType[\"SPENDWITNESS\"] = 3] = \"SPENDWITNESS\";\n    Enum_InputScriptType[Enum_InputScriptType[\"SPENDP2SHWITNESS\"] = 4] = \"SPENDP2SHWITNESS\";\n    Enum_InputScriptType[Enum_InputScriptType[\"SPENDTAPROOT\"] = 5] = \"SPENDTAPROOT\";\n})(Enum_InputScriptType || (exports.Enum_InputScriptType = Enum_InputScriptType = {}));\nexports.EnumEnum_InputScriptType = schema_utils_1.Type.Enum(Enum_InputScriptType);\nexports.InputScriptType = schema_utils_1.Type.KeyOfEnum(Enum_InputScriptType);\nvar Enum_OutputScriptType;\n(function (Enum_OutputScriptType) {\n    Enum_OutputScriptType[Enum_OutputScriptType[\"PAYTOADDRESS\"] = 0] = \"PAYTOADDRESS\";\n    Enum_OutputScriptType[Enum_OutputScriptType[\"PAYTOSCRIPTHASH\"] = 1] = \"PAYTOSCRIPTHASH\";\n    Enum_OutputScriptType[Enum_OutputScriptType[\"PAYTOMULTISIG\"] = 2] = \"PAYTOMULTISIG\";\n    Enum_OutputScriptType[Enum_OutputScriptType[\"PAYTOOPRETURN\"] = 3] = \"PAYTOOPRETURN\";\n    Enum_OutputScriptType[Enum_OutputScriptType[\"PAYTOWITNESS\"] = 4] = \"PAYTOWITNESS\";\n    Enum_OutputScriptType[Enum_OutputScriptType[\"PAYTOP2SHWITNESS\"] = 5] = \"PAYTOP2SHWITNESS\";\n    Enum_OutputScriptType[Enum_OutputScriptType[\"PAYTOTAPROOT\"] = 6] = \"PAYTOTAPROOT\";\n})(Enum_OutputScriptType || (exports.Enum_OutputScriptType = Enum_OutputScriptType = {}));\nexports.EnumEnum_OutputScriptType = schema_utils_1.Type.Enum(Enum_OutputScriptType);\nexports.OutputScriptType = schema_utils_1.Type.KeyOfEnum(Enum_OutputScriptType);\nvar DecredStakingSpendType;\n(function (DecredStakingSpendType) {\n    DecredStakingSpendType[DecredStakingSpendType[\"SSGen\"] = 0] = \"SSGen\";\n    DecredStakingSpendType[DecredStakingSpendType[\"SSRTX\"] = 1] = \"SSRTX\";\n})(DecredStakingSpendType || (exports.DecredStakingSpendType = DecredStakingSpendType = {}));\nexports.EnumDecredStakingSpendType = schema_utils_1.Type.Enum(DecredStakingSpendType);\nvar AmountUnit;\n(function (AmountUnit) {\n    AmountUnit[AmountUnit[\"BITCOIN\"] = 0] = \"BITCOIN\";\n    AmountUnit[AmountUnit[\"MILLIBITCOIN\"] = 1] = \"MILLIBITCOIN\";\n    AmountUnit[AmountUnit[\"MICROBITCOIN\"] = 2] = \"MICROBITCOIN\";\n    AmountUnit[AmountUnit[\"SATOSHI\"] = 3] = \"SATOSHI\";\n})(AmountUnit || (exports.AmountUnit = AmountUnit = {}));\nexports.EnumAmountUnit = schema_utils_1.Type.Enum(AmountUnit);\nexports.HDNodeType = schema_utils_1.Type.Object({\n    depth: schema_utils_1.Type.Number(),\n    fingerprint: schema_utils_1.Type.Number(),\n    child_num: schema_utils_1.Type.Number(),\n    chain_code: schema_utils_1.Type.String(),\n    private_key: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    public_key: schema_utils_1.Type.String(),\n});\nexports.HDNodePathType = schema_utils_1.Type.Object({\n    node: schema_utils_1.Type.Union([exports.HDNodeType, schema_utils_1.Type.String()]),\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n});\nexports.MultisigRedeemScriptType = schema_utils_1.Type.Object({\n    pubkeys: schema_utils_1.Type.Array(exports.HDNodePathType),\n    signatures: schema_utils_1.Type.Array(schema_utils_1.Type.String()),\n    m: schema_utils_1.Type.Number(),\n    nodes: schema_utils_1.Type.Optional(schema_utils_1.Type.Array(exports.HDNodeType)),\n    address_n: schema_utils_1.Type.Optional(schema_utils_1.Type.Array(schema_utils_1.Type.Number())),\n});\nexports.GetPublicKey = schema_utils_1.Type.Object({\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    ecdsa_curve_name: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    show_display: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    coin_name: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    script_type: schema_utils_1.Type.Optional(exports.InputScriptType),\n    ignore_xpub_magic: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n});\nexports.PublicKey = schema_utils_1.Type.Object({\n    node: exports.HDNodeType,\n    xpub: schema_utils_1.Type.String(),\n    root_fingerprint: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n});\nexports.GetAddress = schema_utils_1.Type.Object({\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    coin_name: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    show_display: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    multisig: schema_utils_1.Type.Optional(exports.MultisigRedeemScriptType),\n    script_type: schema_utils_1.Type.Optional(exports.InputScriptType),\n    ignore_xpub_magic: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n});\nexports.Address = schema_utils_1.Type.Object({\n    address: schema_utils_1.Type.String(),\n    mac: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n});\nexports.GetOwnershipId = schema_utils_1.Type.Object({\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    coin_name: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    multisig: schema_utils_1.Type.Optional(exports.MultisigRedeemScriptType),\n    script_type: schema_utils_1.Type.Optional(exports.InputScriptType),\n});\nexports.OwnershipId = schema_utils_1.Type.Object({\n    ownership_id: schema_utils_1.Type.String(),\n});\nexports.SignMessage = schema_utils_1.Type.Object({\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    message: schema_utils_1.Type.String(),\n    coin_name: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    script_type: schema_utils_1.Type.Optional(exports.InputScriptType),\n    no_script_type: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n});\nexports.MessageSignature = schema_utils_1.Type.Object({\n    address: schema_utils_1.Type.String(),\n    signature: schema_utils_1.Type.String(),\n});\nexports.VerifyMessage = schema_utils_1.Type.Object({\n    address: schema_utils_1.Type.String(),\n    signature: schema_utils_1.Type.String(),\n    message: schema_utils_1.Type.String(),\n    coin_name: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n});\nexports.CoinJoinRequest = schema_utils_1.Type.Object({\n    fee_rate: schema_utils_1.Type.Number(),\n    no_fee_threshold: schema_utils_1.Type.Number(),\n    min_registrable_amount: schema_utils_1.Type.Number(),\n    mask_public_key: schema_utils_1.Type.String(),\n    signature: schema_utils_1.Type.String(),\n});\nexports.SignTx = schema_utils_1.Type.Object({\n    outputs_count: schema_utils_1.Type.Number(),\n    inputs_count: schema_utils_1.Type.Number(),\n    coin_name: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    version: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    lock_time: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    expiry: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    overwintered: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    version_group_id: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    timestamp: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    branch_id: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    amount_unit: schema_utils_1.Type.Optional(exports.EnumAmountUnit),\n    decred_staking_ticket: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    serialize: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    coinjoin_request: schema_utils_1.Type.Optional(exports.CoinJoinRequest),\n    chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n});\nvar Enum_RequestType;\n(function (Enum_RequestType) {\n    Enum_RequestType[Enum_RequestType[\"TXINPUT\"] = 0] = \"TXINPUT\";\n    Enum_RequestType[Enum_RequestType[\"TXOUTPUT\"] = 1] = \"TXOUTPUT\";\n    Enum_RequestType[Enum_RequestType[\"TXMETA\"] = 2] = \"TXMETA\";\n    Enum_RequestType[Enum_RequestType[\"TXFINISHED\"] = 3] = \"TXFINISHED\";\n    Enum_RequestType[Enum_RequestType[\"TXEXTRADATA\"] = 4] = \"TXEXTRADATA\";\n    Enum_RequestType[Enum_RequestType[\"TXORIGINPUT\"] = 5] = \"TXORIGINPUT\";\n    Enum_RequestType[Enum_RequestType[\"TXORIGOUTPUT\"] = 6] = \"TXORIGOUTPUT\";\n    Enum_RequestType[Enum_RequestType[\"TXPAYMENTREQ\"] = 7] = \"TXPAYMENTREQ\";\n})(Enum_RequestType || (exports.Enum_RequestType = Enum_RequestType = {}));\nexports.EnumEnum_RequestType = schema_utils_1.Type.Enum(Enum_RequestType);\nexports.RequestType = schema_utils_1.Type.KeyOfEnum(Enum_RequestType);\nexports.TxRequestDetailsType = schema_utils_1.Type.Object({\n    request_index: schema_utils_1.Type.Number(),\n    tx_hash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    extra_data_len: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    extra_data_offset: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n});\nexports.TxRequestSerializedType = schema_utils_1.Type.Object({\n    signature_index: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    signature: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    serialized_tx: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n});\nexports.TxRequest = schema_utils_1.Type.Object({\n    request_type: exports.RequestType,\n    details: exports.TxRequestDetailsType,\n    serialized: schema_utils_1.Type.Optional(exports.TxRequestSerializedType),\n});\nexports.InternalInputScriptType = schema_utils_1.Type.Exclude(exports.InputScriptType, schema_utils_1.Type.Literal('EXTERNAL'));\nconst CommonTxInputType = schema_utils_1.Type.Object({\n    prev_hash: schema_utils_1.Type.String(),\n    prev_index: schema_utils_1.Type.Number(),\n    amount: schema_utils_1.Type.Uint(),\n    sequence: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    multisig: schema_utils_1.Type.Optional(exports.MultisigRedeemScriptType),\n    decred_tree: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    orig_hash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    orig_index: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    decred_staking_spend: schema_utils_1.Type.Optional(exports.EnumDecredStakingSpendType),\n    script_pubkey: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    coinjoin_flags: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    script_sig: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    witness: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    ownership_proof: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    commitment_data: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n});\nexports.TxInputType = schema_utils_1.Type.Union([\n    schema_utils_1.Type.Intersect([\n        CommonTxInputType,\n        schema_utils_1.Type.Object({\n            address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n            script_type: schema_utils_1.Type.Optional(exports.InternalInputScriptType),\n        }),\n    ]),\n    schema_utils_1.Type.Intersect([\n        CommonTxInputType,\n        schema_utils_1.Type.Object({\n            address_n: schema_utils_1.Type.Optional(schema_utils_1.Type.Undefined()),\n            script_type: schema_utils_1.Type.Literal('EXTERNAL'),\n            script_pubkey: schema_utils_1.Type.String(),\n        }),\n    ]),\n]);\nexports.TxInput = exports.TxInputType;\nexports.TxOutputBinType = schema_utils_1.Type.Object({\n    amount: schema_utils_1.Type.Uint(),\n    script_pubkey: schema_utils_1.Type.String(),\n    decred_script_version: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n});\nexports.ChangeOutputScriptType = schema_utils_1.Type.Exclude(exports.OutputScriptType, schema_utils_1.Type.Literal('PAYTOOPRETURN'));\nexports.TxOutputType = schema_utils_1.Type.Union([\n    schema_utils_1.Type.Object({\n        address: schema_utils_1.Type.String(),\n        address_n: schema_utils_1.Type.Optional(schema_utils_1.Type.Undefined()),\n        script_type: schema_utils_1.Type.Literal('PAYTOADDRESS'),\n        amount: schema_utils_1.Type.Uint(),\n        multisig: schema_utils_1.Type.Optional(exports.MultisigRedeemScriptType),\n        orig_hash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n        orig_index: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n        payment_req_index: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    }),\n    schema_utils_1.Type.Object({\n        address: schema_utils_1.Type.Optional(schema_utils_1.Type.Undefined()),\n        address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n        script_type: schema_utils_1.Type.Optional(exports.ChangeOutputScriptType),\n        amount: schema_utils_1.Type.Uint(),\n        multisig: schema_utils_1.Type.Optional(exports.MultisigRedeemScriptType),\n        orig_hash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n        orig_index: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n        payment_req_index: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    }),\n    schema_utils_1.Type.Object({\n        address: schema_utils_1.Type.String(),\n        address_n: schema_utils_1.Type.Optional(schema_utils_1.Type.Undefined()),\n        script_type: schema_utils_1.Type.Optional(exports.ChangeOutputScriptType),\n        amount: schema_utils_1.Type.Uint(),\n        multisig: schema_utils_1.Type.Optional(exports.MultisigRedeemScriptType),\n        orig_hash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n        orig_index: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n        payment_req_index: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    }),\n    schema_utils_1.Type.Object({\n        address: schema_utils_1.Type.Optional(schema_utils_1.Type.Undefined()),\n        address_n: schema_utils_1.Type.Optional(schema_utils_1.Type.Undefined()),\n        amount: schema_utils_1.Type.Union([schema_utils_1.Type.Literal('0'), schema_utils_1.Type.Literal(0)]),\n        op_return_data: schema_utils_1.Type.String(),\n        script_type: schema_utils_1.Type.Literal('PAYTOOPRETURN'),\n        orig_hash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n        orig_index: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n        payment_req_index: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    }),\n]);\nexports.TxOutput = exports.TxOutputType;\nexports.PrevTx = schema_utils_1.Type.Object({\n    version: schema_utils_1.Type.Number(),\n    lock_time: schema_utils_1.Type.Number(),\n    inputs_count: schema_utils_1.Type.Number(),\n    outputs_count: schema_utils_1.Type.Number(),\n    extra_data_len: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    expiry: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    version_group_id: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    timestamp: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    branch_id: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n});\nexports.PrevInput = schema_utils_1.Type.Object({\n    prev_hash: schema_utils_1.Type.String(),\n    prev_index: schema_utils_1.Type.Number(),\n    script_sig: schema_utils_1.Type.String(),\n    sequence: schema_utils_1.Type.Number(),\n    decred_tree: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n});\nexports.PrevOutput = schema_utils_1.Type.Object({\n    amount: schema_utils_1.Type.Uint(),\n    script_pubkey: schema_utils_1.Type.String(),\n    decred_script_version: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n});\nexports.TextMemo = schema_utils_1.Type.Object({\n    text: schema_utils_1.Type.String(),\n});\nexports.RefundMemo = schema_utils_1.Type.Object({\n    address: schema_utils_1.Type.String(),\n    mac: schema_utils_1.Type.String(),\n});\nexports.CoinPurchaseMemo = schema_utils_1.Type.Object({\n    coin_type: schema_utils_1.Type.Number(),\n    amount: schema_utils_1.Type.Uint(),\n    address: schema_utils_1.Type.String(),\n    mac: schema_utils_1.Type.String(),\n});\nexports.PaymentRequestMemo = schema_utils_1.Type.Object({\n    text_memo: schema_utils_1.Type.Optional(exports.TextMemo),\n    refund_memo: schema_utils_1.Type.Optional(exports.RefundMemo),\n    coin_purchase_memo: schema_utils_1.Type.Optional(exports.CoinPurchaseMemo),\n});\nexports.TxAckPaymentRequest = schema_utils_1.Type.Object({\n    nonce: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    recipient_name: schema_utils_1.Type.String(),\n    memos: schema_utils_1.Type.Optional(schema_utils_1.Type.Array(exports.PaymentRequestMemo)),\n    amount: schema_utils_1.Type.Optional(schema_utils_1.Type.Uint()),\n    signature: schema_utils_1.Type.String(),\n});\nexports.TxAckResponse = schema_utils_1.Type.Union([\n    schema_utils_1.Type.Object({\n        inputs: schema_utils_1.Type.Array(schema_utils_1.Type.Union([exports.TxInputType, exports.PrevInput])),\n    }),\n    schema_utils_1.Type.Object({\n        bin_outputs: schema_utils_1.Type.Array(exports.TxOutputBinType),\n    }),\n    schema_utils_1.Type.Object({\n        outputs: schema_utils_1.Type.Array(exports.TxOutputType),\n    }),\n    schema_utils_1.Type.Object({\n        extra_data: schema_utils_1.Type.String(),\n    }),\n    schema_utils_1.Type.Object({\n        version: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n        lock_time: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n        inputs_cnt: schema_utils_1.Type.Number(),\n        outputs_cnt: schema_utils_1.Type.Number(),\n        extra_data: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n        extra_data_len: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n        timestamp: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n        version_group_id: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n        expiry: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n        branch_id: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    }),\n]);\nexports.TxAck = schema_utils_1.Type.Object({\n    tx: exports.TxAckResponse,\n});\nexports.TxAckInputWrapper = schema_utils_1.Type.Object({\n    input: exports.TxInput,\n});\nexports.TxAckInput = schema_utils_1.Type.Object({\n    tx: exports.TxAckInputWrapper,\n});\nexports.TxAckOutputWrapper = schema_utils_1.Type.Object({\n    output: exports.TxOutput,\n});\nexports.TxAckOutput = schema_utils_1.Type.Object({\n    tx: exports.TxAckOutputWrapper,\n});\nexports.TxAckPrevMeta = schema_utils_1.Type.Object({\n    tx: exports.PrevTx,\n});\nexports.TxAckPrevInputWrapper = schema_utils_1.Type.Object({\n    input: exports.PrevInput,\n});\nexports.TxAckPrevInput = schema_utils_1.Type.Object({\n    tx: exports.TxAckPrevInputWrapper,\n});\nexports.TxAckPrevOutputWrapper = schema_utils_1.Type.Object({\n    output: exports.PrevOutput,\n});\nexports.TxAckPrevOutput = schema_utils_1.Type.Object({\n    tx: exports.TxAckPrevOutputWrapper,\n});\nexports.TxAckPrevExtraDataWrapper = schema_utils_1.Type.Object({\n    extra_data_chunk: schema_utils_1.Type.String(),\n});\nexports.TxAckPrevExtraData = schema_utils_1.Type.Object({\n    tx: exports.TxAckPrevExtraDataWrapper,\n});\nexports.GetOwnershipProof = schema_utils_1.Type.Object({\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    coin_name: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    script_type: schema_utils_1.Type.Optional(exports.InputScriptType),\n    multisig: schema_utils_1.Type.Optional(exports.MultisigRedeemScriptType),\n    user_confirmation: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    ownership_ids: schema_utils_1.Type.Optional(schema_utils_1.Type.Array(schema_utils_1.Type.String())),\n    commitment_data: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n});\nexports.OwnershipProof = schema_utils_1.Type.Object({\n    ownership_proof: schema_utils_1.Type.String(),\n    signature: schema_utils_1.Type.String(),\n});\nexports.AuthorizeCoinJoin = schema_utils_1.Type.Object({\n    coordinator: schema_utils_1.Type.String(),\n    max_rounds: schema_utils_1.Type.Number(),\n    max_coordinator_fee_rate: schema_utils_1.Type.Number(),\n    max_fee_per_kvbyte: schema_utils_1.Type.Number(),\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    coin_name: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    script_type: schema_utils_1.Type.Optional(exports.InputScriptType),\n    amount_unit: schema_utils_1.Type.Optional(exports.EnumAmountUnit),\n});\nexports.FirmwareErase = schema_utils_1.Type.Object({\n    length: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n});\nexports.FirmwareRequest = schema_utils_1.Type.Object({\n    offset: schema_utils_1.Type.Number(),\n    length: schema_utils_1.Type.Number(),\n});\nexports.FirmwareUpload = schema_utils_1.Type.Object({\n    payload: schema_utils_1.Type.Union([schema_utils_1.Type.Buffer(), schema_utils_1.Type.ArrayBuffer()]),\n    hash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n});\nexports.SelfTest = schema_utils_1.Type.Object({\n    payload: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n});\nvar CardanoDerivationType;\n(function (CardanoDerivationType) {\n    CardanoDerivationType[CardanoDerivationType[\"LEDGER\"] = 0] = \"LEDGER\";\n    CardanoDerivationType[CardanoDerivationType[\"ICARUS\"] = 1] = \"ICARUS\";\n    CardanoDerivationType[CardanoDerivationType[\"ICARUS_TREZOR\"] = 2] = \"ICARUS_TREZOR\";\n})(CardanoDerivationType || (exports.CardanoDerivationType = CardanoDerivationType = {}));\nexports.EnumCardanoDerivationType = schema_utils_1.Type.Enum(CardanoDerivationType);\nvar CardanoAddressType;\n(function (CardanoAddressType) {\n    CardanoAddressType[CardanoAddressType[\"BASE\"] = 0] = \"BASE\";\n    CardanoAddressType[CardanoAddressType[\"BASE_SCRIPT_KEY\"] = 1] = \"BASE_SCRIPT_KEY\";\n    CardanoAddressType[CardanoAddressType[\"BASE_KEY_SCRIPT\"] = 2] = \"BASE_KEY_SCRIPT\";\n    CardanoAddressType[CardanoAddressType[\"BASE_SCRIPT_SCRIPT\"] = 3] = \"BASE_SCRIPT_SCRIPT\";\n    CardanoAddressType[CardanoAddressType[\"POINTER\"] = 4] = \"POINTER\";\n    CardanoAddressType[CardanoAddressType[\"POINTER_SCRIPT\"] = 5] = \"POINTER_SCRIPT\";\n    CardanoAddressType[CardanoAddressType[\"ENTERPRISE\"] = 6] = \"ENTERPRISE\";\n    CardanoAddressType[CardanoAddressType[\"ENTERPRISE_SCRIPT\"] = 7] = \"ENTERPRISE_SCRIPT\";\n    CardanoAddressType[CardanoAddressType[\"BYRON\"] = 8] = \"BYRON\";\n    CardanoAddressType[CardanoAddressType[\"REWARD\"] = 14] = \"REWARD\";\n    CardanoAddressType[CardanoAddressType[\"REWARD_SCRIPT\"] = 15] = \"REWARD_SCRIPT\";\n})(CardanoAddressType || (exports.CardanoAddressType = CardanoAddressType = {}));\nexports.EnumCardanoAddressType = schema_utils_1.Type.Enum(CardanoAddressType);\nvar CardanoNativeScriptType;\n(function (CardanoNativeScriptType) {\n    CardanoNativeScriptType[CardanoNativeScriptType[\"PUB_KEY\"] = 0] = \"PUB_KEY\";\n    CardanoNativeScriptType[CardanoNativeScriptType[\"ALL\"] = 1] = \"ALL\";\n    CardanoNativeScriptType[CardanoNativeScriptType[\"ANY\"] = 2] = \"ANY\";\n    CardanoNativeScriptType[CardanoNativeScriptType[\"N_OF_K\"] = 3] = \"N_OF_K\";\n    CardanoNativeScriptType[CardanoNativeScriptType[\"INVALID_BEFORE\"] = 4] = \"INVALID_BEFORE\";\n    CardanoNativeScriptType[CardanoNativeScriptType[\"INVALID_HEREAFTER\"] = 5] = \"INVALID_HEREAFTER\";\n})(CardanoNativeScriptType || (exports.CardanoNativeScriptType = CardanoNativeScriptType = {}));\nexports.EnumCardanoNativeScriptType = schema_utils_1.Type.Enum(CardanoNativeScriptType);\nvar CardanoNativeScriptHashDisplayFormat;\n(function (CardanoNativeScriptHashDisplayFormat) {\n    CardanoNativeScriptHashDisplayFormat[CardanoNativeScriptHashDisplayFormat[\"HIDE\"] = 0] = \"HIDE\";\n    CardanoNativeScriptHashDisplayFormat[CardanoNativeScriptHashDisplayFormat[\"BECH32\"] = 1] = \"BECH32\";\n    CardanoNativeScriptHashDisplayFormat[CardanoNativeScriptHashDisplayFormat[\"POLICY_ID\"] = 2] = \"POLICY_ID\";\n})(CardanoNativeScriptHashDisplayFormat || (exports.CardanoNativeScriptHashDisplayFormat = CardanoNativeScriptHashDisplayFormat = {}));\nexports.EnumCardanoNativeScriptHashDisplayFormat = schema_utils_1.Type.Enum(CardanoNativeScriptHashDisplayFormat);\nvar CardanoTxOutputSerializationFormat;\n(function (CardanoTxOutputSerializationFormat) {\n    CardanoTxOutputSerializationFormat[CardanoTxOutputSerializationFormat[\"ARRAY_LEGACY\"] = 0] = \"ARRAY_LEGACY\";\n    CardanoTxOutputSerializationFormat[CardanoTxOutputSerializationFormat[\"MAP_BABBAGE\"] = 1] = \"MAP_BABBAGE\";\n})(CardanoTxOutputSerializationFormat || (exports.CardanoTxOutputSerializationFormat = CardanoTxOutputSerializationFormat = {}));\nexports.EnumCardanoTxOutputSerializationFormat = schema_utils_1.Type.Enum(CardanoTxOutputSerializationFormat);\nvar CardanoCertificateType;\n(function (CardanoCertificateType) {\n    CardanoCertificateType[CardanoCertificateType[\"STAKE_REGISTRATION\"] = 0] = \"STAKE_REGISTRATION\";\n    CardanoCertificateType[CardanoCertificateType[\"STAKE_DEREGISTRATION\"] = 1] = \"STAKE_DEREGISTRATION\";\n    CardanoCertificateType[CardanoCertificateType[\"STAKE_DELEGATION\"] = 2] = \"STAKE_DELEGATION\";\n    CardanoCertificateType[CardanoCertificateType[\"STAKE_POOL_REGISTRATION\"] = 3] = \"STAKE_POOL_REGISTRATION\";\n})(CardanoCertificateType || (exports.CardanoCertificateType = CardanoCertificateType = {}));\nexports.EnumCardanoCertificateType = schema_utils_1.Type.Enum(CardanoCertificateType);\nvar CardanoPoolRelayType;\n(function (CardanoPoolRelayType) {\n    CardanoPoolRelayType[CardanoPoolRelayType[\"SINGLE_HOST_IP\"] = 0] = \"SINGLE_HOST_IP\";\n    CardanoPoolRelayType[CardanoPoolRelayType[\"SINGLE_HOST_NAME\"] = 1] = \"SINGLE_HOST_NAME\";\n    CardanoPoolRelayType[CardanoPoolRelayType[\"MULTIPLE_HOST_NAME\"] = 2] = \"MULTIPLE_HOST_NAME\";\n})(CardanoPoolRelayType || (exports.CardanoPoolRelayType = CardanoPoolRelayType = {}));\nexports.EnumCardanoPoolRelayType = schema_utils_1.Type.Enum(CardanoPoolRelayType);\nvar CardanoTxAuxiliaryDataSupplementType;\n(function (CardanoTxAuxiliaryDataSupplementType) {\n    CardanoTxAuxiliaryDataSupplementType[CardanoTxAuxiliaryDataSupplementType[\"NONE\"] = 0] = \"NONE\";\n    CardanoTxAuxiliaryDataSupplementType[CardanoTxAuxiliaryDataSupplementType[\"CVOTE_REGISTRATION_SIGNATURE\"] = 1] = \"CVOTE_REGISTRATION_SIGNATURE\";\n})(CardanoTxAuxiliaryDataSupplementType || (exports.CardanoTxAuxiliaryDataSupplementType = CardanoTxAuxiliaryDataSupplementType = {}));\nexports.EnumCardanoTxAuxiliaryDataSupplementType = schema_utils_1.Type.Enum(CardanoTxAuxiliaryDataSupplementType);\nvar CardanoCVoteRegistrationFormat;\n(function (CardanoCVoteRegistrationFormat) {\n    CardanoCVoteRegistrationFormat[CardanoCVoteRegistrationFormat[\"CIP15\"] = 0] = \"CIP15\";\n    CardanoCVoteRegistrationFormat[CardanoCVoteRegistrationFormat[\"CIP36\"] = 1] = \"CIP36\";\n})(CardanoCVoteRegistrationFormat || (exports.CardanoCVoteRegistrationFormat = CardanoCVoteRegistrationFormat = {}));\nexports.EnumCardanoCVoteRegistrationFormat = schema_utils_1.Type.Enum(CardanoCVoteRegistrationFormat);\nvar CardanoTxSigningMode;\n(function (CardanoTxSigningMode) {\n    CardanoTxSigningMode[CardanoTxSigningMode[\"ORDINARY_TRANSACTION\"] = 0] = \"ORDINARY_TRANSACTION\";\n    CardanoTxSigningMode[CardanoTxSigningMode[\"POOL_REGISTRATION_AS_OWNER\"] = 1] = \"POOL_REGISTRATION_AS_OWNER\";\n    CardanoTxSigningMode[CardanoTxSigningMode[\"MULTISIG_TRANSACTION\"] = 2] = \"MULTISIG_TRANSACTION\";\n    CardanoTxSigningMode[CardanoTxSigningMode[\"PLUTUS_TRANSACTION\"] = 3] = \"PLUTUS_TRANSACTION\";\n})(CardanoTxSigningMode || (exports.CardanoTxSigningMode = CardanoTxSigningMode = {}));\nexports.EnumCardanoTxSigningMode = schema_utils_1.Type.Enum(CardanoTxSigningMode);\nvar CardanoTxWitnessType;\n(function (CardanoTxWitnessType) {\n    CardanoTxWitnessType[CardanoTxWitnessType[\"BYRON_WITNESS\"] = 0] = \"BYRON_WITNESS\";\n    CardanoTxWitnessType[CardanoTxWitnessType[\"SHELLEY_WITNESS\"] = 1] = \"SHELLEY_WITNESS\";\n})(CardanoTxWitnessType || (exports.CardanoTxWitnessType = CardanoTxWitnessType = {}));\nexports.EnumCardanoTxWitnessType = schema_utils_1.Type.Enum(CardanoTxWitnessType);\nexports.CardanoBlockchainPointerType = schema_utils_1.Type.Object({\n    block_index: schema_utils_1.Type.Number(),\n    tx_index: schema_utils_1.Type.Number(),\n    certificate_index: schema_utils_1.Type.Number(),\n});\nexports.CardanoNativeScript = schema_utils_1.Type.Recursive(This => schema_utils_1.Type.Object({\n    type: exports.EnumCardanoNativeScriptType,\n    scripts: schema_utils_1.Type.Optional(schema_utils_1.Type.Array(This)),\n    key_hash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    key_path: schema_utils_1.Type.Optional(schema_utils_1.Type.Array(schema_utils_1.Type.Number())),\n    required_signatures_count: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    invalid_before: schema_utils_1.Type.Optional(schema_utils_1.Type.Uint()),\n    invalid_hereafter: schema_utils_1.Type.Optional(schema_utils_1.Type.Uint()),\n}));\nexports.CardanoGetNativeScriptHash = schema_utils_1.Type.Object({\n    script: exports.CardanoNativeScript,\n    display_format: exports.EnumCardanoNativeScriptHashDisplayFormat,\n    derivation_type: exports.EnumCardanoDerivationType,\n});\nexports.CardanoNativeScriptHash = schema_utils_1.Type.Object({\n    script_hash: schema_utils_1.Type.String(),\n});\nexports.CardanoAddressParametersType = schema_utils_1.Type.Object({\n    address_type: exports.EnumCardanoAddressType,\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    address_n_staking: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    staking_key_hash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    certificate_pointer: schema_utils_1.Type.Optional(exports.CardanoBlockchainPointerType),\n    script_payment_hash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    script_staking_hash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n});\nexports.CardanoGetAddress = schema_utils_1.Type.Object({\n    show_display: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    protocol_magic: schema_utils_1.Type.Number(),\n    network_id: schema_utils_1.Type.Number(),\n    address_parameters: exports.CardanoAddressParametersType,\n    derivation_type: exports.EnumCardanoDerivationType,\n    chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n});\nexports.CardanoAddress = schema_utils_1.Type.Object({\n    address: schema_utils_1.Type.String(),\n});\nexports.CardanoGetPublicKey = schema_utils_1.Type.Object({\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    show_display: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    derivation_type: exports.EnumCardanoDerivationType,\n});\nexports.CardanoPublicKey = schema_utils_1.Type.Object({\n    xpub: schema_utils_1.Type.String(),\n    node: exports.HDNodeType,\n});\nexports.CardanoSignTxInit = schema_utils_1.Type.Object({\n    signing_mode: exports.EnumCardanoTxSigningMode,\n    protocol_magic: schema_utils_1.Type.Number(),\n    network_id: schema_utils_1.Type.Number(),\n    inputs_count: schema_utils_1.Type.Number(),\n    outputs_count: schema_utils_1.Type.Number(),\n    fee: schema_utils_1.Type.Uint(),\n    ttl: schema_utils_1.Type.Optional(schema_utils_1.Type.Uint()),\n    certificates_count: schema_utils_1.Type.Number(),\n    withdrawals_count: schema_utils_1.Type.Number(),\n    has_auxiliary_data: schema_utils_1.Type.Boolean(),\n    validity_interval_start: schema_utils_1.Type.Optional(schema_utils_1.Type.Uint()),\n    witness_requests_count: schema_utils_1.Type.Number(),\n    minting_asset_groups_count: schema_utils_1.Type.Number(),\n    derivation_type: exports.EnumCardanoDerivationType,\n    include_network_id: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    script_data_hash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    collateral_inputs_count: schema_utils_1.Type.Number(),\n    required_signers_count: schema_utils_1.Type.Number(),\n    has_collateral_return: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    total_collateral: schema_utils_1.Type.Optional(schema_utils_1.Type.Uint()),\n    reference_inputs_count: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n});\nexports.CardanoTxInput = schema_utils_1.Type.Object({\n    prev_hash: schema_utils_1.Type.String(),\n    prev_index: schema_utils_1.Type.Number(),\n});\nexports.CardanoTxOutput = schema_utils_1.Type.Object({\n    address: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    address_parameters: schema_utils_1.Type.Optional(exports.CardanoAddressParametersType),\n    amount: schema_utils_1.Type.Uint(),\n    asset_groups_count: schema_utils_1.Type.Number(),\n    datum_hash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    format: schema_utils_1.Type.Optional(exports.EnumCardanoTxOutputSerializationFormat),\n    inline_datum_size: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    reference_script_size: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n});\nexports.CardanoAssetGroup = schema_utils_1.Type.Object({\n    policy_id: schema_utils_1.Type.String(),\n    tokens_count: schema_utils_1.Type.Number(),\n});\nexports.CardanoToken = schema_utils_1.Type.Object({\n    asset_name_bytes: schema_utils_1.Type.String(),\n    amount: schema_utils_1.Type.Optional(schema_utils_1.Type.Uint()),\n    mint_amount: schema_utils_1.Type.Optional(schema_utils_1.Type.Uint({ allowNegative: true })),\n});\nexports.CardanoTxInlineDatumChunk = schema_utils_1.Type.Object({\n    data: schema_utils_1.Type.String(),\n});\nexports.CardanoTxReferenceScriptChunk = schema_utils_1.Type.Object({\n    data: schema_utils_1.Type.String(),\n});\nexports.CardanoPoolOwner = schema_utils_1.Type.Object({\n    staking_key_path: schema_utils_1.Type.Optional(schema_utils_1.Type.Array(schema_utils_1.Type.Number())),\n    staking_key_hash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n});\nexports.CardanoPoolRelayParameters = schema_utils_1.Type.Object({\n    type: exports.EnumCardanoPoolRelayType,\n    ipv4_address: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    ipv6_address: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    host_name: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    port: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n});\nexports.CardanoPoolMetadataType = schema_utils_1.Type.Object({\n    url: schema_utils_1.Type.String(),\n    hash: schema_utils_1.Type.String(),\n});\nexports.CardanoPoolParametersType = schema_utils_1.Type.Object({\n    pool_id: schema_utils_1.Type.String(),\n    vrf_key_hash: schema_utils_1.Type.String(),\n    pledge: schema_utils_1.Type.Uint(),\n    cost: schema_utils_1.Type.Uint(),\n    margin_numerator: schema_utils_1.Type.Uint(),\n    margin_denominator: schema_utils_1.Type.Uint(),\n    reward_account: schema_utils_1.Type.String(),\n    metadata: schema_utils_1.Type.Optional(exports.CardanoPoolMetadataType),\n    owners_count: schema_utils_1.Type.Number(),\n    relays_count: schema_utils_1.Type.Number(),\n});\nexports.CardanoTxCertificate = schema_utils_1.Type.Object({\n    type: exports.EnumCardanoCertificateType,\n    path: schema_utils_1.Type.Optional(schema_utils_1.Type.Array(schema_utils_1.Type.Number())),\n    pool: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    pool_parameters: schema_utils_1.Type.Optional(exports.CardanoPoolParametersType),\n    script_hash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    key_hash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n});\nexports.CardanoTxWithdrawal = schema_utils_1.Type.Object({\n    path: schema_utils_1.Type.Optional(schema_utils_1.Type.Array(schema_utils_1.Type.Number())),\n    amount: schema_utils_1.Type.Uint(),\n    script_hash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    key_hash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n});\nexports.CardanoCVoteRegistrationDelegation = schema_utils_1.Type.Object({\n    vote_public_key: schema_utils_1.Type.String(),\n    weight: schema_utils_1.Type.Uint(),\n});\nexports.CardanoCVoteRegistrationParametersType = schema_utils_1.Type.Object({\n    vote_public_key: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    staking_path: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    payment_address_parameters: schema_utils_1.Type.Optional(exports.CardanoAddressParametersType),\n    nonce: schema_utils_1.Type.Uint(),\n    format: schema_utils_1.Type.Optional(exports.EnumCardanoCVoteRegistrationFormat),\n    delegations: schema_utils_1.Type.Optional(schema_utils_1.Type.Array(exports.CardanoCVoteRegistrationDelegation)),\n    voting_purpose: schema_utils_1.Type.Optional(schema_utils_1.Type.Uint()),\n    payment_address: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n});\nexports.CardanoTxAuxiliaryData = schema_utils_1.Type.Object({\n    cvote_registration_parameters: schema_utils_1.Type.Optional(exports.CardanoCVoteRegistrationParametersType),\n    hash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n});\nexports.CardanoTxMint = schema_utils_1.Type.Object({\n    asset_groups_count: schema_utils_1.Type.Number(),\n});\nexports.CardanoTxCollateralInput = schema_utils_1.Type.Object({\n    prev_hash: schema_utils_1.Type.String(),\n    prev_index: schema_utils_1.Type.Number(),\n});\nexports.CardanoTxRequiredSigner = schema_utils_1.Type.Object({\n    key_hash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    key_path: schema_utils_1.Type.Optional(schema_utils_1.Type.Array(schema_utils_1.Type.Number())),\n});\nexports.CardanoTxReferenceInput = schema_utils_1.Type.Object({\n    prev_hash: schema_utils_1.Type.String(),\n    prev_index: schema_utils_1.Type.Number(),\n});\nexports.CardanoTxItemAck = schema_utils_1.Type.Object({});\nexports.CardanoTxAuxiliaryDataSupplement = schema_utils_1.Type.Object({\n    type: exports.EnumCardanoTxAuxiliaryDataSupplementType,\n    auxiliary_data_hash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    cvote_registration_signature: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n});\nexports.CardanoTxWitnessRequest = schema_utils_1.Type.Object({\n    path: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n});\nexports.CardanoTxWitnessResponse = schema_utils_1.Type.Object({\n    type: exports.EnumCardanoTxWitnessType,\n    pub_key: schema_utils_1.Type.String(),\n    signature: schema_utils_1.Type.String(),\n    chain_code: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n});\nexports.CardanoTxHostAck = schema_utils_1.Type.Object({});\nexports.CardanoTxBodyHash = schema_utils_1.Type.Object({\n    tx_hash: schema_utils_1.Type.String(),\n});\nexports.CardanoSignTxFinished = schema_utils_1.Type.Object({});\nexports.Success = schema_utils_1.Type.Object({\n    message: schema_utils_1.Type.String(),\n});\nvar FailureType;\n(function (FailureType) {\n    FailureType[FailureType[\"Failure_UnexpectedMessage\"] = 1] = \"Failure_UnexpectedMessage\";\n    FailureType[FailureType[\"Failure_ButtonExpected\"] = 2] = \"Failure_ButtonExpected\";\n    FailureType[FailureType[\"Failure_DataError\"] = 3] = \"Failure_DataError\";\n    FailureType[FailureType[\"Failure_ActionCancelled\"] = 4] = \"Failure_ActionCancelled\";\n    FailureType[FailureType[\"Failure_PinExpected\"] = 5] = \"Failure_PinExpected\";\n    FailureType[FailureType[\"Failure_PinCancelled\"] = 6] = \"Failure_PinCancelled\";\n    FailureType[FailureType[\"Failure_PinInvalid\"] = 7] = \"Failure_PinInvalid\";\n    FailureType[FailureType[\"Failure_InvalidSignature\"] = 8] = \"Failure_InvalidSignature\";\n    FailureType[FailureType[\"Failure_ProcessError\"] = 9] = \"Failure_ProcessError\";\n    FailureType[FailureType[\"Failure_NotEnoughFunds\"] = 10] = \"Failure_NotEnoughFunds\";\n    FailureType[FailureType[\"Failure_NotInitialized\"] = 11] = \"Failure_NotInitialized\";\n    FailureType[FailureType[\"Failure_PinMismatch\"] = 12] = \"Failure_PinMismatch\";\n    FailureType[FailureType[\"Failure_WipeCodeMismatch\"] = 13] = \"Failure_WipeCodeMismatch\";\n    FailureType[FailureType[\"Failure_InvalidSession\"] = 14] = \"Failure_InvalidSession\";\n    FailureType[FailureType[\"Failure_FirmwareError\"] = 99] = \"Failure_FirmwareError\";\n})(FailureType || (exports.FailureType = FailureType = {}));\nexports.EnumFailureType = schema_utils_1.Type.Enum(FailureType);\nexports.Failure = schema_utils_1.Type.Object({\n    code: schema_utils_1.Type.Optional(exports.EnumFailureType),\n    message: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n});\nvar Enum_ButtonRequestType;\n(function (Enum_ButtonRequestType) {\n    Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_Other\"] = 1] = \"ButtonRequest_Other\";\n    Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_FeeOverThreshold\"] = 2] = \"ButtonRequest_FeeOverThreshold\";\n    Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_ConfirmOutput\"] = 3] = \"ButtonRequest_ConfirmOutput\";\n    Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_ResetDevice\"] = 4] = \"ButtonRequest_ResetDevice\";\n    Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_ConfirmWord\"] = 5] = \"ButtonRequest_ConfirmWord\";\n    Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_WipeDevice\"] = 6] = \"ButtonRequest_WipeDevice\";\n    Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_ProtectCall\"] = 7] = \"ButtonRequest_ProtectCall\";\n    Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_SignTx\"] = 8] = \"ButtonRequest_SignTx\";\n    Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_FirmwareCheck\"] = 9] = \"ButtonRequest_FirmwareCheck\";\n    Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_Address\"] = 10] = \"ButtonRequest_Address\";\n    Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_PublicKey\"] = 11] = \"ButtonRequest_PublicKey\";\n    Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_MnemonicWordCount\"] = 12] = \"ButtonRequest_MnemonicWordCount\";\n    Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_MnemonicInput\"] = 13] = \"ButtonRequest_MnemonicInput\";\n    Enum_ButtonRequestType[Enum_ButtonRequestType[\"_Deprecated_ButtonRequest_PassphraseType\"] = 14] = \"_Deprecated_ButtonRequest_PassphraseType\";\n    Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_UnknownDerivationPath\"] = 15] = \"ButtonRequest_UnknownDerivationPath\";\n    Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_RecoveryHomepage\"] = 16] = \"ButtonRequest_RecoveryHomepage\";\n    Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_Success\"] = 17] = \"ButtonRequest_Success\";\n    Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_Warning\"] = 18] = \"ButtonRequest_Warning\";\n    Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_PassphraseEntry\"] = 19] = \"ButtonRequest_PassphraseEntry\";\n    Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_PinEntry\"] = 20] = \"ButtonRequest_PinEntry\";\n})(Enum_ButtonRequestType || (exports.Enum_ButtonRequestType = Enum_ButtonRequestType = {}));\nexports.EnumEnum_ButtonRequestType = schema_utils_1.Type.Enum(Enum_ButtonRequestType);\nexports.ButtonRequestType = schema_utils_1.Type.KeyOfEnum(Enum_ButtonRequestType);\nexports.ButtonRequest = schema_utils_1.Type.Object({\n    code: schema_utils_1.Type.Optional(exports.ButtonRequestType),\n    pages: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n});\nexports.ButtonAck = schema_utils_1.Type.Object({});\nvar Enum_PinMatrixRequestType;\n(function (Enum_PinMatrixRequestType) {\n    Enum_PinMatrixRequestType[Enum_PinMatrixRequestType[\"PinMatrixRequestType_Current\"] = 1] = \"PinMatrixRequestType_Current\";\n    Enum_PinMatrixRequestType[Enum_PinMatrixRequestType[\"PinMatrixRequestType_NewFirst\"] = 2] = \"PinMatrixRequestType_NewFirst\";\n    Enum_PinMatrixRequestType[Enum_PinMatrixRequestType[\"PinMatrixRequestType_NewSecond\"] = 3] = \"PinMatrixRequestType_NewSecond\";\n    Enum_PinMatrixRequestType[Enum_PinMatrixRequestType[\"PinMatrixRequestType_WipeCodeFirst\"] = 4] = \"PinMatrixRequestType_WipeCodeFirst\";\n    Enum_PinMatrixRequestType[Enum_PinMatrixRequestType[\"PinMatrixRequestType_WipeCodeSecond\"] = 5] = \"PinMatrixRequestType_WipeCodeSecond\";\n})(Enum_PinMatrixRequestType || (exports.Enum_PinMatrixRequestType = Enum_PinMatrixRequestType = {}));\nexports.EnumEnum_PinMatrixRequestType = schema_utils_1.Type.Enum(Enum_PinMatrixRequestType);\nexports.PinMatrixRequestType = schema_utils_1.Type.KeyOfEnum(Enum_PinMatrixRequestType);\nexports.PinMatrixRequest = schema_utils_1.Type.Object({\n    type: schema_utils_1.Type.Optional(exports.PinMatrixRequestType),\n});\nexports.PinMatrixAck = schema_utils_1.Type.Object({\n    pin: schema_utils_1.Type.String(),\n});\nexports.PassphraseRequest = schema_utils_1.Type.Object({\n    _on_device: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n});\nexports.PassphraseAck = schema_utils_1.Type.Object({\n    passphrase: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    _state: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    on_device: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n});\nexports.Deprecated_PassphraseStateRequest = schema_utils_1.Type.Object({\n    state: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n});\nexports.Deprecated_PassphraseStateAck = schema_utils_1.Type.Object({});\nexports.CipherKeyValue = schema_utils_1.Type.Object({\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    key: schema_utils_1.Type.String(),\n    value: schema_utils_1.Type.String(),\n    encrypt: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    ask_on_encrypt: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    ask_on_decrypt: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    iv: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n});\nexports.CipheredKeyValue = schema_utils_1.Type.Object({\n    value: schema_utils_1.Type.String(),\n});\nexports.IdentityType = schema_utils_1.Type.Object({\n    proto: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    user: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    host: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    port: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    path: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    index: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n});\nexports.SignIdentity = schema_utils_1.Type.Object({\n    identity: exports.IdentityType,\n    challenge_hidden: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    challenge_visual: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    ecdsa_curve_name: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n});\nexports.SignedIdentity = schema_utils_1.Type.Object({\n    address: schema_utils_1.Type.String(),\n    public_key: schema_utils_1.Type.String(),\n    signature: schema_utils_1.Type.String(),\n});\nexports.GetECDHSessionKey = schema_utils_1.Type.Object({\n    identity: exports.IdentityType,\n    peer_public_key: schema_utils_1.Type.String(),\n    ecdsa_curve_name: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n});\nexports.ECDHSessionKey = schema_utils_1.Type.Object({\n    session_key: schema_utils_1.Type.String(),\n    public_key: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n});\nvar DebugButton;\n(function (DebugButton) {\n    DebugButton[DebugButton[\"NO\"] = 0] = \"NO\";\n    DebugButton[DebugButton[\"YES\"] = 1] = \"YES\";\n    DebugButton[DebugButton[\"INFO\"] = 2] = \"INFO\";\n})(DebugButton || (exports.DebugButton = DebugButton = {}));\nexports.EnumDebugButton = schema_utils_1.Type.Enum(DebugButton);\nvar DebugPhysicalButton;\n(function (DebugPhysicalButton) {\n    DebugPhysicalButton[DebugPhysicalButton[\"LEFT_BTN\"] = 0] = \"LEFT_BTN\";\n    DebugPhysicalButton[DebugPhysicalButton[\"MIDDLE_BTN\"] = 1] = \"MIDDLE_BTN\";\n    DebugPhysicalButton[DebugPhysicalButton[\"RIGHT_BTN\"] = 2] = \"RIGHT_BTN\";\n})(DebugPhysicalButton || (exports.DebugPhysicalButton = DebugPhysicalButton = {}));\nexports.EnumDebugPhysicalButton = schema_utils_1.Type.Enum(DebugPhysicalButton);\nexports.DebugLinkResetDebugEvents = schema_utils_1.Type.Object({});\nexports.EosGetPublicKey = schema_utils_1.Type.Object({\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    show_display: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n});\nexports.EosPublicKey = schema_utils_1.Type.Object({\n    wif_public_key: schema_utils_1.Type.String(),\n    raw_public_key: schema_utils_1.Type.String(),\n});\nexports.EosTxHeader = schema_utils_1.Type.Object({\n    expiration: schema_utils_1.Type.Number(),\n    ref_block_num: schema_utils_1.Type.Number(),\n    ref_block_prefix: schema_utils_1.Type.Number(),\n    max_net_usage_words: schema_utils_1.Type.Number(),\n    max_cpu_usage_ms: schema_utils_1.Type.Number(),\n    delay_sec: schema_utils_1.Type.Number(),\n});\nexports.EosSignTx = schema_utils_1.Type.Object({\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    chain_id: schema_utils_1.Type.String(),\n    header: exports.EosTxHeader,\n    num_actions: schema_utils_1.Type.Number(),\n    chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n});\nexports.EosTxActionRequest = schema_utils_1.Type.Object({\n    data_size: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n});\nexports.EosAsset = schema_utils_1.Type.Object({\n    amount: schema_utils_1.Type.Uint(),\n    symbol: schema_utils_1.Type.String(),\n});\nexports.EosPermissionLevel = schema_utils_1.Type.Object({\n    actor: schema_utils_1.Type.String(),\n    permission: schema_utils_1.Type.String(),\n});\nexports.EosAuthorizationKey = schema_utils_1.Type.Object({\n    type: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    key: schema_utils_1.Type.String(),\n    address_n: schema_utils_1.Type.Optional(schema_utils_1.Type.Array(schema_utils_1.Type.Number())),\n    weight: schema_utils_1.Type.Number(),\n});\nexports.EosAuthorizationAccount = schema_utils_1.Type.Object({\n    account: exports.EosPermissionLevel,\n    weight: schema_utils_1.Type.Number(),\n});\nexports.EosAuthorizationWait = schema_utils_1.Type.Object({\n    wait_sec: schema_utils_1.Type.Number(),\n    weight: schema_utils_1.Type.Number(),\n});\nexports.EosAuthorization = schema_utils_1.Type.Object({\n    threshold: schema_utils_1.Type.Number(),\n    keys: schema_utils_1.Type.Array(exports.EosAuthorizationKey),\n    accounts: schema_utils_1.Type.Array(exports.EosAuthorizationAccount),\n    waits: schema_utils_1.Type.Array(exports.EosAuthorizationWait),\n});\nexports.EosActionCommon = schema_utils_1.Type.Object({\n    account: schema_utils_1.Type.String(),\n    name: schema_utils_1.Type.String(),\n    authorization: schema_utils_1.Type.Array(exports.EosPermissionLevel),\n});\nexports.EosActionTransfer = schema_utils_1.Type.Object({\n    sender: schema_utils_1.Type.String(),\n    receiver: schema_utils_1.Type.String(),\n    quantity: exports.EosAsset,\n    memo: schema_utils_1.Type.String(),\n});\nexports.EosActionDelegate = schema_utils_1.Type.Object({\n    sender: schema_utils_1.Type.String(),\n    receiver: schema_utils_1.Type.String(),\n    net_quantity: exports.EosAsset,\n    cpu_quantity: exports.EosAsset,\n    transfer: schema_utils_1.Type.Boolean(),\n});\nexports.EosActionUndelegate = schema_utils_1.Type.Object({\n    sender: schema_utils_1.Type.String(),\n    receiver: schema_utils_1.Type.String(),\n    net_quantity: exports.EosAsset,\n    cpu_quantity: exports.EosAsset,\n});\nexports.EosActionRefund = schema_utils_1.Type.Object({\n    owner: schema_utils_1.Type.String(),\n});\nexports.EosActionBuyRam = schema_utils_1.Type.Object({\n    payer: schema_utils_1.Type.String(),\n    receiver: schema_utils_1.Type.String(),\n    quantity: exports.EosAsset,\n});\nexports.EosActionBuyRamBytes = schema_utils_1.Type.Object({\n    payer: schema_utils_1.Type.String(),\n    receiver: schema_utils_1.Type.String(),\n    bytes: schema_utils_1.Type.Number(),\n});\nexports.EosActionSellRam = schema_utils_1.Type.Object({\n    account: schema_utils_1.Type.String(),\n    bytes: schema_utils_1.Type.Number(),\n});\nexports.EosActionVoteProducer = schema_utils_1.Type.Object({\n    voter: schema_utils_1.Type.String(),\n    proxy: schema_utils_1.Type.String(),\n    producers: schema_utils_1.Type.Array(schema_utils_1.Type.String()),\n});\nexports.EosActionUpdateAuth = schema_utils_1.Type.Object({\n    account: schema_utils_1.Type.String(),\n    permission: schema_utils_1.Type.String(),\n    parent: schema_utils_1.Type.String(),\n    auth: exports.EosAuthorization,\n});\nexports.EosActionDeleteAuth = schema_utils_1.Type.Object({\n    account: schema_utils_1.Type.String(),\n    permission: schema_utils_1.Type.String(),\n});\nexports.EosActionLinkAuth = schema_utils_1.Type.Object({\n    account: schema_utils_1.Type.String(),\n    code: schema_utils_1.Type.String(),\n    type: schema_utils_1.Type.String(),\n    requirement: schema_utils_1.Type.String(),\n});\nexports.EosActionUnlinkAuth = schema_utils_1.Type.Object({\n    account: schema_utils_1.Type.String(),\n    code: schema_utils_1.Type.String(),\n    type: schema_utils_1.Type.String(),\n});\nexports.EosActionNewAccount = schema_utils_1.Type.Object({\n    creator: schema_utils_1.Type.String(),\n    name: schema_utils_1.Type.String(),\n    owner: exports.EosAuthorization,\n    active: exports.EosAuthorization,\n});\nexports.EosActionUnknown = schema_utils_1.Type.Object({\n    data_size: schema_utils_1.Type.Number(),\n    data_chunk: schema_utils_1.Type.String(),\n});\nexports.EosTxActionAck = schema_utils_1.Type.Object({\n    common: exports.EosActionCommon,\n    transfer: schema_utils_1.Type.Optional(exports.EosActionTransfer),\n    delegate: schema_utils_1.Type.Optional(exports.EosActionDelegate),\n    undelegate: schema_utils_1.Type.Optional(exports.EosActionUndelegate),\n    refund: schema_utils_1.Type.Optional(exports.EosActionRefund),\n    buy_ram: schema_utils_1.Type.Optional(exports.EosActionBuyRam),\n    buy_ram_bytes: schema_utils_1.Type.Optional(exports.EosActionBuyRamBytes),\n    sell_ram: schema_utils_1.Type.Optional(exports.EosActionSellRam),\n    vote_producer: schema_utils_1.Type.Optional(exports.EosActionVoteProducer),\n    update_auth: schema_utils_1.Type.Optional(exports.EosActionUpdateAuth),\n    delete_auth: schema_utils_1.Type.Optional(exports.EosActionDeleteAuth),\n    link_auth: schema_utils_1.Type.Optional(exports.EosActionLinkAuth),\n    unlink_auth: schema_utils_1.Type.Optional(exports.EosActionUnlinkAuth),\n    new_account: schema_utils_1.Type.Optional(exports.EosActionNewAccount),\n    unknown: schema_utils_1.Type.Optional(exports.EosActionUnknown),\n});\nexports.EosSignedTx = schema_utils_1.Type.Object({\n    signature: schema_utils_1.Type.String(),\n});\nvar EthereumDefinitionType;\n(function (EthereumDefinitionType) {\n    EthereumDefinitionType[EthereumDefinitionType[\"NETWORK\"] = 0] = \"NETWORK\";\n    EthereumDefinitionType[EthereumDefinitionType[\"TOKEN\"] = 1] = \"TOKEN\";\n})(EthereumDefinitionType || (exports.EthereumDefinitionType = EthereumDefinitionType = {}));\nexports.EnumEthereumDefinitionType = schema_utils_1.Type.Enum(EthereumDefinitionType);\nexports.EthereumNetworkInfo = schema_utils_1.Type.Object({\n    chain_id: schema_utils_1.Type.Number(),\n    symbol: schema_utils_1.Type.String(),\n    slip44: schema_utils_1.Type.Number(),\n    name: schema_utils_1.Type.String(),\n});\nexports.EthereumTokenInfo = schema_utils_1.Type.Object({\n    address: schema_utils_1.Type.String(),\n    chain_id: schema_utils_1.Type.Number(),\n    symbol: schema_utils_1.Type.String(),\n    decimals: schema_utils_1.Type.Number(),\n    name: schema_utils_1.Type.String(),\n});\nexports.EthereumDefinitions = schema_utils_1.Type.Object({\n    encoded_network: schema_utils_1.Type.Optional(schema_utils_1.Type.ArrayBuffer()),\n    encoded_token: schema_utils_1.Type.Optional(schema_utils_1.Type.ArrayBuffer()),\n});\nexports.EthereumSignTypedData = schema_utils_1.Type.Object({\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    primary_type: schema_utils_1.Type.String(),\n    metamask_v4_compat: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    definitions: schema_utils_1.Type.Optional(exports.EthereumDefinitions),\n});\nexports.EthereumTypedDataStructRequest = schema_utils_1.Type.Object({\n    name: schema_utils_1.Type.String(),\n});\nvar EthereumDataType;\n(function (EthereumDataType) {\n    EthereumDataType[EthereumDataType[\"UINT\"] = 1] = \"UINT\";\n    EthereumDataType[EthereumDataType[\"INT\"] = 2] = \"INT\";\n    EthereumDataType[EthereumDataType[\"BYTES\"] = 3] = \"BYTES\";\n    EthereumDataType[EthereumDataType[\"STRING\"] = 4] = \"STRING\";\n    EthereumDataType[EthereumDataType[\"BOOL\"] = 5] = \"BOOL\";\n    EthereumDataType[EthereumDataType[\"ADDRESS\"] = 6] = \"ADDRESS\";\n    EthereumDataType[EthereumDataType[\"ARRAY\"] = 7] = \"ARRAY\";\n    EthereumDataType[EthereumDataType[\"STRUCT\"] = 8] = \"STRUCT\";\n})(EthereumDataType || (exports.EthereumDataType = EthereumDataType = {}));\nexports.EnumEthereumDataType = schema_utils_1.Type.Enum(EthereumDataType);\nexports.EthereumFieldType = schema_utils_1.Type.Recursive(This => schema_utils_1.Type.Object({\n    data_type: exports.EnumEthereumDataType,\n    size: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    entry_type: schema_utils_1.Type.Optional(This),\n    struct_name: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n}));\nexports.EthereumStructMember = schema_utils_1.Type.Object({\n    type: exports.EthereumFieldType,\n    name: schema_utils_1.Type.String(),\n});\nexports.EthereumTypedDataStructAck = schema_utils_1.Type.Object({\n    members: schema_utils_1.Type.Array(exports.EthereumStructMember),\n});\nexports.EthereumTypedDataValueRequest = schema_utils_1.Type.Object({\n    member_path: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n});\nexports.EthereumTypedDataValueAck = schema_utils_1.Type.Object({\n    value: schema_utils_1.Type.String(),\n});\nexports.EthereumGetPublicKey = schema_utils_1.Type.Object({\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    show_display: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n});\nexports.EthereumPublicKey = schema_utils_1.Type.Object({\n    node: exports.HDNodeType,\n    xpub: schema_utils_1.Type.String(),\n});\nexports.EthereumGetAddress = schema_utils_1.Type.Object({\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    show_display: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    encoded_network: schema_utils_1.Type.Optional(schema_utils_1.Type.ArrayBuffer()),\n    chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n});\nexports.EthereumAddress = schema_utils_1.Type.Object({\n    _old_address: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    address: schema_utils_1.Type.String(),\n});\nexports.EthereumSignTx = schema_utils_1.Type.Object({\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    nonce: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    gas_price: schema_utils_1.Type.String(),\n    gas_limit: schema_utils_1.Type.String(),\n    to: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    value: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    data_initial_chunk: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    data_length: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    chain_id: schema_utils_1.Type.Number(),\n    tx_type: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    definitions: schema_utils_1.Type.Optional(exports.EthereumDefinitions),\n    chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n});\nexports.EthereumAccessList = schema_utils_1.Type.Object({\n    address: schema_utils_1.Type.String(),\n    storage_keys: schema_utils_1.Type.Array(schema_utils_1.Type.String()),\n});\nexports.EthereumSignTxEIP1559 = schema_utils_1.Type.Object({\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    nonce: schema_utils_1.Type.String(),\n    max_gas_fee: schema_utils_1.Type.String(),\n    max_priority_fee: schema_utils_1.Type.String(),\n    gas_limit: schema_utils_1.Type.String(),\n    to: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    value: schema_utils_1.Type.String(),\n    data_initial_chunk: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    data_length: schema_utils_1.Type.Number(),\n    chain_id: schema_utils_1.Type.Number(),\n    access_list: schema_utils_1.Type.Array(exports.EthereumAccessList),\n    definitions: schema_utils_1.Type.Optional(exports.EthereumDefinitions),\n    chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n});\nexports.EthereumTxRequest = schema_utils_1.Type.Object({\n    data_length: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    signature_v: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    signature_r: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    signature_s: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n});\nexports.EthereumTxAck = schema_utils_1.Type.Object({\n    data_chunk: schema_utils_1.Type.String(),\n});\nexports.EthereumSignMessage = schema_utils_1.Type.Object({\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    message: schema_utils_1.Type.String(),\n    encoded_network: schema_utils_1.Type.Optional(schema_utils_1.Type.ArrayBuffer()),\n    chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n});\nexports.EthereumMessageSignature = schema_utils_1.Type.Object({\n    signature: schema_utils_1.Type.String(),\n    address: schema_utils_1.Type.String(),\n});\nexports.EthereumVerifyMessage = schema_utils_1.Type.Object({\n    signature: schema_utils_1.Type.String(),\n    message: schema_utils_1.Type.String(),\n    address: schema_utils_1.Type.String(),\n    chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n});\nexports.EthereumSignTypedHash = schema_utils_1.Type.Object({\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    domain_separator_hash: schema_utils_1.Type.String(),\n    message_hash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    encoded_network: schema_utils_1.Type.Optional(schema_utils_1.Type.ArrayBuffer()),\n});\nexports.EthereumTypedDataSignature = schema_utils_1.Type.Object({\n    signature: schema_utils_1.Type.String(),\n    address: schema_utils_1.Type.String(),\n});\nvar Enum_BackupType;\n(function (Enum_BackupType) {\n    Enum_BackupType[Enum_BackupType[\"Bip39\"] = 0] = \"Bip39\";\n    Enum_BackupType[Enum_BackupType[\"Slip39_Basic\"] = 1] = \"Slip39_Basic\";\n    Enum_BackupType[Enum_BackupType[\"Slip39_Advanced\"] = 2] = \"Slip39_Advanced\";\n})(Enum_BackupType || (exports.Enum_BackupType = Enum_BackupType = {}));\nexports.EnumEnum_BackupType = schema_utils_1.Type.Enum(Enum_BackupType);\nexports.BackupType = schema_utils_1.Type.KeyOfEnum(Enum_BackupType);\nvar Enum_SafetyCheckLevel;\n(function (Enum_SafetyCheckLevel) {\n    Enum_SafetyCheckLevel[Enum_SafetyCheckLevel[\"Strict\"] = 0] = \"Strict\";\n    Enum_SafetyCheckLevel[Enum_SafetyCheckLevel[\"PromptAlways\"] = 1] = \"PromptAlways\";\n    Enum_SafetyCheckLevel[Enum_SafetyCheckLevel[\"PromptTemporarily\"] = 2] = \"PromptTemporarily\";\n})(Enum_SafetyCheckLevel || (exports.Enum_SafetyCheckLevel = Enum_SafetyCheckLevel = {}));\nexports.EnumEnum_SafetyCheckLevel = schema_utils_1.Type.Enum(Enum_SafetyCheckLevel);\nexports.SafetyCheckLevel = schema_utils_1.Type.KeyOfEnum(Enum_SafetyCheckLevel);\nvar Enum_HomescreenFormat;\n(function (Enum_HomescreenFormat) {\n    Enum_HomescreenFormat[Enum_HomescreenFormat[\"Toif\"] = 1] = \"Toif\";\n    Enum_HomescreenFormat[Enum_HomescreenFormat[\"Jpeg\"] = 2] = \"Jpeg\";\n    Enum_HomescreenFormat[Enum_HomescreenFormat[\"ToiG\"] = 3] = \"ToiG\";\n})(Enum_HomescreenFormat || (exports.Enum_HomescreenFormat = Enum_HomescreenFormat = {}));\nexports.EnumEnum_HomescreenFormat = schema_utils_1.Type.Enum(Enum_HomescreenFormat);\nexports.HomescreenFormat = schema_utils_1.Type.KeyOfEnum(Enum_HomescreenFormat);\nexports.Initialize = schema_utils_1.Type.Object({\n    session_id: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    _skip_passphrase: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    derive_cardano: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n});\nexports.GetFeatures = schema_utils_1.Type.Object({});\nvar Enum_Capability;\n(function (Enum_Capability) {\n    Enum_Capability[Enum_Capability[\"Capability_Bitcoin\"] = 1] = \"Capability_Bitcoin\";\n    Enum_Capability[Enum_Capability[\"Capability_Bitcoin_like\"] = 2] = \"Capability_Bitcoin_like\";\n    Enum_Capability[Enum_Capability[\"Capability_Binance\"] = 3] = \"Capability_Binance\";\n    Enum_Capability[Enum_Capability[\"Capability_Cardano\"] = 4] = \"Capability_Cardano\";\n    Enum_Capability[Enum_Capability[\"Capability_Crypto\"] = 5] = \"Capability_Crypto\";\n    Enum_Capability[Enum_Capability[\"Capability_EOS\"] = 6] = \"Capability_EOS\";\n    Enum_Capability[Enum_Capability[\"Capability_Ethereum\"] = 7] = \"Capability_Ethereum\";\n    Enum_Capability[Enum_Capability[\"Capability_Lisk\"] = 8] = \"Capability_Lisk\";\n    Enum_Capability[Enum_Capability[\"Capability_Monero\"] = 9] = \"Capability_Monero\";\n    Enum_Capability[Enum_Capability[\"Capability_NEM\"] = 10] = \"Capability_NEM\";\n    Enum_Capability[Enum_Capability[\"Capability_Ripple\"] = 11] = \"Capability_Ripple\";\n    Enum_Capability[Enum_Capability[\"Capability_Stellar\"] = 12] = \"Capability_Stellar\";\n    Enum_Capability[Enum_Capability[\"Capability_Tezos\"] = 13] = \"Capability_Tezos\";\n    Enum_Capability[Enum_Capability[\"Capability_U2F\"] = 14] = \"Capability_U2F\";\n    Enum_Capability[Enum_Capability[\"Capability_Shamir\"] = 15] = \"Capability_Shamir\";\n    Enum_Capability[Enum_Capability[\"Capability_ShamirGroups\"] = 16] = \"Capability_ShamirGroups\";\n    Enum_Capability[Enum_Capability[\"Capability_PassphraseEntry\"] = 17] = \"Capability_PassphraseEntry\";\n    Enum_Capability[Enum_Capability[\"Capability_Solana\"] = 18] = \"Capability_Solana\";\n})(Enum_Capability || (exports.Enum_Capability = Enum_Capability = {}));\nexports.EnumEnum_Capability = schema_utils_1.Type.Enum(Enum_Capability);\nexports.Capability = schema_utils_1.Type.KeyOfEnum(Enum_Capability);\nexports.Features = schema_utils_1.Type.Object({\n    vendor: schema_utils_1.Type.String(),\n    major_version: schema_utils_1.Type.Number(),\n    minor_version: schema_utils_1.Type.Number(),\n    patch_version: schema_utils_1.Type.Number(),\n    bootloader_mode: schema_utils_1.Type.Union([schema_utils_1.Type.Boolean(), schema_utils_1.Type.Null()]),\n    device_id: schema_utils_1.Type.Union([schema_utils_1.Type.String(), schema_utils_1.Type.Null()]),\n    pin_protection: schema_utils_1.Type.Union([schema_utils_1.Type.Boolean(), schema_utils_1.Type.Null()]),\n    passphrase_protection: schema_utils_1.Type.Union([schema_utils_1.Type.Boolean(), schema_utils_1.Type.Null()]),\n    language: schema_utils_1.Type.Union([schema_utils_1.Type.String(), schema_utils_1.Type.Null()]),\n    label: schema_utils_1.Type.Union([schema_utils_1.Type.String(), schema_utils_1.Type.Null()]),\n    initialized: schema_utils_1.Type.Union([schema_utils_1.Type.Boolean(), schema_utils_1.Type.Null()]),\n    revision: schema_utils_1.Type.Union([schema_utils_1.Type.String(), schema_utils_1.Type.Null()]),\n    bootloader_hash: schema_utils_1.Type.Union([schema_utils_1.Type.String(), schema_utils_1.Type.Null()]),\n    imported: schema_utils_1.Type.Union([schema_utils_1.Type.Boolean(), schema_utils_1.Type.Null()]),\n    unlocked: schema_utils_1.Type.Union([schema_utils_1.Type.Boolean(), schema_utils_1.Type.Null()]),\n    _passphrase_cached: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    firmware_present: schema_utils_1.Type.Union([schema_utils_1.Type.Boolean(), schema_utils_1.Type.Null()]),\n    needs_backup: schema_utils_1.Type.Union([schema_utils_1.Type.Boolean(), schema_utils_1.Type.Null()]),\n    flags: schema_utils_1.Type.Union([schema_utils_1.Type.Number(), schema_utils_1.Type.Null()]),\n    model: schema_utils_1.Type.String(),\n    fw_major: schema_utils_1.Type.Union([schema_utils_1.Type.Number(), schema_utils_1.Type.Null()]),\n    fw_minor: schema_utils_1.Type.Union([schema_utils_1.Type.Number(), schema_utils_1.Type.Null()]),\n    fw_patch: schema_utils_1.Type.Union([schema_utils_1.Type.Number(), schema_utils_1.Type.Null()]),\n    fw_vendor: schema_utils_1.Type.Union([schema_utils_1.Type.String(), schema_utils_1.Type.Null()]),\n    unfinished_backup: schema_utils_1.Type.Union([schema_utils_1.Type.Boolean(), schema_utils_1.Type.Null()]),\n    no_backup: schema_utils_1.Type.Union([schema_utils_1.Type.Boolean(), schema_utils_1.Type.Null()]),\n    recovery_mode: schema_utils_1.Type.Union([schema_utils_1.Type.Boolean(), schema_utils_1.Type.Null()]),\n    capabilities: schema_utils_1.Type.Array(exports.Capability),\n    backup_type: schema_utils_1.Type.Union([exports.BackupType, schema_utils_1.Type.Null()]),\n    sd_card_present: schema_utils_1.Type.Union([schema_utils_1.Type.Boolean(), schema_utils_1.Type.Null()]),\n    sd_protection: schema_utils_1.Type.Union([schema_utils_1.Type.Boolean(), schema_utils_1.Type.Null()]),\n    wipe_code_protection: schema_utils_1.Type.Union([schema_utils_1.Type.Boolean(), schema_utils_1.Type.Null()]),\n    session_id: schema_utils_1.Type.Union([schema_utils_1.Type.String(), schema_utils_1.Type.Null()]),\n    passphrase_always_on_device: schema_utils_1.Type.Union([schema_utils_1.Type.Boolean(), schema_utils_1.Type.Null()]),\n    safety_checks: schema_utils_1.Type.Union([exports.SafetyCheckLevel, schema_utils_1.Type.Null()]),\n    auto_lock_delay_ms: schema_utils_1.Type.Union([schema_utils_1.Type.Number(), schema_utils_1.Type.Null()]),\n    display_rotation: schema_utils_1.Type.Union([schema_utils_1.Type.Number(), schema_utils_1.Type.Null()]),\n    experimental_features: schema_utils_1.Type.Union([schema_utils_1.Type.Boolean(), schema_utils_1.Type.Null()]),\n    busy: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    homescreen_format: schema_utils_1.Type.Optional(exports.HomescreenFormat),\n    hide_passphrase_from_host: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    internal_model: exports.EnumDeviceModelInternal,\n    unit_color: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    unit_btconly: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    homescreen_width: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    homescreen_height: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    bootloader_locked: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n});\nexports.LockDevice = schema_utils_1.Type.Object({});\nexports.SetBusy = schema_utils_1.Type.Object({\n    expiry_ms: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n});\nexports.EndSession = schema_utils_1.Type.Object({});\nexports.ApplySettings = schema_utils_1.Type.Object({\n    language: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    label: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    use_passphrase: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    homescreen: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    _passphrase_source: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    auto_lock_delay_ms: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    display_rotation: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    passphrase_always_on_device: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    safety_checks: schema_utils_1.Type.Optional(exports.SafetyCheckLevel),\n    experimental_features: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    hide_passphrase_from_host: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n});\nexports.ApplyFlags = schema_utils_1.Type.Object({\n    flags: schema_utils_1.Type.Number(),\n});\nexports.ChangePin = schema_utils_1.Type.Object({\n    remove: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n});\nexports.ChangeWipeCode = schema_utils_1.Type.Object({\n    remove: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n});\nvar SdProtectOperationType;\n(function (SdProtectOperationType) {\n    SdProtectOperationType[SdProtectOperationType[\"DISABLE\"] = 0] = \"DISABLE\";\n    SdProtectOperationType[SdProtectOperationType[\"ENABLE\"] = 1] = \"ENABLE\";\n    SdProtectOperationType[SdProtectOperationType[\"REFRESH\"] = 2] = \"REFRESH\";\n})(SdProtectOperationType || (exports.SdProtectOperationType = SdProtectOperationType = {}));\nexports.EnumSdProtectOperationType = schema_utils_1.Type.Enum(SdProtectOperationType);\nexports.SdProtect = schema_utils_1.Type.Object({\n    operation: exports.EnumSdProtectOperationType,\n});\nexports.Ping = schema_utils_1.Type.Object({\n    message: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    button_protection: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n});\nexports.Cancel = schema_utils_1.Type.Object({});\nexports.GetEntropy = schema_utils_1.Type.Object({\n    size: schema_utils_1.Type.Number(),\n});\nexports.Entropy = schema_utils_1.Type.Object({\n    entropy: schema_utils_1.Type.String(),\n});\nexports.GetFirmwareHash = schema_utils_1.Type.Object({\n    challenge: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n});\nexports.FirmwareHash = schema_utils_1.Type.Object({\n    hash: schema_utils_1.Type.String(),\n});\nexports.AuthenticateDevice = schema_utils_1.Type.Object({\n    challenge: schema_utils_1.Type.String(),\n});\nexports.AuthenticityProof = schema_utils_1.Type.Object({\n    certificates: schema_utils_1.Type.Array(schema_utils_1.Type.String()),\n    signature: schema_utils_1.Type.String(),\n});\nexports.WipeDevice = schema_utils_1.Type.Object({});\nexports.ResetDevice = schema_utils_1.Type.Object({\n    display_random: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    strength: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    passphrase_protection: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    pin_protection: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    language: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    label: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    u2f_counter: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    skip_backup: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    no_backup: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    backup_type: schema_utils_1.Type.Optional(schema_utils_1.Type.Union([schema_utils_1.Type.String(), schema_utils_1.Type.Number()])),\n});\nexports.BackupDevice = schema_utils_1.Type.Object({});\nexports.EntropyRequest = schema_utils_1.Type.Object({});\nexports.EntropyAck = schema_utils_1.Type.Object({\n    entropy: schema_utils_1.Type.String(),\n});\nvar RecoveryDeviceType;\n(function (RecoveryDeviceType) {\n    RecoveryDeviceType[RecoveryDeviceType[\"RecoveryDeviceType_ScrambledWords\"] = 0] = \"RecoveryDeviceType_ScrambledWords\";\n    RecoveryDeviceType[RecoveryDeviceType[\"RecoveryDeviceType_Matrix\"] = 1] = \"RecoveryDeviceType_Matrix\";\n})(RecoveryDeviceType || (exports.RecoveryDeviceType = RecoveryDeviceType = {}));\nexports.EnumRecoveryDeviceType = schema_utils_1.Type.Enum(RecoveryDeviceType);\nexports.RecoveryDevice = schema_utils_1.Type.Object({\n    word_count: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    passphrase_protection: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    pin_protection: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    language: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    label: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    enforce_wordlist: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    type: schema_utils_1.Type.Optional(exports.EnumRecoveryDeviceType),\n    u2f_counter: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    dry_run: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n});\nvar Enum_WordRequestType;\n(function (Enum_WordRequestType) {\n    Enum_WordRequestType[Enum_WordRequestType[\"WordRequestType_Plain\"] = 0] = \"WordRequestType_Plain\";\n    Enum_WordRequestType[Enum_WordRequestType[\"WordRequestType_Matrix9\"] = 1] = \"WordRequestType_Matrix9\";\n    Enum_WordRequestType[Enum_WordRequestType[\"WordRequestType_Matrix6\"] = 2] = \"WordRequestType_Matrix6\";\n})(Enum_WordRequestType || (exports.Enum_WordRequestType = Enum_WordRequestType = {}));\nexports.EnumEnum_WordRequestType = schema_utils_1.Type.Enum(Enum_WordRequestType);\nexports.WordRequestType = schema_utils_1.Type.KeyOfEnum(Enum_WordRequestType);\nexports.WordRequest = schema_utils_1.Type.Object({\n    type: exports.WordRequestType,\n});\nexports.WordAck = schema_utils_1.Type.Object({\n    word: schema_utils_1.Type.String(),\n});\nexports.SetU2FCounter = schema_utils_1.Type.Object({\n    u2f_counter: schema_utils_1.Type.Number(),\n});\nexports.GetNextU2FCounter = schema_utils_1.Type.Object({});\nexports.NextU2FCounter = schema_utils_1.Type.Object({\n    u2f_counter: schema_utils_1.Type.Number(),\n});\nexports.DoPreauthorized = schema_utils_1.Type.Object({});\nexports.PreauthorizedRequest = schema_utils_1.Type.Object({});\nexports.CancelAuthorization = schema_utils_1.Type.Object({});\nvar BootCommand;\n(function (BootCommand) {\n    BootCommand[BootCommand[\"STOP_AND_WAIT\"] = 0] = \"STOP_AND_WAIT\";\n    BootCommand[BootCommand[\"INSTALL_UPGRADE\"] = 1] = \"INSTALL_UPGRADE\";\n})(BootCommand || (exports.BootCommand = BootCommand = {}));\nexports.EnumBootCommand = schema_utils_1.Type.Enum(BootCommand);\nexports.RebootToBootloader = schema_utils_1.Type.Object({\n    boot_command: schema_utils_1.Type.Optional(exports.EnumBootCommand),\n    firmware_header: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n});\nexports.GetNonce = schema_utils_1.Type.Object({});\nexports.Nonce = schema_utils_1.Type.Object({\n    nonce: schema_utils_1.Type.String(),\n});\nexports.UnlockPath = schema_utils_1.Type.Object({\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    mac: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n});\nexports.UnlockedPathRequest = schema_utils_1.Type.Object({\n    mac: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n});\nexports.ShowDeviceTutorial = schema_utils_1.Type.Object({});\nexports.UnlockBootloader = schema_utils_1.Type.Object({});\nvar MoneroNetworkType;\n(function (MoneroNetworkType) {\n    MoneroNetworkType[MoneroNetworkType[\"MAINNET\"] = 0] = \"MAINNET\";\n    MoneroNetworkType[MoneroNetworkType[\"TESTNET\"] = 1] = \"TESTNET\";\n    MoneroNetworkType[MoneroNetworkType[\"STAGENET\"] = 2] = \"STAGENET\";\n    MoneroNetworkType[MoneroNetworkType[\"FAKECHAIN\"] = 3] = \"FAKECHAIN\";\n})(MoneroNetworkType || (exports.MoneroNetworkType = MoneroNetworkType = {}));\nexports.EnumMoneroNetworkType = schema_utils_1.Type.Enum(MoneroNetworkType);\nexports.NEMGetAddress = schema_utils_1.Type.Object({\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    network: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    show_display: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n});\nexports.NEMAddress = schema_utils_1.Type.Object({\n    address: schema_utils_1.Type.String(),\n});\nexports.NEMTransactionCommon = schema_utils_1.Type.Object({\n    address_n: schema_utils_1.Type.Optional(schema_utils_1.Type.Array(schema_utils_1.Type.Number())),\n    network: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    timestamp: schema_utils_1.Type.Number(),\n    fee: schema_utils_1.Type.Uint(),\n    deadline: schema_utils_1.Type.Number(),\n    signer: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n});\nexports.NEMMosaic = schema_utils_1.Type.Object({\n    namespace: schema_utils_1.Type.String(),\n    mosaic: schema_utils_1.Type.String(),\n    quantity: schema_utils_1.Type.Number(),\n});\nexports.NEMTransfer = schema_utils_1.Type.Object({\n    recipient: schema_utils_1.Type.String(),\n    amount: schema_utils_1.Type.Uint(),\n    payload: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    public_key: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    mosaics: schema_utils_1.Type.Optional(schema_utils_1.Type.Array(exports.NEMMosaic)),\n});\nexports.NEMProvisionNamespace = schema_utils_1.Type.Object({\n    namespace: schema_utils_1.Type.String(),\n    parent: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    sink: schema_utils_1.Type.String(),\n    fee: schema_utils_1.Type.Uint(),\n});\nvar NEMMosaicLevy;\n(function (NEMMosaicLevy) {\n    NEMMosaicLevy[NEMMosaicLevy[\"MosaicLevy_Absolute\"] = 1] = \"MosaicLevy_Absolute\";\n    NEMMosaicLevy[NEMMosaicLevy[\"MosaicLevy_Percentile\"] = 2] = \"MosaicLevy_Percentile\";\n})(NEMMosaicLevy || (exports.NEMMosaicLevy = NEMMosaicLevy = {}));\nexports.EnumNEMMosaicLevy = schema_utils_1.Type.Enum(NEMMosaicLevy);\nexports.NEMMosaicDefinition = schema_utils_1.Type.Object({\n    name: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    ticker: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    namespace: schema_utils_1.Type.String(),\n    mosaic: schema_utils_1.Type.String(),\n    divisibility: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    levy: schema_utils_1.Type.Optional(exports.EnumNEMMosaicLevy),\n    fee: schema_utils_1.Type.Optional(schema_utils_1.Type.Uint()),\n    levy_address: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    levy_namespace: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    levy_mosaic: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    supply: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    mutable_supply: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    transferable: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    description: schema_utils_1.Type.String(),\n    networks: schema_utils_1.Type.Optional(schema_utils_1.Type.Array(schema_utils_1.Type.Number())),\n});\nexports.NEMMosaicCreation = schema_utils_1.Type.Object({\n    definition: exports.NEMMosaicDefinition,\n    sink: schema_utils_1.Type.String(),\n    fee: schema_utils_1.Type.Uint(),\n});\nvar NEMSupplyChangeType;\n(function (NEMSupplyChangeType) {\n    NEMSupplyChangeType[NEMSupplyChangeType[\"SupplyChange_Increase\"] = 1] = \"SupplyChange_Increase\";\n    NEMSupplyChangeType[NEMSupplyChangeType[\"SupplyChange_Decrease\"] = 2] = \"SupplyChange_Decrease\";\n})(NEMSupplyChangeType || (exports.NEMSupplyChangeType = NEMSupplyChangeType = {}));\nexports.EnumNEMSupplyChangeType = schema_utils_1.Type.Enum(NEMSupplyChangeType);\nexports.NEMMosaicSupplyChange = schema_utils_1.Type.Object({\n    namespace: schema_utils_1.Type.String(),\n    mosaic: schema_utils_1.Type.String(),\n    type: exports.EnumNEMSupplyChangeType,\n    delta: schema_utils_1.Type.Number(),\n});\nvar NEMModificationType;\n(function (NEMModificationType) {\n    NEMModificationType[NEMModificationType[\"CosignatoryModification_Add\"] = 1] = \"CosignatoryModification_Add\";\n    NEMModificationType[NEMModificationType[\"CosignatoryModification_Delete\"] = 2] = \"CosignatoryModification_Delete\";\n})(NEMModificationType || (exports.NEMModificationType = NEMModificationType = {}));\nexports.EnumNEMModificationType = schema_utils_1.Type.Enum(NEMModificationType);\nexports.NEMCosignatoryModification = schema_utils_1.Type.Object({\n    type: exports.EnumNEMModificationType,\n    public_key: schema_utils_1.Type.String(),\n});\nexports.NEMAggregateModification = schema_utils_1.Type.Object({\n    modifications: schema_utils_1.Type.Optional(schema_utils_1.Type.Array(exports.NEMCosignatoryModification)),\n    relative_change: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n});\nvar NEMImportanceTransferMode;\n(function (NEMImportanceTransferMode) {\n    NEMImportanceTransferMode[NEMImportanceTransferMode[\"ImportanceTransfer_Activate\"] = 1] = \"ImportanceTransfer_Activate\";\n    NEMImportanceTransferMode[NEMImportanceTransferMode[\"ImportanceTransfer_Deactivate\"] = 2] = \"ImportanceTransfer_Deactivate\";\n})(NEMImportanceTransferMode || (exports.NEMImportanceTransferMode = NEMImportanceTransferMode = {}));\nexports.EnumNEMImportanceTransferMode = schema_utils_1.Type.Enum(NEMImportanceTransferMode);\nexports.NEMImportanceTransfer = schema_utils_1.Type.Object({\n    mode: exports.EnumNEMImportanceTransferMode,\n    public_key: schema_utils_1.Type.String(),\n});\nexports.NEMSignTx = schema_utils_1.Type.Object({\n    transaction: exports.NEMTransactionCommon,\n    multisig: schema_utils_1.Type.Optional(exports.NEMTransactionCommon),\n    transfer: schema_utils_1.Type.Optional(exports.NEMTransfer),\n    cosigning: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    provision_namespace: schema_utils_1.Type.Optional(exports.NEMProvisionNamespace),\n    mosaic_creation: schema_utils_1.Type.Optional(exports.NEMMosaicCreation),\n    supply_change: schema_utils_1.Type.Optional(exports.NEMMosaicSupplyChange),\n    aggregate_modification: schema_utils_1.Type.Optional(exports.NEMAggregateModification),\n    importance_transfer: schema_utils_1.Type.Optional(exports.NEMImportanceTransfer),\n    chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n});\nexports.NEMSignedTx = schema_utils_1.Type.Object({\n    data: schema_utils_1.Type.String(),\n    signature: schema_utils_1.Type.String(),\n});\nexports.NEMDecryptMessage = schema_utils_1.Type.Object({\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    network: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    public_key: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    payload: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n});\nexports.NEMDecryptedMessage = schema_utils_1.Type.Object({\n    payload: schema_utils_1.Type.String(),\n});\nexports.RippleGetAddress = schema_utils_1.Type.Object({\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    show_display: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n});\nexports.RippleAddress = schema_utils_1.Type.Object({\n    address: schema_utils_1.Type.String(),\n});\nexports.RipplePayment = schema_utils_1.Type.Object({\n    amount: schema_utils_1.Type.Uint(),\n    destination: schema_utils_1.Type.String(),\n    destination_tag: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n});\nexports.RippleSignTx = schema_utils_1.Type.Object({\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    fee: schema_utils_1.Type.Uint(),\n    flags: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    sequence: schema_utils_1.Type.Number(),\n    last_ledger_sequence: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    payment: exports.RipplePayment,\n    chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n});\nexports.RippleSignedTx = schema_utils_1.Type.Object({\n    signature: schema_utils_1.Type.String(),\n    serialized_tx: schema_utils_1.Type.String(),\n});\nexports.SolanaGetPublicKey = schema_utils_1.Type.Object({\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    show_display: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n});\nexports.SolanaPublicKey = schema_utils_1.Type.Object({\n    public_key: schema_utils_1.Type.String(),\n});\nexports.SolanaGetAddress = schema_utils_1.Type.Object({\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    show_display: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n});\nexports.SolanaAddress = schema_utils_1.Type.Object({\n    address: schema_utils_1.Type.String(),\n});\nexports.SolanaTxTokenAccountInfo = schema_utils_1.Type.Object({\n    base_address: schema_utils_1.Type.String(),\n    token_program: schema_utils_1.Type.String(),\n    token_mint: schema_utils_1.Type.String(),\n    token_account: schema_utils_1.Type.String(),\n});\nexports.SolanaTxAdditionalInfo = schema_utils_1.Type.Object({\n    token_accounts_infos: schema_utils_1.Type.Array(exports.SolanaTxTokenAccountInfo),\n});\nexports.SolanaSignTx = schema_utils_1.Type.Object({\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    serialized_tx: schema_utils_1.Type.String(),\n    additional_info: schema_utils_1.Type.Optional(exports.SolanaTxAdditionalInfo),\n});\nexports.SolanaTxSignature = schema_utils_1.Type.Object({\n    signature: schema_utils_1.Type.String(),\n});\nvar StellarAssetType;\n(function (StellarAssetType) {\n    StellarAssetType[StellarAssetType[\"NATIVE\"] = 0] = \"NATIVE\";\n    StellarAssetType[StellarAssetType[\"ALPHANUM4\"] = 1] = \"ALPHANUM4\";\n    StellarAssetType[StellarAssetType[\"ALPHANUM12\"] = 2] = \"ALPHANUM12\";\n})(StellarAssetType || (exports.StellarAssetType = StellarAssetType = {}));\nexports.EnumStellarAssetType = schema_utils_1.Type.Enum(StellarAssetType);\nexports.StellarAsset = schema_utils_1.Type.Object({\n    type: schema_utils_1.Type.Union([\n        schema_utils_1.Type.Literal(0),\n        schema_utils_1.Type.Literal(1),\n        schema_utils_1.Type.Literal(2),\n        schema_utils_1.Type.Literal('NATIVE'),\n        schema_utils_1.Type.Literal('ALPHANUM4'),\n        schema_utils_1.Type.Literal('ALPHANUM12'),\n    ]),\n    code: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    issuer: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n});\nexports.StellarGetAddress = schema_utils_1.Type.Object({\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    show_display: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n});\nexports.StellarAddress = schema_utils_1.Type.Object({\n    address: schema_utils_1.Type.String(),\n});\nvar StellarMemoType;\n(function (StellarMemoType) {\n    StellarMemoType[StellarMemoType[\"NONE\"] = 0] = \"NONE\";\n    StellarMemoType[StellarMemoType[\"TEXT\"] = 1] = \"TEXT\";\n    StellarMemoType[StellarMemoType[\"ID\"] = 2] = \"ID\";\n    StellarMemoType[StellarMemoType[\"HASH\"] = 3] = \"HASH\";\n    StellarMemoType[StellarMemoType[\"RETURN\"] = 4] = \"RETURN\";\n})(StellarMemoType || (exports.StellarMemoType = StellarMemoType = {}));\nexports.EnumStellarMemoType = schema_utils_1.Type.Enum(StellarMemoType);\nexports.StellarSignTx = schema_utils_1.Type.Object({\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    network_passphrase: schema_utils_1.Type.String(),\n    source_account: schema_utils_1.Type.String(),\n    fee: schema_utils_1.Type.Uint(),\n    sequence_number: schema_utils_1.Type.Uint(),\n    timebounds_start: schema_utils_1.Type.Number(),\n    timebounds_end: schema_utils_1.Type.Number(),\n    memo_type: exports.EnumStellarMemoType,\n    memo_text: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    memo_id: schema_utils_1.Type.Optional(schema_utils_1.Type.Uint()),\n    memo_hash: schema_utils_1.Type.Optional(schema_utils_1.Type.Union([schema_utils_1.Type.Buffer(), schema_utils_1.Type.String()])),\n    num_operations: schema_utils_1.Type.Number(),\n});\nexports.StellarTxOpRequest = schema_utils_1.Type.Object({});\nexports.StellarPaymentOp = schema_utils_1.Type.Object({\n    source_account: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    destination_account: schema_utils_1.Type.String(),\n    asset: exports.StellarAsset,\n    amount: schema_utils_1.Type.Uint(),\n});\nexports.StellarCreateAccountOp = schema_utils_1.Type.Object({\n    source_account: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    new_account: schema_utils_1.Type.String(),\n    starting_balance: schema_utils_1.Type.Uint(),\n});\nexports.StellarPathPaymentStrictReceiveOp = schema_utils_1.Type.Object({\n    source_account: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    send_asset: exports.StellarAsset,\n    send_max: schema_utils_1.Type.Uint(),\n    destination_account: schema_utils_1.Type.String(),\n    destination_asset: exports.StellarAsset,\n    destination_amount: schema_utils_1.Type.Uint(),\n    paths: schema_utils_1.Type.Optional(schema_utils_1.Type.Array(exports.StellarAsset)),\n});\nexports.StellarPathPaymentStrictSendOp = schema_utils_1.Type.Object({\n    source_account: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    send_asset: exports.StellarAsset,\n    send_amount: schema_utils_1.Type.Uint(),\n    destination_account: schema_utils_1.Type.String(),\n    destination_asset: exports.StellarAsset,\n    destination_min: schema_utils_1.Type.Uint(),\n    paths: schema_utils_1.Type.Optional(schema_utils_1.Type.Array(exports.StellarAsset)),\n});\nexports.StellarManageSellOfferOp = schema_utils_1.Type.Object({\n    source_account: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    selling_asset: exports.StellarAsset,\n    buying_asset: exports.StellarAsset,\n    amount: schema_utils_1.Type.Uint(),\n    price_n: schema_utils_1.Type.Number(),\n    price_d: schema_utils_1.Type.Number(),\n    offer_id: schema_utils_1.Type.Uint(),\n});\nexports.StellarManageBuyOfferOp = schema_utils_1.Type.Object({\n    source_account: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    selling_asset: exports.StellarAsset,\n    buying_asset: exports.StellarAsset,\n    amount: schema_utils_1.Type.Uint(),\n    price_n: schema_utils_1.Type.Number(),\n    price_d: schema_utils_1.Type.Number(),\n    offer_id: schema_utils_1.Type.Uint(),\n});\nexports.StellarCreatePassiveSellOfferOp = schema_utils_1.Type.Object({\n    source_account: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    selling_asset: exports.StellarAsset,\n    buying_asset: exports.StellarAsset,\n    amount: schema_utils_1.Type.Uint(),\n    price_n: schema_utils_1.Type.Number(),\n    price_d: schema_utils_1.Type.Number(),\n});\nvar StellarSignerType;\n(function (StellarSignerType) {\n    StellarSignerType[StellarSignerType[\"ACCOUNT\"] = 0] = \"ACCOUNT\";\n    StellarSignerType[StellarSignerType[\"PRE_AUTH\"] = 1] = \"PRE_AUTH\";\n    StellarSignerType[StellarSignerType[\"HASH\"] = 2] = \"HASH\";\n})(StellarSignerType || (exports.StellarSignerType = StellarSignerType = {}));\nexports.EnumStellarSignerType = schema_utils_1.Type.Enum(StellarSignerType);\nexports.StellarSetOptionsOp = schema_utils_1.Type.Object({\n    source_account: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    inflation_destination_account: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    clear_flags: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    set_flags: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    master_weight: schema_utils_1.Type.Optional(schema_utils_1.Type.Uint()),\n    low_threshold: schema_utils_1.Type.Optional(schema_utils_1.Type.Uint()),\n    medium_threshold: schema_utils_1.Type.Optional(schema_utils_1.Type.Uint()),\n    high_threshold: schema_utils_1.Type.Optional(schema_utils_1.Type.Uint()),\n    home_domain: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    signer_type: schema_utils_1.Type.Optional(exports.EnumStellarSignerType),\n    signer_key: schema_utils_1.Type.Optional(schema_utils_1.Type.Union([schema_utils_1.Type.Buffer(), schema_utils_1.Type.String()])),\n    signer_weight: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n});\nexports.StellarChangeTrustOp = schema_utils_1.Type.Object({\n    source_account: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    asset: exports.StellarAsset,\n    limit: schema_utils_1.Type.Uint(),\n});\nexports.StellarAllowTrustOp = schema_utils_1.Type.Object({\n    source_account: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    trusted_account: schema_utils_1.Type.String(),\n    asset_type: exports.EnumStellarAssetType,\n    asset_code: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    is_authorized: schema_utils_1.Type.Boolean(),\n});\nexports.StellarAccountMergeOp = schema_utils_1.Type.Object({\n    source_account: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    destination_account: schema_utils_1.Type.String(),\n});\nexports.StellarManageDataOp = schema_utils_1.Type.Object({\n    source_account: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    key: schema_utils_1.Type.String(),\n    value: schema_utils_1.Type.Optional(schema_utils_1.Type.Union([schema_utils_1.Type.Buffer(), schema_utils_1.Type.String()])),\n});\nexports.StellarBumpSequenceOp = schema_utils_1.Type.Object({\n    source_account: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    bump_to: schema_utils_1.Type.Uint(),\n});\nexports.StellarSignedTx = schema_utils_1.Type.Object({\n    public_key: schema_utils_1.Type.String(),\n    signature: schema_utils_1.Type.String(),\n});\nexports.TezosGetAddress = schema_utils_1.Type.Object({\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    show_display: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n});\nexports.TezosAddress = schema_utils_1.Type.Object({\n    address: schema_utils_1.Type.String(),\n});\nexports.TezosGetPublicKey = schema_utils_1.Type.Object({\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    show_display: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n});\nexports.TezosPublicKey = schema_utils_1.Type.Object({\n    public_key: schema_utils_1.Type.String(),\n});\nvar TezosContractType;\n(function (TezosContractType) {\n    TezosContractType[TezosContractType[\"Implicit\"] = 0] = \"Implicit\";\n    TezosContractType[TezosContractType[\"Originated\"] = 1] = \"Originated\";\n})(TezosContractType || (exports.TezosContractType = TezosContractType = {}));\nexports.EnumTezosContractType = schema_utils_1.Type.Enum(TezosContractType);\nexports.TezosContractID = schema_utils_1.Type.Object({\n    tag: schema_utils_1.Type.Number(),\n    hash: schema_utils_1.Type.Uint8Array(),\n});\nexports.TezosRevealOp = schema_utils_1.Type.Object({\n    source: schema_utils_1.Type.Uint8Array(),\n    fee: schema_utils_1.Type.Uint(),\n    counter: schema_utils_1.Type.Number(),\n    gas_limit: schema_utils_1.Type.Number(),\n    storage_limit: schema_utils_1.Type.Number(),\n    public_key: schema_utils_1.Type.Uint8Array(),\n});\nexports.TezosManagerTransfer = schema_utils_1.Type.Object({\n    destination: exports.TezosContractID,\n    amount: schema_utils_1.Type.Uint(),\n});\nexports.TezosParametersManager = schema_utils_1.Type.Object({\n    set_delegate: schema_utils_1.Type.Optional(schema_utils_1.Type.Uint8Array()),\n    cancel_delegate: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    transfer: schema_utils_1.Type.Optional(exports.TezosManagerTransfer),\n});\nexports.TezosTransactionOp = schema_utils_1.Type.Object({\n    source: schema_utils_1.Type.Uint8Array(),\n    fee: schema_utils_1.Type.Uint(),\n    counter: schema_utils_1.Type.Number(),\n    gas_limit: schema_utils_1.Type.Number(),\n    storage_limit: schema_utils_1.Type.Number(),\n    amount: schema_utils_1.Type.Uint(),\n    destination: exports.TezosContractID,\n    parameters: schema_utils_1.Type.Optional(schema_utils_1.Type.Array(schema_utils_1.Type.Number())),\n    parameters_manager: schema_utils_1.Type.Optional(exports.TezosParametersManager),\n});\nexports.TezosOriginationOp = schema_utils_1.Type.Object({\n    source: schema_utils_1.Type.Uint8Array(),\n    fee: schema_utils_1.Type.Uint(),\n    counter: schema_utils_1.Type.Number(),\n    gas_limit: schema_utils_1.Type.Number(),\n    storage_limit: schema_utils_1.Type.Number(),\n    manager_pubkey: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    balance: schema_utils_1.Type.Number(),\n    spendable: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    delegatable: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    delegate: schema_utils_1.Type.Optional(schema_utils_1.Type.Uint8Array()),\n    script: schema_utils_1.Type.Union([schema_utils_1.Type.String(), schema_utils_1.Type.Array(schema_utils_1.Type.Number())]),\n});\nexports.TezosDelegationOp = schema_utils_1.Type.Object({\n    source: schema_utils_1.Type.Uint8Array(),\n    fee: schema_utils_1.Type.Uint(),\n    counter: schema_utils_1.Type.Number(),\n    gas_limit: schema_utils_1.Type.Number(),\n    storage_limit: schema_utils_1.Type.Number(),\n    delegate: schema_utils_1.Type.Uint8Array(),\n});\nexports.TezosProposalOp = schema_utils_1.Type.Object({\n    source: schema_utils_1.Type.String(),\n    period: schema_utils_1.Type.Number(),\n    proposals: schema_utils_1.Type.Array(schema_utils_1.Type.String()),\n});\nvar TezosBallotType;\n(function (TezosBallotType) {\n    TezosBallotType[TezosBallotType[\"Yay\"] = 0] = \"Yay\";\n    TezosBallotType[TezosBallotType[\"Nay\"] = 1] = \"Nay\";\n    TezosBallotType[TezosBallotType[\"Pass\"] = 2] = \"Pass\";\n})(TezosBallotType || (exports.TezosBallotType = TezosBallotType = {}));\nexports.EnumTezosBallotType = schema_utils_1.Type.Enum(TezosBallotType);\nexports.TezosBallotOp = schema_utils_1.Type.Object({\n    source: schema_utils_1.Type.String(),\n    period: schema_utils_1.Type.Number(),\n    proposal: schema_utils_1.Type.String(),\n    ballot: exports.EnumTezosBallotType,\n});\nexports.TezosSignTx = schema_utils_1.Type.Object({\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    branch: schema_utils_1.Type.Uint8Array(),\n    reveal: schema_utils_1.Type.Optional(exports.TezosRevealOp),\n    transaction: schema_utils_1.Type.Optional(exports.TezosTransactionOp),\n    origination: schema_utils_1.Type.Optional(exports.TezosOriginationOp),\n    delegation: schema_utils_1.Type.Optional(exports.TezosDelegationOp),\n    proposal: schema_utils_1.Type.Optional(exports.TezosProposalOp),\n    ballot: schema_utils_1.Type.Optional(exports.TezosBallotOp),\n    chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n});\nexports.TezosSignedTx = schema_utils_1.Type.Object({\n    signature: schema_utils_1.Type.String(),\n    sig_op_contents: schema_utils_1.Type.String(),\n    operation_hash: schema_utils_1.Type.String(),\n});\nexports.experimental_message = schema_utils_1.Type.Object({});\nexports.experimental_field = schema_utils_1.Type.Object({});\nexports.MessageType = schema_utils_1.Type.Object({\n    BinanceGetAddress: exports.BinanceGetAddress,\n    BinanceAddress: exports.BinanceAddress,\n    BinanceGetPublicKey: exports.BinanceGetPublicKey,\n    BinancePublicKey: exports.BinancePublicKey,\n    BinanceSignTx: exports.BinanceSignTx,\n    BinanceTxRequest: exports.BinanceTxRequest,\n    BinanceCoin: exports.BinanceCoin,\n    BinanceInputOutput: exports.BinanceInputOutput,\n    BinanceTransferMsg: exports.BinanceTransferMsg,\n    BinanceOrderMsg: exports.BinanceOrderMsg,\n    BinanceCancelMsg: exports.BinanceCancelMsg,\n    BinanceSignedTx: exports.BinanceSignedTx,\n    HDNodeType: exports.HDNodeType,\n    HDNodePathType: exports.HDNodePathType,\n    MultisigRedeemScriptType: exports.MultisigRedeemScriptType,\n    GetPublicKey: exports.GetPublicKey,\n    PublicKey: exports.PublicKey,\n    GetAddress: exports.GetAddress,\n    Address: exports.Address,\n    GetOwnershipId: exports.GetOwnershipId,\n    OwnershipId: exports.OwnershipId,\n    SignMessage: exports.SignMessage,\n    MessageSignature: exports.MessageSignature,\n    VerifyMessage: exports.VerifyMessage,\n    CoinJoinRequest: exports.CoinJoinRequest,\n    SignTx: exports.SignTx,\n    TxRequestDetailsType: exports.TxRequestDetailsType,\n    TxRequestSerializedType: exports.TxRequestSerializedType,\n    TxRequest: exports.TxRequest,\n    TxInputType: exports.TxInputType,\n    TxOutputBinType: exports.TxOutputBinType,\n    TxOutputType: exports.TxOutputType,\n    PrevTx: exports.PrevTx,\n    PrevInput: exports.PrevInput,\n    PrevOutput: exports.PrevOutput,\n    TextMemo: exports.TextMemo,\n    RefundMemo: exports.RefundMemo,\n    CoinPurchaseMemo: exports.CoinPurchaseMemo,\n    PaymentRequestMemo: exports.PaymentRequestMemo,\n    TxAckPaymentRequest: exports.TxAckPaymentRequest,\n    TxAck: exports.TxAck,\n    TxAckInputWrapper: exports.TxAckInputWrapper,\n    TxAckInput: exports.TxAckInput,\n    TxAckOutputWrapper: exports.TxAckOutputWrapper,\n    TxAckOutput: exports.TxAckOutput,\n    TxAckPrevMeta: exports.TxAckPrevMeta,\n    TxAckPrevInputWrapper: exports.TxAckPrevInputWrapper,\n    TxAckPrevInput: exports.TxAckPrevInput,\n    TxAckPrevOutputWrapper: exports.TxAckPrevOutputWrapper,\n    TxAckPrevOutput: exports.TxAckPrevOutput,\n    TxAckPrevExtraDataWrapper: exports.TxAckPrevExtraDataWrapper,\n    TxAckPrevExtraData: exports.TxAckPrevExtraData,\n    GetOwnershipProof: exports.GetOwnershipProof,\n    OwnershipProof: exports.OwnershipProof,\n    AuthorizeCoinJoin: exports.AuthorizeCoinJoin,\n    FirmwareErase: exports.FirmwareErase,\n    FirmwareRequest: exports.FirmwareRequest,\n    FirmwareUpload: exports.FirmwareUpload,\n    SelfTest: exports.SelfTest,\n    CardanoBlockchainPointerType: exports.CardanoBlockchainPointerType,\n    CardanoNativeScript: exports.CardanoNativeScript,\n    CardanoGetNativeScriptHash: exports.CardanoGetNativeScriptHash,\n    CardanoNativeScriptHash: exports.CardanoNativeScriptHash,\n    CardanoAddressParametersType: exports.CardanoAddressParametersType,\n    CardanoGetAddress: exports.CardanoGetAddress,\n    CardanoAddress: exports.CardanoAddress,\n    CardanoGetPublicKey: exports.CardanoGetPublicKey,\n    CardanoPublicKey: exports.CardanoPublicKey,\n    CardanoSignTxInit: exports.CardanoSignTxInit,\n    CardanoTxInput: exports.CardanoTxInput,\n    CardanoTxOutput: exports.CardanoTxOutput,\n    CardanoAssetGroup: exports.CardanoAssetGroup,\n    CardanoToken: exports.CardanoToken,\n    CardanoTxInlineDatumChunk: exports.CardanoTxInlineDatumChunk,\n    CardanoTxReferenceScriptChunk: exports.CardanoTxReferenceScriptChunk,\n    CardanoPoolOwner: exports.CardanoPoolOwner,\n    CardanoPoolRelayParameters: exports.CardanoPoolRelayParameters,\n    CardanoPoolMetadataType: exports.CardanoPoolMetadataType,\n    CardanoPoolParametersType: exports.CardanoPoolParametersType,\n    CardanoTxCertificate: exports.CardanoTxCertificate,\n    CardanoTxWithdrawal: exports.CardanoTxWithdrawal,\n    CardanoCVoteRegistrationDelegation: exports.CardanoCVoteRegistrationDelegation,\n    CardanoCVoteRegistrationParametersType: exports.CardanoCVoteRegistrationParametersType,\n    CardanoTxAuxiliaryData: exports.CardanoTxAuxiliaryData,\n    CardanoTxMint: exports.CardanoTxMint,\n    CardanoTxCollateralInput: exports.CardanoTxCollateralInput,\n    CardanoTxRequiredSigner: exports.CardanoTxRequiredSigner,\n    CardanoTxReferenceInput: exports.CardanoTxReferenceInput,\n    CardanoTxItemAck: exports.CardanoTxItemAck,\n    CardanoTxAuxiliaryDataSupplement: exports.CardanoTxAuxiliaryDataSupplement,\n    CardanoTxWitnessRequest: exports.CardanoTxWitnessRequest,\n    CardanoTxWitnessResponse: exports.CardanoTxWitnessResponse,\n    CardanoTxHostAck: exports.CardanoTxHostAck,\n    CardanoTxBodyHash: exports.CardanoTxBodyHash,\n    CardanoSignTxFinished: exports.CardanoSignTxFinished,\n    Success: exports.Success,\n    Failure: exports.Failure,\n    ButtonRequest: exports.ButtonRequest,\n    ButtonAck: exports.ButtonAck,\n    PinMatrixRequest: exports.PinMatrixRequest,\n    PinMatrixAck: exports.PinMatrixAck,\n    PassphraseRequest: exports.PassphraseRequest,\n    PassphraseAck: exports.PassphraseAck,\n    Deprecated_PassphraseStateRequest: exports.Deprecated_PassphraseStateRequest,\n    Deprecated_PassphraseStateAck: exports.Deprecated_PassphraseStateAck,\n    CipherKeyValue: exports.CipherKeyValue,\n    CipheredKeyValue: exports.CipheredKeyValue,\n    IdentityType: exports.IdentityType,\n    SignIdentity: exports.SignIdentity,\n    SignedIdentity: exports.SignedIdentity,\n    GetECDHSessionKey: exports.GetECDHSessionKey,\n    ECDHSessionKey: exports.ECDHSessionKey,\n    DebugLinkResetDebugEvents: exports.DebugLinkResetDebugEvents,\n    EosGetPublicKey: exports.EosGetPublicKey,\n    EosPublicKey: exports.EosPublicKey,\n    EosTxHeader: exports.EosTxHeader,\n    EosSignTx: exports.EosSignTx,\n    EosTxActionRequest: exports.EosTxActionRequest,\n    EosAsset: exports.EosAsset,\n    EosPermissionLevel: exports.EosPermissionLevel,\n    EosAuthorizationKey: exports.EosAuthorizationKey,\n    EosAuthorizationAccount: exports.EosAuthorizationAccount,\n    EosAuthorizationWait: exports.EosAuthorizationWait,\n    EosAuthorization: exports.EosAuthorization,\n    EosActionCommon: exports.EosActionCommon,\n    EosActionTransfer: exports.EosActionTransfer,\n    EosActionDelegate: exports.EosActionDelegate,\n    EosActionUndelegate: exports.EosActionUndelegate,\n    EosActionRefund: exports.EosActionRefund,\n    EosActionBuyRam: exports.EosActionBuyRam,\n    EosActionBuyRamBytes: exports.EosActionBuyRamBytes,\n    EosActionSellRam: exports.EosActionSellRam,\n    EosActionVoteProducer: exports.EosActionVoteProducer,\n    EosActionUpdateAuth: exports.EosActionUpdateAuth,\n    EosActionDeleteAuth: exports.EosActionDeleteAuth,\n    EosActionLinkAuth: exports.EosActionLinkAuth,\n    EosActionUnlinkAuth: exports.EosActionUnlinkAuth,\n    EosActionNewAccount: exports.EosActionNewAccount,\n    EosActionUnknown: exports.EosActionUnknown,\n    EosTxActionAck: exports.EosTxActionAck,\n    EosSignedTx: exports.EosSignedTx,\n    EthereumNetworkInfo: exports.EthereumNetworkInfo,\n    EthereumTokenInfo: exports.EthereumTokenInfo,\n    EthereumDefinitions: exports.EthereumDefinitions,\n    EthereumSignTypedData: exports.EthereumSignTypedData,\n    EthereumTypedDataStructRequest: exports.EthereumTypedDataStructRequest,\n    EthereumFieldType: exports.EthereumFieldType,\n    EthereumStructMember: exports.EthereumStructMember,\n    EthereumTypedDataStructAck: exports.EthereumTypedDataStructAck,\n    EthereumTypedDataValueRequest: exports.EthereumTypedDataValueRequest,\n    EthereumTypedDataValueAck: exports.EthereumTypedDataValueAck,\n    EthereumGetPublicKey: exports.EthereumGetPublicKey,\n    EthereumPublicKey: exports.EthereumPublicKey,\n    EthereumGetAddress: exports.EthereumGetAddress,\n    EthereumAddress: exports.EthereumAddress,\n    EthereumSignTx: exports.EthereumSignTx,\n    EthereumAccessList: exports.EthereumAccessList,\n    EthereumSignTxEIP1559: exports.EthereumSignTxEIP1559,\n    EthereumTxRequest: exports.EthereumTxRequest,\n    EthereumTxAck: exports.EthereumTxAck,\n    EthereumSignMessage: exports.EthereumSignMessage,\n    EthereumMessageSignature: exports.EthereumMessageSignature,\n    EthereumVerifyMessage: exports.EthereumVerifyMessage,\n    EthereumSignTypedHash: exports.EthereumSignTypedHash,\n    EthereumTypedDataSignature: exports.EthereumTypedDataSignature,\n    Initialize: exports.Initialize,\n    GetFeatures: exports.GetFeatures,\n    Features: exports.Features,\n    LockDevice: exports.LockDevice,\n    SetBusy: exports.SetBusy,\n    EndSession: exports.EndSession,\n    ApplySettings: exports.ApplySettings,\n    ApplyFlags: exports.ApplyFlags,\n    ChangePin: exports.ChangePin,\n    ChangeWipeCode: exports.ChangeWipeCode,\n    SdProtect: exports.SdProtect,\n    Ping: exports.Ping,\n    Cancel: exports.Cancel,\n    GetEntropy: exports.GetEntropy,\n    Entropy: exports.Entropy,\n    GetFirmwareHash: exports.GetFirmwareHash,\n    FirmwareHash: exports.FirmwareHash,\n    AuthenticateDevice: exports.AuthenticateDevice,\n    AuthenticityProof: exports.AuthenticityProof,\n    WipeDevice: exports.WipeDevice,\n    ResetDevice: exports.ResetDevice,\n    BackupDevice: exports.BackupDevice,\n    EntropyRequest: exports.EntropyRequest,\n    EntropyAck: exports.EntropyAck,\n    RecoveryDevice: exports.RecoveryDevice,\n    WordRequest: exports.WordRequest,\n    WordAck: exports.WordAck,\n    SetU2FCounter: exports.SetU2FCounter,\n    GetNextU2FCounter: exports.GetNextU2FCounter,\n    NextU2FCounter: exports.NextU2FCounter,\n    DoPreauthorized: exports.DoPreauthorized,\n    PreauthorizedRequest: exports.PreauthorizedRequest,\n    CancelAuthorization: exports.CancelAuthorization,\n    RebootToBootloader: exports.RebootToBootloader,\n    GetNonce: exports.GetNonce,\n    Nonce: exports.Nonce,\n    UnlockPath: exports.UnlockPath,\n    UnlockedPathRequest: exports.UnlockedPathRequest,\n    ShowDeviceTutorial: exports.ShowDeviceTutorial,\n    UnlockBootloader: exports.UnlockBootloader,\n    NEMGetAddress: exports.NEMGetAddress,\n    NEMAddress: exports.NEMAddress,\n    NEMTransactionCommon: exports.NEMTransactionCommon,\n    NEMMosaic: exports.NEMMosaic,\n    NEMTransfer: exports.NEMTransfer,\n    NEMProvisionNamespace: exports.NEMProvisionNamespace,\n    NEMMosaicDefinition: exports.NEMMosaicDefinition,\n    NEMMosaicCreation: exports.NEMMosaicCreation,\n    NEMMosaicSupplyChange: exports.NEMMosaicSupplyChange,\n    NEMCosignatoryModification: exports.NEMCosignatoryModification,\n    NEMAggregateModification: exports.NEMAggregateModification,\n    NEMImportanceTransfer: exports.NEMImportanceTransfer,\n    NEMSignTx: exports.NEMSignTx,\n    NEMSignedTx: exports.NEMSignedTx,\n    NEMDecryptMessage: exports.NEMDecryptMessage,\n    NEMDecryptedMessage: exports.NEMDecryptedMessage,\n    RippleGetAddress: exports.RippleGetAddress,\n    RippleAddress: exports.RippleAddress,\n    RipplePayment: exports.RipplePayment,\n    RippleSignTx: exports.RippleSignTx,\n    RippleSignedTx: exports.RippleSignedTx,\n    SolanaGetPublicKey: exports.SolanaGetPublicKey,\n    SolanaPublicKey: exports.SolanaPublicKey,\n    SolanaGetAddress: exports.SolanaGetAddress,\n    SolanaAddress: exports.SolanaAddress,\n    SolanaTxTokenAccountInfo: exports.SolanaTxTokenAccountInfo,\n    SolanaTxAdditionalInfo: exports.SolanaTxAdditionalInfo,\n    SolanaSignTx: exports.SolanaSignTx,\n    SolanaTxSignature: exports.SolanaTxSignature,\n    StellarAsset: exports.StellarAsset,\n    StellarGetAddress: exports.StellarGetAddress,\n    StellarAddress: exports.StellarAddress,\n    StellarSignTx: exports.StellarSignTx,\n    StellarTxOpRequest: exports.StellarTxOpRequest,\n    StellarPaymentOp: exports.StellarPaymentOp,\n    StellarCreateAccountOp: exports.StellarCreateAccountOp,\n    StellarPathPaymentStrictReceiveOp: exports.StellarPathPaymentStrictReceiveOp,\n    StellarPathPaymentStrictSendOp: exports.StellarPathPaymentStrictSendOp,\n    StellarManageSellOfferOp: exports.StellarManageSellOfferOp,\n    StellarManageBuyOfferOp: exports.StellarManageBuyOfferOp,\n    StellarCreatePassiveSellOfferOp: exports.StellarCreatePassiveSellOfferOp,\n    StellarSetOptionsOp: exports.StellarSetOptionsOp,\n    StellarChangeTrustOp: exports.StellarChangeTrustOp,\n    StellarAllowTrustOp: exports.StellarAllowTrustOp,\n    StellarAccountMergeOp: exports.StellarAccountMergeOp,\n    StellarManageDataOp: exports.StellarManageDataOp,\n    StellarBumpSequenceOp: exports.StellarBumpSequenceOp,\n    StellarSignedTx: exports.StellarSignedTx,\n    TezosGetAddress: exports.TezosGetAddress,\n    TezosAddress: exports.TezosAddress,\n    TezosGetPublicKey: exports.TezosGetPublicKey,\n    TezosPublicKey: exports.TezosPublicKey,\n    TezosContractID: exports.TezosContractID,\n    TezosRevealOp: exports.TezosRevealOp,\n    TezosManagerTransfer: exports.TezosManagerTransfer,\n    TezosParametersManager: exports.TezosParametersManager,\n    TezosTransactionOp: exports.TezosTransactionOp,\n    TezosOriginationOp: exports.TezosOriginationOp,\n    TezosDelegationOp: exports.TezosDelegationOp,\n    TezosProposalOp: exports.TezosProposalOp,\n    TezosBallotOp: exports.TezosBallotOp,\n    TezosSignTx: exports.TezosSignTx,\n    TezosSignedTx: exports.TezosSignedTx,\n    experimental_message: exports.experimental_message,\n    experimental_field: exports.experimental_field,\n});\n//# sourceMappingURL=messages-schema.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@trezor/protobuf/lib/messages-schema.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/schema-utils/lib/custom-types/array-buffer.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@trezor/schema-utils/lib/custom-types/array-buffer.js ***!
  \****************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ArrayBufferBuilder = void 0;\nconst typebox_1 = __webpack_require__(/*! @sinclair/typebox */ \"./node_modules/@trezor/schema-utils/node_modules/@sinclair/typebox/typebox.js\");\ntypebox_1.TypeRegistry.Set('ArrayBuffer', (_, value) => value instanceof ArrayBuffer);\nclass ArrayBufferBuilder extends typebox_1.JavaScriptTypeBuilder {\n    ArrayBuffer(options) {\n        return this.Create(Object.assign(Object.assign({}, options), { [typebox_1.Kind]: 'ArrayBuffer', type: 'ArrayBuffer' }));\n    }\n}\nexports.ArrayBufferBuilder = ArrayBufferBuilder;\n//# sourceMappingURL=array-buffer.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci9zY2hlbWEtdXRpbHMvbGliL2N1c3RvbS10eXBlcy9hcnJheS1idWZmZXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsMEJBQTBCO0FBQzFCLGtCQUFrQixtQkFBTyxDQUFDLHdHQUFtQjtBQUM3QztBQUNBO0FBQ0E7QUFDQSx5REFBeUQsY0FBYyxzREFBc0Q7QUFDN0g7QUFDQTtBQUNBLDBCQUEwQjtBQUMxQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHRyZXpvci9zY2hlbWEtdXRpbHMvbGliL2N1c3RvbS10eXBlcy9hcnJheS1idWZmZXIuanM/MTE1ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQXJyYXlCdWZmZXJCdWlsZGVyID0gdm9pZCAwO1xuY29uc3QgdHlwZWJveF8xID0gcmVxdWlyZShcIkBzaW5jbGFpci90eXBlYm94XCIpO1xudHlwZWJveF8xLlR5cGVSZWdpc3RyeS5TZXQoJ0FycmF5QnVmZmVyJywgKF8sIHZhbHVlKSA9PiB2YWx1ZSBpbnN0YW5jZW9mIEFycmF5QnVmZmVyKTtcbmNsYXNzIEFycmF5QnVmZmVyQnVpbGRlciBleHRlbmRzIHR5cGVib3hfMS5KYXZhU2NyaXB0VHlwZUJ1aWxkZXIge1xuICAgIEFycmF5QnVmZmVyKG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuQ3JlYXRlKE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgb3B0aW9ucyksIHsgW3R5cGVib3hfMS5LaW5kXTogJ0FycmF5QnVmZmVyJywgdHlwZTogJ0FycmF5QnVmZmVyJyB9KSk7XG4gICAgfVxufVxuZXhwb3J0cy5BcnJheUJ1ZmZlckJ1aWxkZXIgPSBBcnJheUJ1ZmZlckJ1aWxkZXI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1hcnJheS1idWZmZXIuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@trezor/schema-utils/lib/custom-types/array-buffer.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/schema-utils/lib/custom-types/buffer.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@trezor/schema-utils/lib/custom-types/buffer.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.BufferBuilder = void 0;\nconst typebox_1 = __webpack_require__(/*! @sinclair/typebox */ \"./node_modules/@trezor/schema-utils/node_modules/@sinclair/typebox/typebox.js\");\ntypebox_1.TypeRegistry.Set('Buffer', (_, value) => value instanceof Buffer);\nclass BufferBuilder extends typebox_1.JavaScriptTypeBuilder {\n    Buffer(options) {\n        return this.Create(Object.assign(Object.assign({}, options), { [typebox_1.Kind]: 'Buffer', type: 'Buffer' }));\n    }\n}\nexports.BufferBuilder = BufferBuilder;\n//# sourceMappingURL=buffer.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci9zY2hlbWEtdXRpbHMvbGliL2N1c3RvbS10eXBlcy9idWZmZXIuanMiLCJtYXBwaW5ncyI6IjtBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHFCQUFxQjtBQUNyQixrQkFBa0IsbUJBQU8sQ0FBQyx3R0FBbUI7QUFDN0Msb0VBQW9FLE1BQU07QUFDMUU7QUFDQTtBQUNBLHlEQUF5RCxjQUFjLDRDQUE0QztBQUNuSDtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AdHJlem9yL3NjaGVtYS11dGlscy9saWIvY3VzdG9tLXR5cGVzL2J1ZmZlci5qcz82ZDBiIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5CdWZmZXJCdWlsZGVyID0gdm9pZCAwO1xuY29uc3QgdHlwZWJveF8xID0gcmVxdWlyZShcIkBzaW5jbGFpci90eXBlYm94XCIpO1xudHlwZWJveF8xLlR5cGVSZWdpc3RyeS5TZXQoJ0J1ZmZlcicsIChfLCB2YWx1ZSkgPT4gdmFsdWUgaW5zdGFuY2VvZiBCdWZmZXIpO1xuY2xhc3MgQnVmZmVyQnVpbGRlciBleHRlbmRzIHR5cGVib3hfMS5KYXZhU2NyaXB0VHlwZUJ1aWxkZXIge1xuICAgIEJ1ZmZlcihvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLkNyZWF0ZShPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sIG9wdGlvbnMpLCB7IFt0eXBlYm94XzEuS2luZF06ICdCdWZmZXInLCB0eXBlOiAnQnVmZmVyJyB9KSk7XG4gICAgfVxufVxuZXhwb3J0cy5CdWZmZXJCdWlsZGVyID0gQnVmZmVyQnVpbGRlcjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWJ1ZmZlci5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@trezor/schema-utils/lib/custom-types/buffer.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/schema-utils/lib/custom-types/index.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@trezor/schema-utils/lib/custom-types/index.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.UintBuilder = exports.KeyofEnumBuilder = exports.BufferBuilder = exports.ArrayBufferBuilder = void 0;\nvar array_buffer_1 = __webpack_require__(/*! ./array-buffer */ \"./node_modules/@trezor/schema-utils/lib/custom-types/array-buffer.js\");\nObject.defineProperty(exports, \"ArrayBufferBuilder\", ({ enumerable: true, get: function () { return array_buffer_1.ArrayBufferBuilder; } }));\nvar buffer_1 = __webpack_require__(/*! ./buffer */ \"./node_modules/@trezor/schema-utils/lib/custom-types/buffer.js\");\nObject.defineProperty(exports, \"BufferBuilder\", ({ enumerable: true, get: function () { return buffer_1.BufferBuilder; } }));\nvar keyof_enum_1 = __webpack_require__(/*! ./keyof-enum */ \"./node_modules/@trezor/schema-utils/lib/custom-types/keyof-enum.js\");\nObject.defineProperty(exports, \"KeyofEnumBuilder\", ({ enumerable: true, get: function () { return keyof_enum_1.KeyofEnumBuilder; } }));\nvar uint_1 = __webpack_require__(/*! ./uint */ \"./node_modules/@trezor/schema-utils/lib/custom-types/uint.js\");\nObject.defineProperty(exports, \"UintBuilder\", ({ enumerable: true, get: function () { return uint_1.UintBuilder; } }));\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci9zY2hlbWEtdXRpbHMvbGliL2N1c3RvbS10eXBlcy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxtQkFBbUIsR0FBRyx3QkFBd0IsR0FBRyxxQkFBcUIsR0FBRywwQkFBMEI7QUFDbkcscUJBQXFCLG1CQUFPLENBQUMsNEZBQWdCO0FBQzdDLHNEQUFxRCxFQUFFLHFDQUFxQyw2Q0FBNkMsRUFBQztBQUMxSSxlQUFlLG1CQUFPLENBQUMsZ0ZBQVU7QUFDakMsaURBQWdELEVBQUUscUNBQXFDLGtDQUFrQyxFQUFDO0FBQzFILG1CQUFtQixtQkFBTyxDQUFDLHdGQUFjO0FBQ3pDLG9EQUFtRCxFQUFFLHFDQUFxQyx5Q0FBeUMsRUFBQztBQUNwSSxhQUFhLG1CQUFPLENBQUMsNEVBQVE7QUFDN0IsK0NBQThDLEVBQUUscUNBQXFDLDhCQUE4QixFQUFDO0FBQ3BIIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AdHJlem9yL3NjaGVtYS11dGlscy9saWIvY3VzdG9tLXR5cGVzL2luZGV4LmpzP2MzZWYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlVpbnRCdWlsZGVyID0gZXhwb3J0cy5LZXlvZkVudW1CdWlsZGVyID0gZXhwb3J0cy5CdWZmZXJCdWlsZGVyID0gZXhwb3J0cy5BcnJheUJ1ZmZlckJ1aWxkZXIgPSB2b2lkIDA7XG52YXIgYXJyYXlfYnVmZmVyXzEgPSByZXF1aXJlKFwiLi9hcnJheS1idWZmZXJcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJBcnJheUJ1ZmZlckJ1aWxkZXJcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGFycmF5X2J1ZmZlcl8xLkFycmF5QnVmZmVyQnVpbGRlcjsgfSB9KTtcbnZhciBidWZmZXJfMSA9IHJlcXVpcmUoXCIuL2J1ZmZlclwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkJ1ZmZlckJ1aWxkZXJcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGJ1ZmZlcl8xLkJ1ZmZlckJ1aWxkZXI7IH0gfSk7XG52YXIga2V5b2ZfZW51bV8xID0gcmVxdWlyZShcIi4va2V5b2YtZW51bVwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIktleW9mRW51bUJ1aWxkZXJcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGtleW9mX2VudW1fMS5LZXlvZkVudW1CdWlsZGVyOyB9IH0pO1xudmFyIHVpbnRfMSA9IHJlcXVpcmUoXCIuL3VpbnRcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJVaW50QnVpbGRlclwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gdWludF8xLlVpbnRCdWlsZGVyOyB9IH0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@trezor/schema-utils/lib/custom-types/index.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/schema-utils/lib/custom-types/keyof-enum.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@trezor/schema-utils/lib/custom-types/keyof-enum.js ***!
  \**************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.KeyofEnumBuilder = void 0;\nconst typebox_1 = __webpack_require__(/*! @sinclair/typebox */ \"./node_modules/@trezor/schema-utils/node_modules/@sinclair/typebox/typebox.js\");\nclass KeyofEnumBuilder extends typebox_1.JavaScriptTypeBuilder {\n    KeyOfEnum(schema, options) {\n        const keys = Object.keys(schema).map(key => this.Literal(key));\n        return this.Union(keys, Object.assign(Object.assign({}, options), { [typebox_1.Hint]: 'KeyOfEnum' }));\n    }\n}\nexports.KeyofEnumBuilder = KeyofEnumBuilder;\n//# sourceMappingURL=keyof-enum.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci9zY2hlbWEtdXRpbHMvbGliL2N1c3RvbS10eXBlcy9rZXlvZi1lbnVtLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHdCQUF3QjtBQUN4QixrQkFBa0IsbUJBQU8sQ0FBQyx3R0FBbUI7QUFDN0M7QUFDQTtBQUNBO0FBQ0EsOERBQThELGNBQWMsK0JBQStCO0FBQzNHO0FBQ0E7QUFDQSx3QkFBd0I7QUFDeEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0B0cmV6b3Ivc2NoZW1hLXV0aWxzL2xpYi9jdXN0b20tdHlwZXMva2V5b2YtZW51bS5qcz83NDVmIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5LZXlvZkVudW1CdWlsZGVyID0gdm9pZCAwO1xuY29uc3QgdHlwZWJveF8xID0gcmVxdWlyZShcIkBzaW5jbGFpci90eXBlYm94XCIpO1xuY2xhc3MgS2V5b2ZFbnVtQnVpbGRlciBleHRlbmRzIHR5cGVib3hfMS5KYXZhU2NyaXB0VHlwZUJ1aWxkZXIge1xuICAgIEtleU9mRW51bShzY2hlbWEsIG9wdGlvbnMpIHtcbiAgICAgICAgY29uc3Qga2V5cyA9IE9iamVjdC5rZXlzKHNjaGVtYSkubWFwKGtleSA9PiB0aGlzLkxpdGVyYWwoa2V5KSk7XG4gICAgICAgIHJldHVybiB0aGlzLlVuaW9uKGtleXMsIE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgb3B0aW9ucyksIHsgW3R5cGVib3hfMS5IaW50XTogJ0tleU9mRW51bScgfSkpO1xuICAgIH1cbn1cbmV4cG9ydHMuS2V5b2ZFbnVtQnVpbGRlciA9IEtleW9mRW51bUJ1aWxkZXI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1rZXlvZi1lbnVtLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@trezor/schema-utils/lib/custom-types/keyof-enum.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/schema-utils/lib/custom-types/uint.js":
/*!********************************************************************!*\
  !*** ./node_modules/@trezor/schema-utils/lib/custom-types/uint.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.UintBuilder = void 0;\nconst typebox_1 = __webpack_require__(/*! @sinclair/typebox */ \"./node_modules/@trezor/schema-utils/node_modules/@sinclair/typebox/typebox.js\");\ntypebox_1.TypeRegistry.Set('Uint', (schema, value) => {\n    if (typeof value !== 'string' && typeof value !== 'number') {\n        return false;\n    }\n    if ((typeof value === 'number' && !Number.isSafeInteger(value)) ||\n        !/^(?:[1-9]\\d*|\\d)$/.test(value.toString().replace(/^-/, schema.allowNegative ? '' : '-'))) {\n        return false;\n    }\n    return true;\n});\nclass UintBuilder extends typebox_1.JavaScriptTypeBuilder {\n    Uint(options) {\n        return this.Create(Object.assign(Object.assign({}, options), { [typebox_1.Kind]: 'Uint', type: 'Uint' }));\n    }\n}\nexports.UintBuilder = UintBuilder;\n//# sourceMappingURL=uint.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci9zY2hlbWEtdXRpbHMvbGliL2N1c3RvbS10eXBlcy91aW50LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELG1CQUFtQjtBQUNuQixrQkFBa0IsbUJBQU8sQ0FBQyx3R0FBbUI7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQSx5REFBeUQsY0FBYyx3Q0FBd0M7QUFDL0c7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHRyZXpvci9zY2hlbWEtdXRpbHMvbGliL2N1c3RvbS10eXBlcy91aW50LmpzP2QxMWYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlVpbnRCdWlsZGVyID0gdm9pZCAwO1xuY29uc3QgdHlwZWJveF8xID0gcmVxdWlyZShcIkBzaW5jbGFpci90eXBlYm94XCIpO1xudHlwZWJveF8xLlR5cGVSZWdpc3RyeS5TZXQoJ1VpbnQnLCAoc2NoZW1hLCB2YWx1ZSkgPT4ge1xuICAgIGlmICh0eXBlb2YgdmFsdWUgIT09ICdzdHJpbmcnICYmIHR5cGVvZiB2YWx1ZSAhPT0gJ251bWJlcicpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBpZiAoKHR5cGVvZiB2YWx1ZSA9PT0gJ251bWJlcicgJiYgIU51bWJlci5pc1NhZmVJbnRlZ2VyKHZhbHVlKSkgfHxcbiAgICAgICAgIS9eKD86WzEtOV1cXGQqfFxcZCkkLy50ZXN0KHZhbHVlLnRvU3RyaW5nKCkucmVwbGFjZSgvXi0vLCBzY2hlbWEuYWxsb3dOZWdhdGl2ZSA/ICcnIDogJy0nKSkpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICByZXR1cm4gdHJ1ZTtcbn0pO1xuY2xhc3MgVWludEJ1aWxkZXIgZXh0ZW5kcyB0eXBlYm94XzEuSmF2YVNjcmlwdFR5cGVCdWlsZGVyIHtcbiAgICBVaW50KG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuQ3JlYXRlKE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgb3B0aW9ucyksIHsgW3R5cGVib3hfMS5LaW5kXTogJ1VpbnQnLCB0eXBlOiAnVWludCcgfSkpO1xuICAgIH1cbn1cbmV4cG9ydHMuVWludEJ1aWxkZXIgPSBVaW50QnVpbGRlcjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXVpbnQuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@trezor/schema-utils/lib/custom-types/uint.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/schema-utils/lib/errors.js":
/*!*********************************************************!*\
  !*** ./node_modules/@trezor/schema-utils/lib/errors.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.InvalidParameter = void 0;\nclass InvalidParameter extends Error {\n    constructor(reason, field, value) {\n        let message = `Invalid parameter`;\n        message += ` \"${field.substring(1)}\"`;\n        message += ` (= ${JSON.stringify(value)})`;\n        message += `: ${reason.replace(/'/g, '\"')}`;\n        super(message);\n        this.name = 'InvalidParameter';\n        this.field = field;\n    }\n}\nexports.InvalidParameter = InvalidParameter;\n//# sourceMappingURL=errors.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci9zY2hlbWEtdXRpbHMvbGliL2Vycm9ycy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCx3QkFBd0I7QUFDeEI7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLG1CQUFtQjtBQUMzQywwQkFBMEIsc0JBQXNCO0FBQ2hELHdCQUF3QiwwQkFBMEI7QUFDbEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QjtBQUN4QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHRyZXpvci9zY2hlbWEtdXRpbHMvbGliL2Vycm9ycy5qcz80MzlhIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5JbnZhbGlkUGFyYW1ldGVyID0gdm9pZCAwO1xuY2xhc3MgSW52YWxpZFBhcmFtZXRlciBleHRlbmRzIEVycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihyZWFzb24sIGZpZWxkLCB2YWx1ZSkge1xuICAgICAgICBsZXQgbWVzc2FnZSA9IGBJbnZhbGlkIHBhcmFtZXRlcmA7XG4gICAgICAgIG1lc3NhZ2UgKz0gYCBcIiR7ZmllbGQuc3Vic3RyaW5nKDEpfVwiYDtcbiAgICAgICAgbWVzc2FnZSArPSBgICg9ICR7SlNPTi5zdHJpbmdpZnkodmFsdWUpfSlgO1xuICAgICAgICBtZXNzYWdlICs9IGA6ICR7cmVhc29uLnJlcGxhY2UoLycvZywgJ1wiJyl9YDtcbiAgICAgICAgc3VwZXIobWVzc2FnZSk7XG4gICAgICAgIHRoaXMubmFtZSA9ICdJbnZhbGlkUGFyYW1ldGVyJztcbiAgICAgICAgdGhpcy5maWVsZCA9IGZpZWxkO1xuICAgIH1cbn1cbmV4cG9ydHMuSW52YWxpZFBhcmFtZXRlciA9IEludmFsaWRQYXJhbWV0ZXI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1lcnJvcnMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@trezor/schema-utils/lib/errors.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/schema-utils/lib/index.js":
/*!********************************************************!*\
  !*** ./node_modules/@trezor/schema-utils/lib/index.js ***!
  \********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Optional = exports.Type = exports.Assert = exports.Validate = void 0;\nconst typebox_1 = __webpack_require__(/*! @sinclair/typebox */ \"./node_modules/@trezor/schema-utils/node_modules/@sinclair/typebox/typebox.js\");\nObject.defineProperty(exports, \"Optional\", ({ enumerable: true, get: function () { return typebox_1.Optional; } }));\nconst errors_1 = __webpack_require__(/*! @sinclair/typebox/errors */ \"./node_modules/@trezor/schema-utils/node_modules/@sinclair/typebox/errors/index.js\");\nconst ts_mixer_1 = __webpack_require__(/*! ts-mixer */ \"./node_modules/ts-mixer/dist/esm/index.js\");\nconst custom_types_1 = __webpack_require__(/*! ./custom-types */ \"./node_modules/@trezor/schema-utils/lib/custom-types/index.js\");\nconst errors_2 = __webpack_require__(/*! ./errors */ \"./node_modules/@trezor/schema-utils/lib/errors.js\");\nclass CustomTypeBuilder extends (0, ts_mixer_1.Mixin)(typebox_1.JavaScriptTypeBuilder, custom_types_1.ArrayBufferBuilder, custom_types_1.BufferBuilder, custom_types_1.KeyofEnumBuilder, custom_types_1.UintBuilder) {\n}\nfunction Validate(schema, value) {\n    try {\n        Assert(schema, value);\n        return true;\n    }\n    catch (e) {\n        return false;\n    }\n}\nexports.Validate = Validate;\nfunction Assert(schema, value) {\n    const errors = [...(0, errors_1.Errors)(schema, value)];\n    let [error] = errors;\n    while (error) {\n        if (error.path === '/' && errors.length > 1) {\n        }\n        else if (error.value == null && error.schema[typebox_1.Optional] === 'Optional') {\n        }\n        else if (error.type === errors_1.ValueErrorType.Union) {\n            const currentValue = error.value;\n            const hasValidMember = error.schema.anyOf.find((unionSchema) => Validate(unionSchema, currentValue));\n            if (!hasValidMember)\n                throw new errors_2.InvalidParameter(error.message, error.path, error.value);\n        }\n        else {\n            throw new errors_2.InvalidParameter(error.message, error.path, error.value);\n        }\n        errors.shift();\n        [error] = errors;\n    }\n}\nexports.Assert = Assert;\nexports.Type = new CustomTypeBuilder();\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci9zY2hlbWEtdXRpbHMvbGliL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGdCQUFnQixHQUFHLFlBQVksR0FBRyxjQUFjLEdBQUcsZ0JBQWdCO0FBQ25FLGtCQUFrQixtQkFBTyxDQUFDLHdHQUFtQjtBQUM3Qyw0Q0FBMkMsRUFBRSxxQ0FBcUMsOEJBQThCLEVBQUM7QUFDakgsaUJBQWlCLG1CQUFPLENBQUMsb0hBQTBCO0FBQ25ELG1CQUFtQixtQkFBTyxDQUFDLDJEQUFVO0FBQ3JDLHVCQUF1QixtQkFBTyxDQUFDLHFGQUFnQjtBQUMvQyxpQkFBaUIsbUJBQU8sQ0FBQyxtRUFBVTtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCO0FBQ2hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWM7QUFDZCxZQUFZO0FBQ1oiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0B0cmV6b3Ivc2NoZW1hLXV0aWxzL2xpYi9pbmRleC5qcz84ODc0Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5PcHRpb25hbCA9IGV4cG9ydHMuVHlwZSA9IGV4cG9ydHMuQXNzZXJ0ID0gZXhwb3J0cy5WYWxpZGF0ZSA9IHZvaWQgMDtcbmNvbnN0IHR5cGVib3hfMSA9IHJlcXVpcmUoXCJAc2luY2xhaXIvdHlwZWJveFwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIk9wdGlvbmFsXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiB0eXBlYm94XzEuT3B0aW9uYWw7IH0gfSk7XG5jb25zdCBlcnJvcnNfMSA9IHJlcXVpcmUoXCJAc2luY2xhaXIvdHlwZWJveC9lcnJvcnNcIik7XG5jb25zdCB0c19taXhlcl8xID0gcmVxdWlyZShcInRzLW1peGVyXCIpO1xuY29uc3QgY3VzdG9tX3R5cGVzXzEgPSByZXF1aXJlKFwiLi9jdXN0b20tdHlwZXNcIik7XG5jb25zdCBlcnJvcnNfMiA9IHJlcXVpcmUoXCIuL2Vycm9yc1wiKTtcbmNsYXNzIEN1c3RvbVR5cGVCdWlsZGVyIGV4dGVuZHMgKDAsIHRzX21peGVyXzEuTWl4aW4pKHR5cGVib3hfMS5KYXZhU2NyaXB0VHlwZUJ1aWxkZXIsIGN1c3RvbV90eXBlc18xLkFycmF5QnVmZmVyQnVpbGRlciwgY3VzdG9tX3R5cGVzXzEuQnVmZmVyQnVpbGRlciwgY3VzdG9tX3R5cGVzXzEuS2V5b2ZFbnVtQnVpbGRlciwgY3VzdG9tX3R5cGVzXzEuVWludEJ1aWxkZXIpIHtcbn1cbmZ1bmN0aW9uIFZhbGlkYXRlKHNjaGVtYSwgdmFsdWUpIHtcbiAgICB0cnkge1xuICAgICAgICBBc3NlcnQoc2NoZW1hLCB2YWx1ZSk7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICBjYXRjaCAoZSkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxufVxuZXhwb3J0cy5WYWxpZGF0ZSA9IFZhbGlkYXRlO1xuZnVuY3Rpb24gQXNzZXJ0KHNjaGVtYSwgdmFsdWUpIHtcbiAgICBjb25zdCBlcnJvcnMgPSBbLi4uKDAsIGVycm9yc18xLkVycm9ycykoc2NoZW1hLCB2YWx1ZSldO1xuICAgIGxldCBbZXJyb3JdID0gZXJyb3JzO1xuICAgIHdoaWxlIChlcnJvcikge1xuICAgICAgICBpZiAoZXJyb3IucGF0aCA9PT0gJy8nICYmIGVycm9ycy5sZW5ndGggPiAxKSB7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoZXJyb3IudmFsdWUgPT0gbnVsbCAmJiBlcnJvci5zY2hlbWFbdHlwZWJveF8xLk9wdGlvbmFsXSA9PT0gJ09wdGlvbmFsJykge1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKGVycm9yLnR5cGUgPT09IGVycm9yc18xLlZhbHVlRXJyb3JUeXBlLlVuaW9uKSB7XG4gICAgICAgICAgICBjb25zdCBjdXJyZW50VmFsdWUgPSBlcnJvci52YWx1ZTtcbiAgICAgICAgICAgIGNvbnN0IGhhc1ZhbGlkTWVtYmVyID0gZXJyb3Iuc2NoZW1hLmFueU9mLmZpbmQoKHVuaW9uU2NoZW1hKSA9PiBWYWxpZGF0ZSh1bmlvblNjaGVtYSwgY3VycmVudFZhbHVlKSk7XG4gICAgICAgICAgICBpZiAoIWhhc1ZhbGlkTWVtYmVyKVxuICAgICAgICAgICAgICAgIHRocm93IG5ldyBlcnJvcnNfMi5JbnZhbGlkUGFyYW1ldGVyKGVycm9yLm1lc3NhZ2UsIGVycm9yLnBhdGgsIGVycm9yLnZhbHVlKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBlcnJvcnNfMi5JbnZhbGlkUGFyYW1ldGVyKGVycm9yLm1lc3NhZ2UsIGVycm9yLnBhdGgsIGVycm9yLnZhbHVlKTtcbiAgICAgICAgfVxuICAgICAgICBlcnJvcnMuc2hpZnQoKTtcbiAgICAgICAgW2Vycm9yXSA9IGVycm9ycztcbiAgICB9XG59XG5leHBvcnRzLkFzc2VydCA9IEFzc2VydDtcbmV4cG9ydHMuVHlwZSA9IG5ldyBDdXN0b21UeXBlQnVpbGRlcigpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@trezor/schema-utils/lib/index.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/schema-utils/node_modules/@sinclair/typebox/errors/errors.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@trezor/schema-utils/node_modules/@sinclair/typebox/errors/errors.js ***!
  \*******************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\n/*--------------------------------------------------------------------------\n\n@sinclair/typebox/errors\n\nThe MIT License (MIT)\n\nCopyright (c) 2017-2023 Haydn Paterson (sinclair) <haydn.developer@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n---------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Errors = exports.ValueErrorIterator = exports.EscapeKey = exports.ValueErrorsUnknownTypeError = exports.ValueErrorType = void 0;\nconst guard_1 = __webpack_require__(/*! ../value/guard */ \"./node_modules/@trezor/schema-utils/node_modules/@sinclair/typebox/value/guard.js\");\nconst system_1 = __webpack_require__(/*! ../system/system */ \"./node_modules/@trezor/schema-utils/node_modules/@sinclair/typebox/system/system.js\");\nconst deref_1 = __webpack_require__(/*! ../value/deref */ \"./node_modules/@trezor/schema-utils/node_modules/@sinclair/typebox/value/deref.js\");\nconst hash_1 = __webpack_require__(/*! ../value/hash */ \"./node_modules/@trezor/schema-utils/node_modules/@sinclair/typebox/value/hash.js\");\nconst Types = __webpack_require__(/*! ../typebox */ \"./node_modules/@trezor/schema-utils/node_modules/@sinclair/typebox/typebox.js\");\n// --------------------------------------------------------------------------\n// ValueErrorType\n// --------------------------------------------------------------------------\nvar ValueErrorType;\n(function (ValueErrorType) {\n    ValueErrorType[ValueErrorType[\"ArrayContains\"] = 0] = \"ArrayContains\";\n    ValueErrorType[ValueErrorType[\"ArrayMaxContains\"] = 1] = \"ArrayMaxContains\";\n    ValueErrorType[ValueErrorType[\"ArrayMaxItems\"] = 2] = \"ArrayMaxItems\";\n    ValueErrorType[ValueErrorType[\"ArrayMinContains\"] = 3] = \"ArrayMinContains\";\n    ValueErrorType[ValueErrorType[\"ArrayMinItems\"] = 4] = \"ArrayMinItems\";\n    ValueErrorType[ValueErrorType[\"ArrayUniqueItems\"] = 5] = \"ArrayUniqueItems\";\n    ValueErrorType[ValueErrorType[\"Array\"] = 6] = \"Array\";\n    ValueErrorType[ValueErrorType[\"AsyncIterator\"] = 7] = \"AsyncIterator\";\n    ValueErrorType[ValueErrorType[\"BigIntExclusiveMaximum\"] = 8] = \"BigIntExclusiveMaximum\";\n    ValueErrorType[ValueErrorType[\"BigIntExclusiveMinimum\"] = 9] = \"BigIntExclusiveMinimum\";\n    ValueErrorType[ValueErrorType[\"BigIntMaximum\"] = 10] = \"BigIntMaximum\";\n    ValueErrorType[ValueErrorType[\"BigIntMinimum\"] = 11] = \"BigIntMinimum\";\n    ValueErrorType[ValueErrorType[\"BigIntMultipleOf\"] = 12] = \"BigIntMultipleOf\";\n    ValueErrorType[ValueErrorType[\"BigInt\"] = 13] = \"BigInt\";\n    ValueErrorType[ValueErrorType[\"Boolean\"] = 14] = \"Boolean\";\n    ValueErrorType[ValueErrorType[\"DateExclusiveMaximumTimestamp\"] = 15] = \"DateExclusiveMaximumTimestamp\";\n    ValueErrorType[ValueErrorType[\"DateExclusiveMinimumTimestamp\"] = 16] = \"DateExclusiveMinimumTimestamp\";\n    ValueErrorType[ValueErrorType[\"DateMaximumTimestamp\"] = 17] = \"DateMaximumTimestamp\";\n    ValueErrorType[ValueErrorType[\"DateMinimumTimestamp\"] = 18] = \"DateMinimumTimestamp\";\n    ValueErrorType[ValueErrorType[\"DateMultipleOfTimestamp\"] = 19] = \"DateMultipleOfTimestamp\";\n    ValueErrorType[ValueErrorType[\"Date\"] = 20] = \"Date\";\n    ValueErrorType[ValueErrorType[\"Function\"] = 21] = \"Function\";\n    ValueErrorType[ValueErrorType[\"IntegerExclusiveMaximum\"] = 22] = \"IntegerExclusiveMaximum\";\n    ValueErrorType[ValueErrorType[\"IntegerExclusiveMinimum\"] = 23] = \"IntegerExclusiveMinimum\";\n    ValueErrorType[ValueErrorType[\"IntegerMaximum\"] = 24] = \"IntegerMaximum\";\n    ValueErrorType[ValueErrorType[\"IntegerMinimum\"] = 25] = \"IntegerMinimum\";\n    ValueErrorType[ValueErrorType[\"IntegerMultipleOf\"] = 26] = \"IntegerMultipleOf\";\n    ValueErrorType[ValueErrorType[\"Integer\"] = 27] = \"Integer\";\n    ValueErrorType[ValueErrorType[\"IntersectUnevaluatedProperties\"] = 28] = \"IntersectUnevaluatedProperties\";\n    ValueErrorType[ValueErrorType[\"Intersect\"] = 29] = \"Intersect\";\n    ValueErrorType[ValueErrorType[\"Iterator\"] = 30] = \"Iterator\";\n    ValueErrorType[ValueErrorType[\"Kind\"] = 31] = \"Kind\";\n    ValueErrorType[ValueErrorType[\"Literal\"] = 32] = \"Literal\";\n    ValueErrorType[ValueErrorType[\"Never\"] = 33] = \"Never\";\n    ValueErrorType[ValueErrorType[\"Not\"] = 34] = \"Not\";\n    ValueErrorType[ValueErrorType[\"Null\"] = 35] = \"Null\";\n    ValueErrorType[ValueErrorType[\"NumberExclusiveMaximum\"] = 36] = \"NumberExclusiveMaximum\";\n    ValueErrorType[ValueErrorType[\"NumberExclusiveMinimum\"] = 37] = \"NumberExclusiveMinimum\";\n    ValueErrorType[ValueErrorType[\"NumberMaximum\"] = 38] = \"NumberMaximum\";\n    ValueErrorType[ValueErrorType[\"NumberMinimum\"] = 39] = \"NumberMinimum\";\n    ValueErrorType[ValueErrorType[\"NumberMultipleOf\"] = 40] = \"NumberMultipleOf\";\n    ValueErrorType[ValueErrorType[\"Number\"] = 41] = \"Number\";\n    ValueErrorType[ValueErrorType[\"ObjectAdditionalProperties\"] = 42] = \"ObjectAdditionalProperties\";\n    ValueErrorType[ValueErrorType[\"ObjectMaxProperties\"] = 43] = \"ObjectMaxProperties\";\n    ValueErrorType[ValueErrorType[\"ObjectMinProperties\"] = 44] = \"ObjectMinProperties\";\n    ValueErrorType[ValueErrorType[\"ObjectRequiredProperty\"] = 45] = \"ObjectRequiredProperty\";\n    ValueErrorType[ValueErrorType[\"Object\"] = 46] = \"Object\";\n    ValueErrorType[ValueErrorType[\"Promise\"] = 47] = \"Promise\";\n    ValueErrorType[ValueErrorType[\"StringFormatUnknown\"] = 48] = \"StringFormatUnknown\";\n    ValueErrorType[ValueErrorType[\"StringFormat\"] = 49] = \"StringFormat\";\n    ValueErrorType[ValueErrorType[\"StringMaxLength\"] = 50] = \"StringMaxLength\";\n    ValueErrorType[ValueErrorType[\"StringMinLength\"] = 51] = \"StringMinLength\";\n    ValueErrorType[ValueErrorType[\"StringPattern\"] = 52] = \"StringPattern\";\n    ValueErrorType[ValueErrorType[\"String\"] = 53] = \"String\";\n    ValueErrorType[ValueErrorType[\"Symbol\"] = 54] = \"Symbol\";\n    ValueErrorType[ValueErrorType[\"TupleLength\"] = 55] = \"TupleLength\";\n    ValueErrorType[ValueErrorType[\"Tuple\"] = 56] = \"Tuple\";\n    ValueErrorType[ValueErrorType[\"Uint8ArrayMaxByteLength\"] = 57] = \"Uint8ArrayMaxByteLength\";\n    ValueErrorType[ValueErrorType[\"Uint8ArrayMinByteLength\"] = 58] = \"Uint8ArrayMinByteLength\";\n    ValueErrorType[ValueErrorType[\"Uint8Array\"] = 59] = \"Uint8Array\";\n    ValueErrorType[ValueErrorType[\"Undefined\"] = 60] = \"Undefined\";\n    ValueErrorType[ValueErrorType[\"Union\"] = 61] = \"Union\";\n    ValueErrorType[ValueErrorType[\"Void\"] = 62] = \"Void\";\n})(ValueErrorType || (exports.ValueErrorType = ValueErrorType = {}));\n// --------------------------------------------------------------------------\n// ValueErrors\n// --------------------------------------------------------------------------\nclass ValueErrorsUnknownTypeError extends Types.TypeBoxError {\n    constructor(schema) {\n        super('Unknown type');\n        this.schema = schema;\n    }\n}\nexports.ValueErrorsUnknownTypeError = ValueErrorsUnknownTypeError;\n// --------------------------------------------------------------------------\n// EscapeKey\n// --------------------------------------------------------------------------\nfunction EscapeKey(key) {\n    return key.replace(/~/g, '~0').replace(/\\//g, '~1'); // RFC6901 Path\n}\nexports.EscapeKey = EscapeKey;\n// --------------------------------------------------------------------------\n// Guards\n// --------------------------------------------------------------------------\nfunction IsDefined(value) {\n    return value !== undefined;\n}\n// --------------------------------------------------------------------------\n// ValueErrorIterator\n// --------------------------------------------------------------------------\nclass ValueErrorIterator {\n    constructor(iterator) {\n        this.iterator = iterator;\n    }\n    [Symbol.iterator]() {\n        return this.iterator;\n    }\n    /** Returns the first value error or undefined if no errors */\n    First() {\n        const next = this.iterator.next();\n        return next.done ? undefined : next.value;\n    }\n}\nexports.ValueErrorIterator = ValueErrorIterator;\n// --------------------------------------------------------------------------\n// Create\n// --------------------------------------------------------------------------\nfunction Create(type, schema, path, value) {\n    return { type, schema, path, value, message: system_1.TypeSystemErrorFunction.Get()(schema, type) };\n}\n// --------------------------------------------------------------------------\n// Types\n// --------------------------------------------------------------------------\nfunction* TAny(schema, references, path, value) { }\nfunction* TArray(schema, references, path, value) {\n    if (!(0, guard_1.IsArray)(value)) {\n        return yield Create(ValueErrorType.Array, schema, path, value);\n    }\n    if (IsDefined(schema.minItems) && !(value.length >= schema.minItems)) {\n        yield Create(ValueErrorType.ArrayMinItems, schema, path, value);\n    }\n    if (IsDefined(schema.maxItems) && !(value.length <= schema.maxItems)) {\n        yield Create(ValueErrorType.ArrayMaxItems, schema, path, value);\n    }\n    for (let i = 0; i < value.length; i++) {\n        yield* Visit(schema.items, references, `${path}/${i}`, value[i]);\n    }\n    // prettier-ignore\n    if (schema.uniqueItems === true && !((function () { const set = new Set(); for (const element of value) {\n        const hashed = (0, hash_1.Hash)(element);\n        if (set.has(hashed)) {\n            return false;\n        }\n        else {\n            set.add(hashed);\n        }\n    } return true; })())) {\n        yield Create(ValueErrorType.ArrayUniqueItems, schema, path, value);\n    }\n    // contains\n    if (!(IsDefined(schema.contains) || IsDefined(schema.minContains) || IsDefined(schema.maxContains))) {\n        return;\n    }\n    const containsSchema = IsDefined(schema.contains) ? schema.contains : Types.Type.Never();\n    const containsCount = value.reduce((acc, value, index) => (Visit(containsSchema, references, `${path}${index}`, value).next().done === true ? acc + 1 : acc), 0);\n    if (containsCount === 0) {\n        yield Create(ValueErrorType.ArrayContains, schema, path, value);\n    }\n    if ((0, guard_1.IsNumber)(schema.minContains) && containsCount < schema.minContains) {\n        yield Create(ValueErrorType.ArrayMinContains, schema, path, value);\n    }\n    if ((0, guard_1.IsNumber)(schema.maxContains) && containsCount > schema.maxContains) {\n        yield Create(ValueErrorType.ArrayMaxContains, schema, path, value);\n    }\n}\nfunction* TAsyncIterator(schema, references, path, value) {\n    if (!(0, guard_1.IsAsyncIterator)(value))\n        yield Create(ValueErrorType.AsyncIterator, schema, path, value);\n}\nfunction* TBigInt(schema, references, path, value) {\n    if (!(0, guard_1.IsBigInt)(value))\n        return yield Create(ValueErrorType.BigInt, schema, path, value);\n    if (IsDefined(schema.exclusiveMaximum) && !(value < schema.exclusiveMaximum)) {\n        yield Create(ValueErrorType.BigIntExclusiveMaximum, schema, path, value);\n    }\n    if (IsDefined(schema.exclusiveMinimum) && !(value > schema.exclusiveMinimum)) {\n        yield Create(ValueErrorType.BigIntExclusiveMinimum, schema, path, value);\n    }\n    if (IsDefined(schema.maximum) && !(value <= schema.maximum)) {\n        yield Create(ValueErrorType.BigIntMaximum, schema, path, value);\n    }\n    if (IsDefined(schema.minimum) && !(value >= schema.minimum)) {\n        yield Create(ValueErrorType.BigIntMinimum, schema, path, value);\n    }\n    if (IsDefined(schema.multipleOf) && !(value % schema.multipleOf === BigInt(0))) {\n        yield Create(ValueErrorType.BigIntMultipleOf, schema, path, value);\n    }\n}\nfunction* TBoolean(schema, references, path, value) {\n    if (!(0, guard_1.IsBoolean)(value))\n        yield Create(ValueErrorType.Boolean, schema, path, value);\n}\nfunction* TConstructor(schema, references, path, value) {\n    yield* Visit(schema.returns, references, path, value.prototype);\n}\nfunction* TDate(schema, references, path, value) {\n    if (!(0, guard_1.IsDate)(value))\n        return yield Create(ValueErrorType.Date, schema, path, value);\n    if (IsDefined(schema.exclusiveMaximumTimestamp) && !(value.getTime() < schema.exclusiveMaximumTimestamp)) {\n        yield Create(ValueErrorType.DateExclusiveMaximumTimestamp, schema, path, value);\n    }\n    if (IsDefined(schema.exclusiveMinimumTimestamp) && !(value.getTime() > schema.exclusiveMinimumTimestamp)) {\n        yield Create(ValueErrorType.DateExclusiveMinimumTimestamp, schema, path, value);\n    }\n    if (IsDefined(schema.maximumTimestamp) && !(value.getTime() <= schema.maximumTimestamp)) {\n        yield Create(ValueErrorType.DateMaximumTimestamp, schema, path, value);\n    }\n    if (IsDefined(schema.minimumTimestamp) && !(value.getTime() >= schema.minimumTimestamp)) {\n        yield Create(ValueErrorType.DateMinimumTimestamp, schema, path, value);\n    }\n    if (IsDefined(schema.multipleOfTimestamp) && !(value.getTime() % schema.multipleOfTimestamp === 0)) {\n        yield Create(ValueErrorType.DateMultipleOfTimestamp, schema, path, value);\n    }\n}\nfunction* TFunction(schema, references, path, value) {\n    if (!(0, guard_1.IsFunction)(value))\n        yield Create(ValueErrorType.Function, schema, path, value);\n}\nfunction* TInteger(schema, references, path, value) {\n    if (!(0, guard_1.IsInteger)(value))\n        return yield Create(ValueErrorType.Integer, schema, path, value);\n    if (IsDefined(schema.exclusiveMaximum) && !(value < schema.exclusiveMaximum)) {\n        yield Create(ValueErrorType.IntegerExclusiveMaximum, schema, path, value);\n    }\n    if (IsDefined(schema.exclusiveMinimum) && !(value > schema.exclusiveMinimum)) {\n        yield Create(ValueErrorType.IntegerExclusiveMinimum, schema, path, value);\n    }\n    if (IsDefined(schema.maximum) && !(value <= schema.maximum)) {\n        yield Create(ValueErrorType.IntegerMaximum, schema, path, value);\n    }\n    if (IsDefined(schema.minimum) && !(value >= schema.minimum)) {\n        yield Create(ValueErrorType.IntegerMinimum, schema, path, value);\n    }\n    if (IsDefined(schema.multipleOf) && !(value % schema.multipleOf === 0)) {\n        yield Create(ValueErrorType.IntegerMultipleOf, schema, path, value);\n    }\n}\nfunction* TIntersect(schema, references, path, value) {\n    for (const inner of schema.allOf) {\n        const next = Visit(inner, references, path, value).next();\n        if (!next.done) {\n            yield Create(ValueErrorType.Intersect, schema, path, value);\n            yield next.value;\n        }\n    }\n    if (schema.unevaluatedProperties === false) {\n        const keyCheck = new RegExp(Types.KeyResolver.ResolvePattern(schema));\n        for (const valueKey of Object.getOwnPropertyNames(value)) {\n            if (!keyCheck.test(valueKey)) {\n                yield Create(ValueErrorType.IntersectUnevaluatedProperties, schema, `${path}/${valueKey}`, value);\n            }\n        }\n    }\n    if (typeof schema.unevaluatedProperties === 'object') {\n        const keyCheck = new RegExp(Types.KeyResolver.ResolvePattern(schema));\n        for (const valueKey of Object.getOwnPropertyNames(value)) {\n            if (!keyCheck.test(valueKey)) {\n                const next = Visit(schema.unevaluatedProperties, references, `${path}/${valueKey}`, value[valueKey]).next();\n                if (!next.done)\n                    yield next.value; // yield interior\n            }\n        }\n    }\n}\nfunction* TIterator(schema, references, path, value) {\n    if (!(0, guard_1.IsIterator)(value))\n        yield Create(ValueErrorType.Iterator, schema, path, value);\n}\nfunction* TLiteral(schema, references, path, value) {\n    if (!(value === schema.const))\n        yield Create(ValueErrorType.Literal, schema, path, value);\n}\nfunction* TNever(schema, references, path, value) {\n    yield Create(ValueErrorType.Never, schema, path, value);\n}\nfunction* TNot(schema, references, path, value) {\n    if (Visit(schema.not, references, path, value).next().done === true)\n        yield Create(ValueErrorType.Not, schema, path, value);\n}\nfunction* TNull(schema, references, path, value) {\n    if (!(0, guard_1.IsNull)(value))\n        yield Create(ValueErrorType.Null, schema, path, value);\n}\nfunction* TNumber(schema, references, path, value) {\n    if (!system_1.TypeSystemPolicy.IsNumberLike(value))\n        return yield Create(ValueErrorType.Number, schema, path, value);\n    if (IsDefined(schema.exclusiveMaximum) && !(value < schema.exclusiveMaximum)) {\n        yield Create(ValueErrorType.NumberExclusiveMaximum, schema, path, value);\n    }\n    if (IsDefined(schema.exclusiveMinimum) && !(value > schema.exclusiveMinimum)) {\n        yield Create(ValueErrorType.NumberExclusiveMinimum, schema, path, value);\n    }\n    if (IsDefined(schema.maximum) && !(value <= schema.maximum)) {\n        yield Create(ValueErrorType.NumberMaximum, schema, path, value);\n    }\n    if (IsDefined(schema.minimum) && !(value >= schema.minimum)) {\n        yield Create(ValueErrorType.NumberMinimum, schema, path, value);\n    }\n    if (IsDefined(schema.multipleOf) && !(value % schema.multipleOf === 0)) {\n        yield Create(ValueErrorType.NumberMultipleOf, schema, path, value);\n    }\n}\nfunction* TObject(schema, references, path, value) {\n    if (!system_1.TypeSystemPolicy.IsObjectLike(value))\n        return yield Create(ValueErrorType.Object, schema, path, value);\n    if (IsDefined(schema.minProperties) && !(Object.getOwnPropertyNames(value).length >= schema.minProperties)) {\n        yield Create(ValueErrorType.ObjectMinProperties, schema, path, value);\n    }\n    if (IsDefined(schema.maxProperties) && !(Object.getOwnPropertyNames(value).length <= schema.maxProperties)) {\n        yield Create(ValueErrorType.ObjectMaxProperties, schema, path, value);\n    }\n    const requiredKeys = Array.isArray(schema.required) ? schema.required : [];\n    const knownKeys = Object.getOwnPropertyNames(schema.properties);\n    const unknownKeys = Object.getOwnPropertyNames(value);\n    for (const requiredKey of requiredKeys) {\n        if (unknownKeys.includes(requiredKey))\n            continue;\n        yield Create(ValueErrorType.ObjectRequiredProperty, schema.properties[requiredKey], `${path}/${EscapeKey(requiredKey)}`, undefined);\n    }\n    if (schema.additionalProperties === false) {\n        for (const valueKey of unknownKeys) {\n            if (!knownKeys.includes(valueKey)) {\n                yield Create(ValueErrorType.ObjectAdditionalProperties, schema, `${path}/${EscapeKey(valueKey)}`, value[valueKey]);\n            }\n        }\n    }\n    if (typeof schema.additionalProperties === 'object') {\n        for (const valueKey of unknownKeys) {\n            if (knownKeys.includes(valueKey))\n                continue;\n            yield* Visit(schema.additionalProperties, references, `${path}/${EscapeKey(valueKey)}`, value[valueKey]);\n        }\n    }\n    for (const knownKey of knownKeys) {\n        const property = schema.properties[knownKey];\n        if (schema.required && schema.required.includes(knownKey)) {\n            yield* Visit(property, references, `${path}/${EscapeKey(knownKey)}`, value[knownKey]);\n            if (Types.ExtendsUndefined.Check(schema) && !(knownKey in value)) {\n                yield Create(ValueErrorType.ObjectRequiredProperty, property, `${path}/${EscapeKey(knownKey)}`, undefined);\n            }\n        }\n        else {\n            if (system_1.TypeSystemPolicy.IsExactOptionalProperty(value, knownKey)) {\n                yield* Visit(property, references, `${path}/${EscapeKey(knownKey)}`, value[knownKey]);\n            }\n        }\n    }\n}\nfunction* TPromise(schema, references, path, value) {\n    if (!(0, guard_1.IsPromise)(value))\n        yield Create(ValueErrorType.Promise, schema, path, value);\n}\nfunction* TRecord(schema, references, path, value) {\n    if (!system_1.TypeSystemPolicy.IsRecordLike(value))\n        return yield Create(ValueErrorType.Object, schema, path, value);\n    if (IsDefined(schema.minProperties) && !(Object.getOwnPropertyNames(value).length >= schema.minProperties)) {\n        yield Create(ValueErrorType.ObjectMinProperties, schema, path, value);\n    }\n    if (IsDefined(schema.maxProperties) && !(Object.getOwnPropertyNames(value).length <= schema.maxProperties)) {\n        yield Create(ValueErrorType.ObjectMaxProperties, schema, path, value);\n    }\n    const [patternKey, patternSchema] = Object.entries(schema.patternProperties)[0];\n    const regex = new RegExp(patternKey);\n    for (const [propertyKey, propertyValue] of Object.entries(value)) {\n        if (regex.test(propertyKey))\n            yield* Visit(patternSchema, references, `${path}/${EscapeKey(propertyKey)}`, propertyValue);\n    }\n    if (typeof schema.additionalProperties === 'object') {\n        for (const [propertyKey, propertyValue] of Object.entries(value)) {\n            if (!regex.test(propertyKey))\n                yield* Visit(schema.additionalProperties, references, `${path}/${EscapeKey(propertyKey)}`, propertyValue);\n        }\n    }\n    if (schema.additionalProperties === false) {\n        for (const [propertyKey, propertyValue] of Object.entries(value)) {\n            if (regex.test(propertyKey))\n                continue;\n            return yield Create(ValueErrorType.ObjectAdditionalProperties, schema, `${path}/${EscapeKey(propertyKey)}`, propertyValue);\n        }\n    }\n}\nfunction* TRef(schema, references, path, value) {\n    yield* Visit((0, deref_1.Deref)(schema, references), references, path, value);\n}\nfunction* TString(schema, references, path, value) {\n    if (!(0, guard_1.IsString)(value))\n        return yield Create(ValueErrorType.String, schema, path, value);\n    if (IsDefined(schema.minLength) && !(value.length >= schema.minLength)) {\n        yield Create(ValueErrorType.StringMinLength, schema, path, value);\n    }\n    if (IsDefined(schema.maxLength) && !(value.length <= schema.maxLength)) {\n        yield Create(ValueErrorType.StringMaxLength, schema, path, value);\n    }\n    if ((0, guard_1.IsString)(schema.pattern)) {\n        const regex = new RegExp(schema.pattern);\n        if (!regex.test(value)) {\n            yield Create(ValueErrorType.StringPattern, schema, path, value);\n        }\n    }\n    if ((0, guard_1.IsString)(schema.format)) {\n        if (!Types.FormatRegistry.Has(schema.format)) {\n            yield Create(ValueErrorType.StringFormatUnknown, schema, path, value);\n        }\n        else {\n            const format = Types.FormatRegistry.Get(schema.format);\n            if (!format(value)) {\n                yield Create(ValueErrorType.StringFormat, schema, path, value);\n            }\n        }\n    }\n}\nfunction* TSymbol(schema, references, path, value) {\n    if (!(0, guard_1.IsSymbol)(value))\n        yield Create(ValueErrorType.Symbol, schema, path, value);\n}\nfunction* TTemplateLiteral(schema, references, path, value) {\n    if (!(0, guard_1.IsString)(value))\n        return yield Create(ValueErrorType.String, schema, path, value);\n    const regex = new RegExp(schema.pattern);\n    if (!regex.test(value)) {\n        yield Create(ValueErrorType.StringPattern, schema, path, value);\n    }\n}\nfunction* TThis(schema, references, path, value) {\n    yield* Visit((0, deref_1.Deref)(schema, references), references, path, value);\n}\nfunction* TTuple(schema, references, path, value) {\n    if (!(0, guard_1.IsArray)(value))\n        return yield Create(ValueErrorType.Tuple, schema, path, value);\n    if (schema.items === undefined && !(value.length === 0)) {\n        return yield Create(ValueErrorType.TupleLength, schema, path, value);\n    }\n    if (!(value.length === schema.maxItems)) {\n        return yield Create(ValueErrorType.TupleLength, schema, path, value);\n    }\n    if (!schema.items) {\n        return;\n    }\n    for (let i = 0; i < schema.items.length; i++) {\n        yield* Visit(schema.items[i], references, `${path}/${i}`, value[i]);\n    }\n}\nfunction* TUndefined(schema, references, path, value) {\n    if (!(0, guard_1.IsUndefined)(value))\n        yield Create(ValueErrorType.Undefined, schema, path, value);\n}\nfunction* TUnion(schema, references, path, value) {\n    let count = 0;\n    for (const subschema of schema.anyOf) {\n        const errors = [...Visit(subschema, references, path, value)];\n        if (errors.length === 0)\n            return; // matched\n        count += errors.length;\n    }\n    if (count > 0) {\n        yield Create(ValueErrorType.Union, schema, path, value);\n    }\n}\nfunction* TUint8Array(schema, references, path, value) {\n    if (!(0, guard_1.IsUint8Array)(value))\n        return yield Create(ValueErrorType.Uint8Array, schema, path, value);\n    if (IsDefined(schema.maxByteLength) && !(value.length <= schema.maxByteLength)) {\n        yield Create(ValueErrorType.Uint8ArrayMaxByteLength, schema, path, value);\n    }\n    if (IsDefined(schema.minByteLength) && !(value.length >= schema.minByteLength)) {\n        yield Create(ValueErrorType.Uint8ArrayMinByteLength, schema, path, value);\n    }\n}\nfunction* TUnknown(schema, references, path, value) { }\nfunction* TVoid(schema, references, path, value) {\n    if (!system_1.TypeSystemPolicy.IsVoidLike(value))\n        yield Create(ValueErrorType.Void, schema, path, value);\n}\nfunction* TKind(schema, references, path, value) {\n    const check = Types.TypeRegistry.Get(schema[Types.Kind]);\n    if (!check(schema, value))\n        yield Create(ValueErrorType.Kind, schema, path, value);\n}\nfunction* Visit(schema, references, path, value) {\n    const references_ = IsDefined(schema.$id) ? [...references, schema] : references;\n    const schema_ = schema;\n    switch (schema_[Types.Kind]) {\n        case 'Any':\n            return yield* TAny(schema_, references_, path, value);\n        case 'Array':\n            return yield* TArray(schema_, references_, path, value);\n        case 'AsyncIterator':\n            return yield* TAsyncIterator(schema_, references_, path, value);\n        case 'BigInt':\n            return yield* TBigInt(schema_, references_, path, value);\n        case 'Boolean':\n            return yield* TBoolean(schema_, references_, path, value);\n        case 'Constructor':\n            return yield* TConstructor(schema_, references_, path, value);\n        case 'Date':\n            return yield* TDate(schema_, references_, path, value);\n        case 'Function':\n            return yield* TFunction(schema_, references_, path, value);\n        case 'Integer':\n            return yield* TInteger(schema_, references_, path, value);\n        case 'Intersect':\n            return yield* TIntersect(schema_, references_, path, value);\n        case 'Iterator':\n            return yield* TIterator(schema_, references_, path, value);\n        case 'Literal':\n            return yield* TLiteral(schema_, references_, path, value);\n        case 'Never':\n            return yield* TNever(schema_, references_, path, value);\n        case 'Not':\n            return yield* TNot(schema_, references_, path, value);\n        case 'Null':\n            return yield* TNull(schema_, references_, path, value);\n        case 'Number':\n            return yield* TNumber(schema_, references_, path, value);\n        case 'Object':\n            return yield* TObject(schema_, references_, path, value);\n        case 'Promise':\n            return yield* TPromise(schema_, references_, path, value);\n        case 'Record':\n            return yield* TRecord(schema_, references_, path, value);\n        case 'Ref':\n            return yield* TRef(schema_, references_, path, value);\n        case 'String':\n            return yield* TString(schema_, references_, path, value);\n        case 'Symbol':\n            return yield* TSymbol(schema_, references_, path, value);\n        case 'TemplateLiteral':\n            return yield* TTemplateLiteral(schema_, references_, path, value);\n        case 'This':\n            return yield* TThis(schema_, references_, path, value);\n        case 'Tuple':\n            return yield* TTuple(schema_, references_, path, value);\n        case 'Undefined':\n            return yield* TUndefined(schema_, references_, path, value);\n        case 'Union':\n            return yield* TUnion(schema_, references_, path, value);\n        case 'Uint8Array':\n            return yield* TUint8Array(schema_, references_, path, value);\n        case 'Unknown':\n            return yield* TUnknown(schema_, references_, path, value);\n        case 'Void':\n            return yield* TVoid(schema_, references_, path, value);\n        default:\n            if (!Types.TypeRegistry.Has(schema_[Types.Kind]))\n                throw new ValueErrorsUnknownTypeError(schema);\n            return yield* TKind(schema_, references_, path, value);\n    }\n}\n/** Returns an iterator for each error in this value. */\nfunction Errors(...args) {\n    const iterator = args.length === 3 ? Visit(args[0], args[1], '', args[2]) : Visit(args[0], [], '', args[1]);\n    return new ValueErrorIterator(iterator);\n}\nexports.Errors = Errors;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@trezor/schema-utils/node_modules/@sinclair/typebox/errors/errors.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/schema-utils/node_modules/@sinclair/typebox/errors/index.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@trezor/schema-utils/node_modules/@sinclair/typebox/errors/index.js ***!
  \******************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\n/*--------------------------------------------------------------------------\n\n@sinclair/typebox/errors\n\nThe MIT License (MIT)\n\nCopyright (c) 2017-2023 Haydn Paterson (sinclair) <haydn.developer@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n---------------------------------------------------------------------------*/\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./errors */ \"./node_modules/@trezor/schema-utils/node_modules/@sinclair/typebox/errors/errors.js\"), exports);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci9zY2hlbWEtdXRpbHMvbm9kZV9tb2R1bGVzL0BzaW5jbGFpci90eXBlYm94L2Vycm9ycy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiOztBQUVBOztBQUVBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLG9DQUFvQztBQUNuRDtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGFBQWEsbUJBQU8sQ0FBQyxxR0FBVSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHRyZXpvci9zY2hlbWEtdXRpbHMvbm9kZV9tb2R1bGVzL0BzaW5jbGFpci90eXBlYm94L2Vycm9ycy9pbmRleC5qcz83Mzc0Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5Ac2luY2xhaXIvdHlwZWJveC9lcnJvcnNcblxuVGhlIE1JVCBMaWNlbnNlIChNSVQpXG5cbkNvcHlyaWdodCAoYykgMjAxNy0yMDIzIEhheWRuIFBhdGVyc29uIChzaW5jbGFpcikgPGhheWRuLmRldmVsb3BlckBnbWFpbC5jb20+XG5cblBlcm1pc3Npb24gaXMgaGVyZWJ5IGdyYW50ZWQsIGZyZWUgb2YgY2hhcmdlLCB0byBhbnkgcGVyc29uIG9idGFpbmluZyBhIGNvcHlcbm9mIHRoaXMgc29mdHdhcmUgYW5kIGFzc29jaWF0ZWQgZG9jdW1lbnRhdGlvbiBmaWxlcyAodGhlIFwiU29mdHdhcmVcIiksIHRvIGRlYWxcbmluIHRoZSBTb2Z0d2FyZSB3aXRob3V0IHJlc3RyaWN0aW9uLCBpbmNsdWRpbmcgd2l0aG91dCBsaW1pdGF0aW9uIHRoZSByaWdodHNcbnRvIHVzZSwgY29weSwgbW9kaWZ5LCBtZXJnZSwgcHVibGlzaCwgZGlzdHJpYnV0ZSwgc3VibGljZW5zZSwgYW5kL29yIHNlbGxcbmNvcGllcyBvZiB0aGUgU29mdHdhcmUsIGFuZCB0byBwZXJtaXQgcGVyc29ucyB0byB3aG9tIHRoZSBTb2Z0d2FyZSBpc1xuZnVybmlzaGVkIHRvIGRvIHNvLCBzdWJqZWN0IHRvIHRoZSBmb2xsb3dpbmcgY29uZGl0aW9uczpcblxuVGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UgYW5kIHRoaXMgcGVybWlzc2lvbiBub3RpY2Ugc2hhbGwgYmUgaW5jbHVkZWQgaW5cbmFsbCBjb3BpZXMgb3Igc3Vic3RhbnRpYWwgcG9ydGlvbnMgb2YgdGhlIFNvZnR3YXJlLlxuXG5USEUgU09GVFdBUkUgSVMgUFJPVklERUQgXCJBUyBJU1wiLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBLSU5ELCBFWFBSRVNTIE9SXG5JTVBMSUVELCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GIE1FUkNIQU5UQUJJTElUWSxcbkZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFORCBOT05JTkZSSU5HRU1FTlQuIElOIE5PIEVWRU5UIFNIQUxMIFRIRVxuQVVUSE9SUyBPUiBDT1BZUklHSFQgSE9MREVSUyBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSwgREFNQUdFUyBPUiBPVEhFUlxuTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCwgVE9SVCBPUiBPVEhFUldJU0UsIEFSSVNJTkcgRlJPTSxcbk9VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRSBVU0UgT1IgT1RIRVIgREVBTElOR1MgSU5cblRIRSBTT0ZUV0FSRS5cblxuLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbnZhciBfX2NyZWF0ZUJpbmRpbmcgPSAodGhpcyAmJiB0aGlzLl9fY3JlYXRlQmluZGluZykgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIHZhciBkZXNjID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihtLCBrKTtcbiAgICBpZiAoIWRlc2MgfHwgKFwiZ2V0XCIgaW4gZGVzYyA/ICFtLl9fZXNNb2R1bGUgOiBkZXNjLndyaXRhYmxlIHx8IGRlc2MuY29uZmlndXJhYmxlKSkge1xuICAgICAgZGVzYyA9IHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbigpIHsgcmV0dXJuIG1ba107IH0gfTtcbiAgICB9XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIGsyLCBkZXNjKTtcbn0pIDogKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICBvW2syXSA9IG1ba107XG59KSk7XG52YXIgX19leHBvcnRTdGFyID0gKHRoaXMgJiYgdGhpcy5fX2V4cG9ydFN0YXIpIHx8IGZ1bmN0aW9uKG0sIGV4cG9ydHMpIHtcbiAgICBmb3IgKHZhciBwIGluIG0pIGlmIChwICE9PSBcImRlZmF1bHRcIiAmJiAhT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGV4cG9ydHMsIHApKSBfX2NyZWF0ZUJpbmRpbmcoZXhwb3J0cywgbSwgcCk7XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2Vycm9yc1wiKSwgZXhwb3J0cyk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@trezor/schema-utils/node_modules/@sinclair/typebox/errors/index.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/schema-utils/node_modules/@sinclair/typebox/system/system.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@trezor/schema-utils/node_modules/@sinclair/typebox/system/system.js ***!
  \*******************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\n/*--------------------------------------------------------------------------\n\n@sinclair/typebox/system\n\nThe MIT License (MIT)\n\nCopyright (c) 2017-2023 Haydn Paterson (sinclair) <haydn.developer@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n---------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.DefaultErrorFunction = exports.TypeSystemPolicy = exports.TypeSystemErrorFunction = exports.TypeSystem = exports.TypeSystemDuplicateFormat = exports.TypeSystemDuplicateTypeKind = void 0;\nconst guard_1 = __webpack_require__(/*! ../value/guard */ \"./node_modules/@trezor/schema-utils/node_modules/@sinclair/typebox/value/guard.js\");\nconst errors_1 = __webpack_require__(/*! ../errors/errors */ \"./node_modules/@trezor/schema-utils/node_modules/@sinclair/typebox/errors/errors.js\");\nconst Types = __webpack_require__(/*! ../typebox */ \"./node_modules/@trezor/schema-utils/node_modules/@sinclair/typebox/typebox.js\");\n// --------------------------------------------------------------------------\n// Errors\n// --------------------------------------------------------------------------\nclass TypeSystemDuplicateTypeKind extends Types.TypeBoxError {\n    constructor(kind) {\n        super(`Duplicate type kind '${kind}' detected`);\n    }\n}\nexports.TypeSystemDuplicateTypeKind = TypeSystemDuplicateTypeKind;\nclass TypeSystemDuplicateFormat extends Types.TypeBoxError {\n    constructor(kind) {\n        super(`Duplicate string format '${kind}' detected`);\n    }\n}\nexports.TypeSystemDuplicateFormat = TypeSystemDuplicateFormat;\n// -------------------------------------------------------------------------------------------\n// TypeSystem\n// -------------------------------------------------------------------------------------------\n/** Creates user defined types and formats and provides overrides for value checking behaviours */\nvar TypeSystem;\n(function (TypeSystem) {\n    /** Creates a new type */\n    function Type(kind, check) {\n        if (Types.TypeRegistry.Has(kind))\n            throw new TypeSystemDuplicateTypeKind(kind);\n        Types.TypeRegistry.Set(kind, check);\n        return (options = {}) => Types.Type.Unsafe({ ...options, [Types.Kind]: kind });\n    }\n    TypeSystem.Type = Type;\n    /** Creates a new string format */\n    function Format(format, check) {\n        if (Types.FormatRegistry.Has(format))\n            throw new TypeSystemDuplicateFormat(format);\n        Types.FormatRegistry.Set(format, check);\n        return format;\n    }\n    TypeSystem.Format = Format;\n})(TypeSystem || (exports.TypeSystem = TypeSystem = {}));\n// --------------------------------------------------------------------------\n// TypeSystemErrorFunction\n// --------------------------------------------------------------------------\n/** Manages error message providers */\nvar TypeSystemErrorFunction;\n(function (TypeSystemErrorFunction) {\n    let errorMessageFunction = DefaultErrorFunction;\n    /** Resets the error message function to en-us */\n    function Reset() {\n        errorMessageFunction = DefaultErrorFunction;\n    }\n    TypeSystemErrorFunction.Reset = Reset;\n    /** Sets the error message function used to generate error messages */\n    function Set(callback) {\n        errorMessageFunction = callback;\n    }\n    TypeSystemErrorFunction.Set = Set;\n    /** Gets the error message function */\n    function Get() {\n        return errorMessageFunction;\n    }\n    TypeSystemErrorFunction.Get = Get;\n})(TypeSystemErrorFunction || (exports.TypeSystemErrorFunction = TypeSystemErrorFunction = {}));\n// --------------------------------------------------------------------------\n// TypeSystemPolicy\n// --------------------------------------------------------------------------\n/** Shared assertion routines used by the value and errors modules */\nvar TypeSystemPolicy;\n(function (TypeSystemPolicy) {\n    /** Sets whether TypeBox should assert optional properties using the TypeScript `exactOptionalPropertyTypes` assertion policy. The default is `false` */\n    TypeSystemPolicy.ExactOptionalPropertyTypes = false;\n    /** Sets whether arrays should be treated as a kind of objects. The default is `false` */\n    TypeSystemPolicy.AllowArrayObject = false;\n    /** Sets whether `NaN` or `Infinity` should be treated as valid numeric values. The default is `false` */\n    TypeSystemPolicy.AllowNaN = false;\n    /** Sets whether `null` should validate for void types. The default is `false` */\n    TypeSystemPolicy.AllowNullVoid = false;\n    /** Asserts this value using the ExactOptionalPropertyTypes policy */\n    function IsExactOptionalProperty(value, key) {\n        return TypeSystemPolicy.ExactOptionalPropertyTypes ? key in value : value[key] !== undefined;\n    }\n    TypeSystemPolicy.IsExactOptionalProperty = IsExactOptionalProperty;\n    /** Asserts this value using the AllowArrayObjects policy */\n    function IsObjectLike(value) {\n        const isObject = (0, guard_1.IsObject)(value);\n        return TypeSystemPolicy.AllowArrayObject ? isObject : isObject && !(0, guard_1.IsArray)(value);\n    }\n    TypeSystemPolicy.IsObjectLike = IsObjectLike;\n    /** Asserts this value as a record using the AllowArrayObjects policy */\n    function IsRecordLike(value) {\n        return IsObjectLike(value) && !(value instanceof Date) && !(value instanceof Uint8Array);\n    }\n    TypeSystemPolicy.IsRecordLike = IsRecordLike;\n    /** Asserts this value using the AllowNaN policy */\n    function IsNumberLike(value) {\n        const isNumber = (0, guard_1.IsNumber)(value);\n        return TypeSystemPolicy.AllowNaN ? isNumber : isNumber && Number.isFinite(value);\n    }\n    TypeSystemPolicy.IsNumberLike = IsNumberLike;\n    /** Asserts this value using the AllowVoidNull policy */\n    function IsVoidLike(value) {\n        const isUndefined = (0, guard_1.IsUndefined)(value);\n        return TypeSystemPolicy.AllowNullVoid ? isUndefined || value === null : isUndefined;\n    }\n    TypeSystemPolicy.IsVoidLike = IsVoidLike;\n})(TypeSystemPolicy || (exports.TypeSystemPolicy = TypeSystemPolicy = {}));\n// --------------------------------------------------------------------------\n// DefaultErrorFunction\n// --------------------------------------------------------------------------\n/** Creates an error message using en-US as the default locale */\nfunction DefaultErrorFunction(schema, errorType) {\n    switch (errorType) {\n        case errors_1.ValueErrorType.ArrayContains:\n            return 'Expected array to contain at least one matching value';\n        case errors_1.ValueErrorType.ArrayMaxContains:\n            return `Expected array to contain no more than ${schema.maxContains} matching values`;\n        case errors_1.ValueErrorType.ArrayMinContains:\n            return `Expected array to contain at least ${schema.minContains} matching values`;\n        case errors_1.ValueErrorType.ArrayMaxItems:\n            return `Expected array length to be less or equal to ${schema.maxItems}`;\n        case errors_1.ValueErrorType.ArrayMinItems:\n            return `Expected array length to be greater or equal to ${schema.minItems}`;\n        case errors_1.ValueErrorType.ArrayUniqueItems:\n            return 'Expected array elements to be unique';\n        case errors_1.ValueErrorType.Array:\n            return 'Expected array';\n        case errors_1.ValueErrorType.AsyncIterator:\n            return 'Expected AsyncIterator';\n        case errors_1.ValueErrorType.BigIntExclusiveMaximum:\n            return `Expected bigint to be less than ${schema.exclusiveMaximum}`;\n        case errors_1.ValueErrorType.BigIntExclusiveMinimum:\n            return `Expected bigint to be greater than ${schema.exclusiveMinimum}`;\n        case errors_1.ValueErrorType.BigIntMaximum:\n            return `Expected bigint to be less or equal to ${schema.maximum}`;\n        case errors_1.ValueErrorType.BigIntMinimum:\n            return `Expected bigint to be greater or equal to ${schema.minimum}`;\n        case errors_1.ValueErrorType.BigIntMultipleOf:\n            return `Expected bigint to be a multiple of ${schema.multipleOf}`;\n        case errors_1.ValueErrorType.BigInt:\n            return 'Expected bigint';\n        case errors_1.ValueErrorType.Boolean:\n            return 'Expected boolean';\n        case errors_1.ValueErrorType.DateExclusiveMinimumTimestamp:\n            return `Expected Date timestamp to be greater than ${schema.exclusiveMinimumTimestamp}`;\n        case errors_1.ValueErrorType.DateExclusiveMaximumTimestamp:\n            return `Expected Date timestamp to be less than ${schema.exclusiveMaximumTimestamp}`;\n        case errors_1.ValueErrorType.DateMinimumTimestamp:\n            return `Expected Date timestamp to be greater or equal to ${schema.minimumTimestamp}`;\n        case errors_1.ValueErrorType.DateMaximumTimestamp:\n            return `Expected Date timestamp to be less or equal to ${schema.maximumTimestamp}`;\n        case errors_1.ValueErrorType.DateMultipleOfTimestamp:\n            return `Expected Date timestamp to be a multiple of ${schema.multipleOfTimestamp}`;\n        case errors_1.ValueErrorType.Date:\n            return 'Expected Date';\n        case errors_1.ValueErrorType.Function:\n            return 'Expected function';\n        case errors_1.ValueErrorType.IntegerExclusiveMaximum:\n            return `Expected integer to be less than ${schema.exclusiveMaximum}`;\n        case errors_1.ValueErrorType.IntegerExclusiveMinimum:\n            return `Expected integer to be greater than ${schema.exclusiveMinimum}`;\n        case errors_1.ValueErrorType.IntegerMaximum:\n            return `Expected integer to be less or equal to ${schema.maximum}`;\n        case errors_1.ValueErrorType.IntegerMinimum:\n            return `Expected integer to be greater or equal to ${schema.minimum}`;\n        case errors_1.ValueErrorType.IntegerMultipleOf:\n            return `Expected integer to be a multiple of ${schema.multipleOf}`;\n        case errors_1.ValueErrorType.Integer:\n            return 'Expected integer';\n        case errors_1.ValueErrorType.IntersectUnevaluatedProperties:\n            return 'Unexpected property';\n        case errors_1.ValueErrorType.Intersect:\n            return 'Expected all values to match';\n        case errors_1.ValueErrorType.Iterator:\n            return 'Expected Iterator';\n        case errors_1.ValueErrorType.Literal:\n            return `Expected ${typeof schema.const === 'string' ? `'${schema.const}'` : schema.const}`;\n        case errors_1.ValueErrorType.Never:\n            return 'Never';\n        case errors_1.ValueErrorType.Not:\n            return 'Value should not match';\n        case errors_1.ValueErrorType.Null:\n            return 'Expected null';\n        case errors_1.ValueErrorType.NumberExclusiveMaximum:\n            return `Expected number to be less than ${schema.exclusiveMaximum}`;\n        case errors_1.ValueErrorType.NumberExclusiveMinimum:\n            return `Expected number to be greater than ${schema.exclusiveMinimum}`;\n        case errors_1.ValueErrorType.NumberMaximum:\n            return `Expected number to be less or equal to ${schema.maximum}`;\n        case errors_1.ValueErrorType.NumberMinimum:\n            return `Expected number to be greater or equal to ${schema.minimum}`;\n        case errors_1.ValueErrorType.NumberMultipleOf:\n            return `Expected number to be a multiple of ${schema.multipleOf}`;\n        case errors_1.ValueErrorType.Number:\n            return 'Expected number';\n        case errors_1.ValueErrorType.Object:\n            return 'Expected object';\n        case errors_1.ValueErrorType.ObjectAdditionalProperties:\n            return 'Unexpected property';\n        case errors_1.ValueErrorType.ObjectMaxProperties:\n            return `Expected object to have no more than ${schema.maxProperties} properties`;\n        case errors_1.ValueErrorType.ObjectMinProperties:\n            return `Expected object to have at least ${schema.minProperties} properties`;\n        case errors_1.ValueErrorType.ObjectRequiredProperty:\n            return 'Required property';\n        case errors_1.ValueErrorType.Promise:\n            return 'Expected Promise';\n        case errors_1.ValueErrorType.StringFormatUnknown:\n            return `Unknown format '${schema.format}'`;\n        case errors_1.ValueErrorType.StringFormat:\n            return `Expected string to match '${schema.format}' format`;\n        case errors_1.ValueErrorType.StringMaxLength:\n            return `Expected string length less or equal to ${schema.maxLength}`;\n        case errors_1.ValueErrorType.StringMinLength:\n            return `Expected string length greater or equal to ${schema.minLength}`;\n        case errors_1.ValueErrorType.StringPattern:\n            return `Expected string to match '${schema.pattern}'`;\n        case errors_1.ValueErrorType.String:\n            return 'Expected string';\n        case errors_1.ValueErrorType.Symbol:\n            return 'Expected symbol';\n        case errors_1.ValueErrorType.TupleLength:\n            return `Expected tuple to have ${schema.maxItems || 0} elements`;\n        case errors_1.ValueErrorType.Tuple:\n            return 'Expected tuple';\n        case errors_1.ValueErrorType.Uint8ArrayMaxByteLength:\n            return `Expected byte length less or equal to ${schema.maxByteLength}`;\n        case errors_1.ValueErrorType.Uint8ArrayMinByteLength:\n            return `Expected byte length greater or equal to ${schema.minByteLength}`;\n        case errors_1.ValueErrorType.Uint8Array:\n            return 'Expected Uint8Array';\n        case errors_1.ValueErrorType.Undefined:\n            return 'Expected undefined';\n        case errors_1.ValueErrorType.Union:\n            return 'Expected union value';\n        case errors_1.ValueErrorType.Void:\n            return 'Expected void';\n        case errors_1.ValueErrorType.Kind:\n            return `Expected kind '${schema[Types.Kind]}'`;\n        default:\n            return 'Unknown error type';\n    }\n}\nexports.DefaultErrorFunction = DefaultErrorFunction;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci9zY2hlbWEtdXRpbHMvbm9kZV9tb2R1bGVzL0BzaW5jbGFpci90eXBlYm94L3N5c3RlbS9zeXN0ZW0uanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjs7QUFFQTs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCw0QkFBNEIsR0FBRyx3QkFBd0IsR0FBRywrQkFBK0IsR0FBRyxrQkFBa0IsR0FBRyxpQ0FBaUMsR0FBRyxtQ0FBbUM7QUFDeEwsZ0JBQWdCLG1CQUFPLENBQUMseUdBQWdCO0FBQ3hDLGlCQUFpQixtQkFBTyxDQUFDLDZHQUFrQjtBQUMzQyxjQUFjLG1CQUFPLENBQUMsaUdBQVk7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNDQUFzQyxLQUFLO0FBQzNDO0FBQ0E7QUFDQSxtQ0FBbUM7QUFDbkM7QUFDQTtBQUNBLDBDQUEwQyxLQUFLO0FBQy9DO0FBQ0E7QUFDQSxpQ0FBaUM7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0Qix5QkFBeUIsZ0NBQWdDO0FBQ3JGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxpQkFBaUIsa0JBQWtCLGtCQUFrQjtBQUN0RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsOEJBQThCLCtCQUErQiwrQkFBK0I7QUFDN0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyx1QkFBdUIsd0JBQXdCLHdCQUF3QjtBQUN4RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2REFBNkQsb0JBQW9CO0FBQ2pGO0FBQ0EseURBQXlELG9CQUFvQjtBQUM3RTtBQUNBLG1FQUFtRSxnQkFBZ0I7QUFDbkY7QUFDQSxzRUFBc0UsZ0JBQWdCO0FBQ3RGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0RBQXNELHdCQUF3QjtBQUM5RTtBQUNBLHlEQUF5RCx3QkFBd0I7QUFDakY7QUFDQSw2REFBNkQsZUFBZTtBQUM1RTtBQUNBLGdFQUFnRSxlQUFlO0FBQy9FO0FBQ0EsMERBQTBELGtCQUFrQjtBQUM1RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUVBQWlFLGlDQUFpQztBQUNsRztBQUNBLDhEQUE4RCxpQ0FBaUM7QUFDL0Y7QUFDQSx3RUFBd0Usd0JBQXdCO0FBQ2hHO0FBQ0EscUVBQXFFLHdCQUF3QjtBQUM3RjtBQUNBLGtFQUFrRSwyQkFBMkI7QUFDN0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVEQUF1RCx3QkFBd0I7QUFDL0U7QUFDQSwwREFBMEQsd0JBQXdCO0FBQ2xGO0FBQ0EsOERBQThELGVBQWU7QUFDN0U7QUFDQSxpRUFBaUUsZUFBZTtBQUNoRjtBQUNBLDJEQUEyRCxrQkFBa0I7QUFDN0U7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0JBQStCLHVDQUF1QyxhQUFhLGtCQUFrQjtBQUNyRztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNEQUFzRCx3QkFBd0I7QUFDOUU7QUFDQSx5REFBeUQsd0JBQXdCO0FBQ2pGO0FBQ0EsNkRBQTZELGVBQWU7QUFDNUU7QUFDQSxnRUFBZ0UsZUFBZTtBQUMvRTtBQUNBLDBEQUEwRCxrQkFBa0I7QUFDNUU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyREFBMkQsc0JBQXNCO0FBQ2pGO0FBQ0EsdURBQXVELHNCQUFzQjtBQUM3RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0NBQXNDLGNBQWM7QUFDcEQ7QUFDQSxnREFBZ0QsY0FBYztBQUM5RDtBQUNBLDhEQUE4RCxpQkFBaUI7QUFDL0U7QUFDQSxpRUFBaUUsaUJBQWlCO0FBQ2xGO0FBQ0EsZ0RBQWdELGVBQWU7QUFDL0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZDQUE2QyxzQkFBc0I7QUFDbkU7QUFDQTtBQUNBO0FBQ0EsNERBQTRELHFCQUFxQjtBQUNqRjtBQUNBLCtEQUErRCxxQkFBcUI7QUFDcEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUNBQXFDLG1CQUFtQjtBQUN4RDtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHRyZXpvci9zY2hlbWEtdXRpbHMvbm9kZV9tb2R1bGVzL0BzaW5jbGFpci90eXBlYm94L3N5c3RlbS9zeXN0ZW0uanM/YTY5MCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuQHNpbmNsYWlyL3R5cGVib3gvc3lzdGVtXG5cblRoZSBNSVQgTGljZW5zZSAoTUlUKVxuXG5Db3B5cmlnaHQgKGMpIDIwMTctMjAyMyBIYXlkbiBQYXRlcnNvbiAoc2luY2xhaXIpIDxoYXlkbi5kZXZlbG9wZXJAZ21haWwuY29tPlxuXG5QZXJtaXNzaW9uIGlzIGhlcmVieSBncmFudGVkLCBmcmVlIG9mIGNoYXJnZSwgdG8gYW55IHBlcnNvbiBvYnRhaW5pbmcgYSBjb3B5XG5vZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZSBcIlNvZnR3YXJlXCIpLCB0byBkZWFsXG5pbiB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nIHdpdGhvdXQgbGltaXRhdGlvbiB0aGUgcmlnaHRzXG50byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsIGRpc3RyaWJ1dGUsIHN1YmxpY2Vuc2UsIGFuZC9vciBzZWxsXG5jb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG8gcGVybWl0IHBlcnNvbnMgdG8gd2hvbSB0aGUgU29mdHdhcmUgaXNcbmZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0byB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbnM6XG5cblRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIHNoYWxsIGJlIGluY2x1ZGVkIGluXG5hbGwgY29waWVzIG9yIHN1YnN0YW50aWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS5cblxuVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEIFwiQVMgSVNcIiwgV0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lORCwgRVhQUkVTUyBPUlxuSU1QTElFRCwgSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBUTyBUSEUgV0FSUkFOVElFUyBPRiBNRVJDSEFOVEFCSUxJVFksXG5GSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBTkQgTk9OSU5GUklOR0VNRU5ULiBJTiBOTyBFVkVOVCBTSEFMTCBUSEVcbkFVVEhPUlMgT1IgQ09QWVJJR0hUIEhPTERFUlMgQkUgTElBQkxFIEZPUiBBTlkgQ0xBSU0sIERBTUFHRVMgT1IgT1RIRVJcbkxJQUJJTElUWSwgV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsIFRPUlQgT1IgT1RIRVJXSVNFLCBBUklTSU5HIEZST00sXG5PVVQgT0YgT1IgSU4gQ09OTkVDVElPTiBXSVRIIFRIRSBTT0ZUV0FSRSBPUiBUSEUgVVNFIE9SIE9USEVSIERFQUxJTkdTIElOXG5USEUgU09GVFdBUkUuXG5cbi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkRlZmF1bHRFcnJvckZ1bmN0aW9uID0gZXhwb3J0cy5UeXBlU3lzdGVtUG9saWN5ID0gZXhwb3J0cy5UeXBlU3lzdGVtRXJyb3JGdW5jdGlvbiA9IGV4cG9ydHMuVHlwZVN5c3RlbSA9IGV4cG9ydHMuVHlwZVN5c3RlbUR1cGxpY2F0ZUZvcm1hdCA9IGV4cG9ydHMuVHlwZVN5c3RlbUR1cGxpY2F0ZVR5cGVLaW5kID0gdm9pZCAwO1xuY29uc3QgZ3VhcmRfMSA9IHJlcXVpcmUoXCIuLi92YWx1ZS9ndWFyZFwiKTtcbmNvbnN0IGVycm9yc18xID0gcmVxdWlyZShcIi4uL2Vycm9ycy9lcnJvcnNcIik7XG5jb25zdCBUeXBlcyA9IHJlcXVpcmUoXCIuLi90eXBlYm94XCIpO1xuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vIEVycm9yc1xuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbmNsYXNzIFR5cGVTeXN0ZW1EdXBsaWNhdGVUeXBlS2luZCBleHRlbmRzIFR5cGVzLlR5cGVCb3hFcnJvciB7XG4gICAgY29uc3RydWN0b3Ioa2luZCkge1xuICAgICAgICBzdXBlcihgRHVwbGljYXRlIHR5cGUga2luZCAnJHtraW5kfScgZGV0ZWN0ZWRgKTtcbiAgICB9XG59XG5leHBvcnRzLlR5cGVTeXN0ZW1EdXBsaWNhdGVUeXBlS2luZCA9IFR5cGVTeXN0ZW1EdXBsaWNhdGVUeXBlS2luZDtcbmNsYXNzIFR5cGVTeXN0ZW1EdXBsaWNhdGVGb3JtYXQgZXh0ZW5kcyBUeXBlcy5UeXBlQm94RXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKGtpbmQpIHtcbiAgICAgICAgc3VwZXIoYER1cGxpY2F0ZSBzdHJpbmcgZm9ybWF0ICcke2tpbmR9JyBkZXRlY3RlZGApO1xuICAgIH1cbn1cbmV4cG9ydHMuVHlwZVN5c3RlbUR1cGxpY2F0ZUZvcm1hdCA9IFR5cGVTeXN0ZW1EdXBsaWNhdGVGb3JtYXQ7XG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyBUeXBlU3lzdGVtXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vKiogQ3JlYXRlcyB1c2VyIGRlZmluZWQgdHlwZXMgYW5kIGZvcm1hdHMgYW5kIHByb3ZpZGVzIG92ZXJyaWRlcyBmb3IgdmFsdWUgY2hlY2tpbmcgYmVoYXZpb3VycyAqL1xudmFyIFR5cGVTeXN0ZW07XG4oZnVuY3Rpb24gKFR5cGVTeXN0ZW0pIHtcbiAgICAvKiogQ3JlYXRlcyBhIG5ldyB0eXBlICovXG4gICAgZnVuY3Rpb24gVHlwZShraW5kLCBjaGVjaykge1xuICAgICAgICBpZiAoVHlwZXMuVHlwZVJlZ2lzdHJ5LkhhcyhraW5kKSlcbiAgICAgICAgICAgIHRocm93IG5ldyBUeXBlU3lzdGVtRHVwbGljYXRlVHlwZUtpbmQoa2luZCk7XG4gICAgICAgIFR5cGVzLlR5cGVSZWdpc3RyeS5TZXQoa2luZCwgY2hlY2spO1xuICAgICAgICByZXR1cm4gKG9wdGlvbnMgPSB7fSkgPT4gVHlwZXMuVHlwZS5VbnNhZmUoeyAuLi5vcHRpb25zLCBbVHlwZXMuS2luZF06IGtpbmQgfSk7XG4gICAgfVxuICAgIFR5cGVTeXN0ZW0uVHlwZSA9IFR5cGU7XG4gICAgLyoqIENyZWF0ZXMgYSBuZXcgc3RyaW5nIGZvcm1hdCAqL1xuICAgIGZ1bmN0aW9uIEZvcm1hdChmb3JtYXQsIGNoZWNrKSB7XG4gICAgICAgIGlmIChUeXBlcy5Gb3JtYXRSZWdpc3RyeS5IYXMoZm9ybWF0KSlcbiAgICAgICAgICAgIHRocm93IG5ldyBUeXBlU3lzdGVtRHVwbGljYXRlRm9ybWF0KGZvcm1hdCk7XG4gICAgICAgIFR5cGVzLkZvcm1hdFJlZ2lzdHJ5LlNldChmb3JtYXQsIGNoZWNrKTtcbiAgICAgICAgcmV0dXJuIGZvcm1hdDtcbiAgICB9XG4gICAgVHlwZVN5c3RlbS5Gb3JtYXQgPSBGb3JtYXQ7XG59KShUeXBlU3lzdGVtIHx8IChleHBvcnRzLlR5cGVTeXN0ZW0gPSBUeXBlU3lzdGVtID0ge30pKTtcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyBUeXBlU3lzdGVtRXJyb3JGdW5jdGlvblxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8qKiBNYW5hZ2VzIGVycm9yIG1lc3NhZ2UgcHJvdmlkZXJzICovXG52YXIgVHlwZVN5c3RlbUVycm9yRnVuY3Rpb247XG4oZnVuY3Rpb24gKFR5cGVTeXN0ZW1FcnJvckZ1bmN0aW9uKSB7XG4gICAgbGV0IGVycm9yTWVzc2FnZUZ1bmN0aW9uID0gRGVmYXVsdEVycm9yRnVuY3Rpb247XG4gICAgLyoqIFJlc2V0cyB0aGUgZXJyb3IgbWVzc2FnZSBmdW5jdGlvbiB0byBlbi11cyAqL1xuICAgIGZ1bmN0aW9uIFJlc2V0KCkge1xuICAgICAgICBlcnJvck1lc3NhZ2VGdW5jdGlvbiA9IERlZmF1bHRFcnJvckZ1bmN0aW9uO1xuICAgIH1cbiAgICBUeXBlU3lzdGVtRXJyb3JGdW5jdGlvbi5SZXNldCA9IFJlc2V0O1xuICAgIC8qKiBTZXRzIHRoZSBlcnJvciBtZXNzYWdlIGZ1bmN0aW9uIHVzZWQgdG8gZ2VuZXJhdGUgZXJyb3IgbWVzc2FnZXMgKi9cbiAgICBmdW5jdGlvbiBTZXQoY2FsbGJhY2spIHtcbiAgICAgICAgZXJyb3JNZXNzYWdlRnVuY3Rpb24gPSBjYWxsYmFjaztcbiAgICB9XG4gICAgVHlwZVN5c3RlbUVycm9yRnVuY3Rpb24uU2V0ID0gU2V0O1xuICAgIC8qKiBHZXRzIHRoZSBlcnJvciBtZXNzYWdlIGZ1bmN0aW9uICovXG4gICAgZnVuY3Rpb24gR2V0KCkge1xuICAgICAgICByZXR1cm4gZXJyb3JNZXNzYWdlRnVuY3Rpb247XG4gICAgfVxuICAgIFR5cGVTeXN0ZW1FcnJvckZ1bmN0aW9uLkdldCA9IEdldDtcbn0pKFR5cGVTeXN0ZW1FcnJvckZ1bmN0aW9uIHx8IChleHBvcnRzLlR5cGVTeXN0ZW1FcnJvckZ1bmN0aW9uID0gVHlwZVN5c3RlbUVycm9yRnVuY3Rpb24gPSB7fSkpO1xuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vIFR5cGVTeXN0ZW1Qb2xpY3lcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vKiogU2hhcmVkIGFzc2VydGlvbiByb3V0aW5lcyB1c2VkIGJ5IHRoZSB2YWx1ZSBhbmQgZXJyb3JzIG1vZHVsZXMgKi9cbnZhciBUeXBlU3lzdGVtUG9saWN5O1xuKGZ1bmN0aW9uIChUeXBlU3lzdGVtUG9saWN5KSB7XG4gICAgLyoqIFNldHMgd2hldGhlciBUeXBlQm94IHNob3VsZCBhc3NlcnQgb3B0aW9uYWwgcHJvcGVydGllcyB1c2luZyB0aGUgVHlwZVNjcmlwdCBgZXhhY3RPcHRpb25hbFByb3BlcnR5VHlwZXNgIGFzc2VydGlvbiBwb2xpY3kuIFRoZSBkZWZhdWx0IGlzIGBmYWxzZWAgKi9cbiAgICBUeXBlU3lzdGVtUG9saWN5LkV4YWN0T3B0aW9uYWxQcm9wZXJ0eVR5cGVzID0gZmFsc2U7XG4gICAgLyoqIFNldHMgd2hldGhlciBhcnJheXMgc2hvdWxkIGJlIHRyZWF0ZWQgYXMgYSBraW5kIG9mIG9iamVjdHMuIFRoZSBkZWZhdWx0IGlzIGBmYWxzZWAgKi9cbiAgICBUeXBlU3lzdGVtUG9saWN5LkFsbG93QXJyYXlPYmplY3QgPSBmYWxzZTtcbiAgICAvKiogU2V0cyB3aGV0aGVyIGBOYU5gIG9yIGBJbmZpbml0eWAgc2hvdWxkIGJlIHRyZWF0ZWQgYXMgdmFsaWQgbnVtZXJpYyB2YWx1ZXMuIFRoZSBkZWZhdWx0IGlzIGBmYWxzZWAgKi9cbiAgICBUeXBlU3lzdGVtUG9saWN5LkFsbG93TmFOID0gZmFsc2U7XG4gICAgLyoqIFNldHMgd2hldGhlciBgbnVsbGAgc2hvdWxkIHZhbGlkYXRlIGZvciB2b2lkIHR5cGVzLiBUaGUgZGVmYXVsdCBpcyBgZmFsc2VgICovXG4gICAgVHlwZVN5c3RlbVBvbGljeS5BbGxvd051bGxWb2lkID0gZmFsc2U7XG4gICAgLyoqIEFzc2VydHMgdGhpcyB2YWx1ZSB1c2luZyB0aGUgRXhhY3RPcHRpb25hbFByb3BlcnR5VHlwZXMgcG9saWN5ICovXG4gICAgZnVuY3Rpb24gSXNFeGFjdE9wdGlvbmFsUHJvcGVydHkodmFsdWUsIGtleSkge1xuICAgICAgICByZXR1cm4gVHlwZVN5c3RlbVBvbGljeS5FeGFjdE9wdGlvbmFsUHJvcGVydHlUeXBlcyA/IGtleSBpbiB2YWx1ZSA6IHZhbHVlW2tleV0gIT09IHVuZGVmaW5lZDtcbiAgICB9XG4gICAgVHlwZVN5c3RlbVBvbGljeS5Jc0V4YWN0T3B0aW9uYWxQcm9wZXJ0eSA9IElzRXhhY3RPcHRpb25hbFByb3BlcnR5O1xuICAgIC8qKiBBc3NlcnRzIHRoaXMgdmFsdWUgdXNpbmcgdGhlIEFsbG93QXJyYXlPYmplY3RzIHBvbGljeSAqL1xuICAgIGZ1bmN0aW9uIElzT2JqZWN0TGlrZSh2YWx1ZSkge1xuICAgICAgICBjb25zdCBpc09iamVjdCA9ICgwLCBndWFyZF8xLklzT2JqZWN0KSh2YWx1ZSk7XG4gICAgICAgIHJldHVybiBUeXBlU3lzdGVtUG9saWN5LkFsbG93QXJyYXlPYmplY3QgPyBpc09iamVjdCA6IGlzT2JqZWN0ICYmICEoMCwgZ3VhcmRfMS5Jc0FycmF5KSh2YWx1ZSk7XG4gICAgfVxuICAgIFR5cGVTeXN0ZW1Qb2xpY3kuSXNPYmplY3RMaWtlID0gSXNPYmplY3RMaWtlO1xuICAgIC8qKiBBc3NlcnRzIHRoaXMgdmFsdWUgYXMgYSByZWNvcmQgdXNpbmcgdGhlIEFsbG93QXJyYXlPYmplY3RzIHBvbGljeSAqL1xuICAgIGZ1bmN0aW9uIElzUmVjb3JkTGlrZSh2YWx1ZSkge1xuICAgICAgICByZXR1cm4gSXNPYmplY3RMaWtlKHZhbHVlKSAmJiAhKHZhbHVlIGluc3RhbmNlb2YgRGF0ZSkgJiYgISh2YWx1ZSBpbnN0YW5jZW9mIFVpbnQ4QXJyYXkpO1xuICAgIH1cbiAgICBUeXBlU3lzdGVtUG9saWN5LklzUmVjb3JkTGlrZSA9IElzUmVjb3JkTGlrZTtcbiAgICAvKiogQXNzZXJ0cyB0aGlzIHZhbHVlIHVzaW5nIHRoZSBBbGxvd05hTiBwb2xpY3kgKi9cbiAgICBmdW5jdGlvbiBJc051bWJlckxpa2UodmFsdWUpIHtcbiAgICAgICAgY29uc3QgaXNOdW1iZXIgPSAoMCwgZ3VhcmRfMS5Jc051bWJlcikodmFsdWUpO1xuICAgICAgICByZXR1cm4gVHlwZVN5c3RlbVBvbGljeS5BbGxvd05hTiA/IGlzTnVtYmVyIDogaXNOdW1iZXIgJiYgTnVtYmVyLmlzRmluaXRlKHZhbHVlKTtcbiAgICB9XG4gICAgVHlwZVN5c3RlbVBvbGljeS5Jc051bWJlckxpa2UgPSBJc051bWJlckxpa2U7XG4gICAgLyoqIEFzc2VydHMgdGhpcyB2YWx1ZSB1c2luZyB0aGUgQWxsb3dWb2lkTnVsbCBwb2xpY3kgKi9cbiAgICBmdW5jdGlvbiBJc1ZvaWRMaWtlKHZhbHVlKSB7XG4gICAgICAgIGNvbnN0IGlzVW5kZWZpbmVkID0gKDAsIGd1YXJkXzEuSXNVbmRlZmluZWQpKHZhbHVlKTtcbiAgICAgICAgcmV0dXJuIFR5cGVTeXN0ZW1Qb2xpY3kuQWxsb3dOdWxsVm9pZCA/IGlzVW5kZWZpbmVkIHx8IHZhbHVlID09PSBudWxsIDogaXNVbmRlZmluZWQ7XG4gICAgfVxuICAgIFR5cGVTeXN0ZW1Qb2xpY3kuSXNWb2lkTGlrZSA9IElzVm9pZExpa2U7XG59KShUeXBlU3lzdGVtUG9saWN5IHx8IChleHBvcnRzLlR5cGVTeXN0ZW1Qb2xpY3kgPSBUeXBlU3lzdGVtUG9saWN5ID0ge30pKTtcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyBEZWZhdWx0RXJyb3JGdW5jdGlvblxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8qKiBDcmVhdGVzIGFuIGVycm9yIG1lc3NhZ2UgdXNpbmcgZW4tVVMgYXMgdGhlIGRlZmF1bHQgbG9jYWxlICovXG5mdW5jdGlvbiBEZWZhdWx0RXJyb3JGdW5jdGlvbihzY2hlbWEsIGVycm9yVHlwZSkge1xuICAgIHN3aXRjaCAoZXJyb3JUeXBlKSB7XG4gICAgICAgIGNhc2UgZXJyb3JzXzEuVmFsdWVFcnJvclR5cGUuQXJyYXlDb250YWluczpcbiAgICAgICAgICAgIHJldHVybiAnRXhwZWN0ZWQgYXJyYXkgdG8gY29udGFpbiBhdCBsZWFzdCBvbmUgbWF0Y2hpbmcgdmFsdWUnO1xuICAgICAgICBjYXNlIGVycm9yc18xLlZhbHVlRXJyb3JUeXBlLkFycmF5TWF4Q29udGFpbnM6XG4gICAgICAgICAgICByZXR1cm4gYEV4cGVjdGVkIGFycmF5IHRvIGNvbnRhaW4gbm8gbW9yZSB0aGFuICR7c2NoZW1hLm1heENvbnRhaW5zfSBtYXRjaGluZyB2YWx1ZXNgO1xuICAgICAgICBjYXNlIGVycm9yc18xLlZhbHVlRXJyb3JUeXBlLkFycmF5TWluQ29udGFpbnM6XG4gICAgICAgICAgICByZXR1cm4gYEV4cGVjdGVkIGFycmF5IHRvIGNvbnRhaW4gYXQgbGVhc3QgJHtzY2hlbWEubWluQ29udGFpbnN9IG1hdGNoaW5nIHZhbHVlc2A7XG4gICAgICAgIGNhc2UgZXJyb3JzXzEuVmFsdWVFcnJvclR5cGUuQXJyYXlNYXhJdGVtczpcbiAgICAgICAgICAgIHJldHVybiBgRXhwZWN0ZWQgYXJyYXkgbGVuZ3RoIHRvIGJlIGxlc3Mgb3IgZXF1YWwgdG8gJHtzY2hlbWEubWF4SXRlbXN9YDtcbiAgICAgICAgY2FzZSBlcnJvcnNfMS5WYWx1ZUVycm9yVHlwZS5BcnJheU1pbkl0ZW1zOlxuICAgICAgICAgICAgcmV0dXJuIGBFeHBlY3RlZCBhcnJheSBsZW5ndGggdG8gYmUgZ3JlYXRlciBvciBlcXVhbCB0byAke3NjaGVtYS5taW5JdGVtc31gO1xuICAgICAgICBjYXNlIGVycm9yc18xLlZhbHVlRXJyb3JUeXBlLkFycmF5VW5pcXVlSXRlbXM6XG4gICAgICAgICAgICByZXR1cm4gJ0V4cGVjdGVkIGFycmF5IGVsZW1lbnRzIHRvIGJlIHVuaXF1ZSc7XG4gICAgICAgIGNhc2UgZXJyb3JzXzEuVmFsdWVFcnJvclR5cGUuQXJyYXk6XG4gICAgICAgICAgICByZXR1cm4gJ0V4cGVjdGVkIGFycmF5JztcbiAgICAgICAgY2FzZSBlcnJvcnNfMS5WYWx1ZUVycm9yVHlwZS5Bc3luY0l0ZXJhdG9yOlxuICAgICAgICAgICAgcmV0dXJuICdFeHBlY3RlZCBBc3luY0l0ZXJhdG9yJztcbiAgICAgICAgY2FzZSBlcnJvcnNfMS5WYWx1ZUVycm9yVHlwZS5CaWdJbnRFeGNsdXNpdmVNYXhpbXVtOlxuICAgICAgICAgICAgcmV0dXJuIGBFeHBlY3RlZCBiaWdpbnQgdG8gYmUgbGVzcyB0aGFuICR7c2NoZW1hLmV4Y2x1c2l2ZU1heGltdW19YDtcbiAgICAgICAgY2FzZSBlcnJvcnNfMS5WYWx1ZUVycm9yVHlwZS5CaWdJbnRFeGNsdXNpdmVNaW5pbXVtOlxuICAgICAgICAgICAgcmV0dXJuIGBFeHBlY3RlZCBiaWdpbnQgdG8gYmUgZ3JlYXRlciB0aGFuICR7c2NoZW1hLmV4Y2x1c2l2ZU1pbmltdW19YDtcbiAgICAgICAgY2FzZSBlcnJvcnNfMS5WYWx1ZUVycm9yVHlwZS5CaWdJbnRNYXhpbXVtOlxuICAgICAgICAgICAgcmV0dXJuIGBFeHBlY3RlZCBiaWdpbnQgdG8gYmUgbGVzcyBvciBlcXVhbCB0byAke3NjaGVtYS5tYXhpbXVtfWA7XG4gICAgICAgIGNhc2UgZXJyb3JzXzEuVmFsdWVFcnJvclR5cGUuQmlnSW50TWluaW11bTpcbiAgICAgICAgICAgIHJldHVybiBgRXhwZWN0ZWQgYmlnaW50IHRvIGJlIGdyZWF0ZXIgb3IgZXF1YWwgdG8gJHtzY2hlbWEubWluaW11bX1gO1xuICAgICAgICBjYXNlIGVycm9yc18xLlZhbHVlRXJyb3JUeXBlLkJpZ0ludE11bHRpcGxlT2Y6XG4gICAgICAgICAgICByZXR1cm4gYEV4cGVjdGVkIGJpZ2ludCB0byBiZSBhIG11bHRpcGxlIG9mICR7c2NoZW1hLm11bHRpcGxlT2Z9YDtcbiAgICAgICAgY2FzZSBlcnJvcnNfMS5WYWx1ZUVycm9yVHlwZS5CaWdJbnQ6XG4gICAgICAgICAgICByZXR1cm4gJ0V4cGVjdGVkIGJpZ2ludCc7XG4gICAgICAgIGNhc2UgZXJyb3JzXzEuVmFsdWVFcnJvclR5cGUuQm9vbGVhbjpcbiAgICAgICAgICAgIHJldHVybiAnRXhwZWN0ZWQgYm9vbGVhbic7XG4gICAgICAgIGNhc2UgZXJyb3JzXzEuVmFsdWVFcnJvclR5cGUuRGF0ZUV4Y2x1c2l2ZU1pbmltdW1UaW1lc3RhbXA6XG4gICAgICAgICAgICByZXR1cm4gYEV4cGVjdGVkIERhdGUgdGltZXN0YW1wIHRvIGJlIGdyZWF0ZXIgdGhhbiAke3NjaGVtYS5leGNsdXNpdmVNaW5pbXVtVGltZXN0YW1wfWA7XG4gICAgICAgIGNhc2UgZXJyb3JzXzEuVmFsdWVFcnJvclR5cGUuRGF0ZUV4Y2x1c2l2ZU1heGltdW1UaW1lc3RhbXA6XG4gICAgICAgICAgICByZXR1cm4gYEV4cGVjdGVkIERhdGUgdGltZXN0YW1wIHRvIGJlIGxlc3MgdGhhbiAke3NjaGVtYS5leGNsdXNpdmVNYXhpbXVtVGltZXN0YW1wfWA7XG4gICAgICAgIGNhc2UgZXJyb3JzXzEuVmFsdWVFcnJvclR5cGUuRGF0ZU1pbmltdW1UaW1lc3RhbXA6XG4gICAgICAgICAgICByZXR1cm4gYEV4cGVjdGVkIERhdGUgdGltZXN0YW1wIHRvIGJlIGdyZWF0ZXIgb3IgZXF1YWwgdG8gJHtzY2hlbWEubWluaW11bVRpbWVzdGFtcH1gO1xuICAgICAgICBjYXNlIGVycm9yc18xLlZhbHVlRXJyb3JUeXBlLkRhdGVNYXhpbXVtVGltZXN0YW1wOlxuICAgICAgICAgICAgcmV0dXJuIGBFeHBlY3RlZCBEYXRlIHRpbWVzdGFtcCB0byBiZSBsZXNzIG9yIGVxdWFsIHRvICR7c2NoZW1hLm1heGltdW1UaW1lc3RhbXB9YDtcbiAgICAgICAgY2FzZSBlcnJvcnNfMS5WYWx1ZUVycm9yVHlwZS5EYXRlTXVsdGlwbGVPZlRpbWVzdGFtcDpcbiAgICAgICAgICAgIHJldHVybiBgRXhwZWN0ZWQgRGF0ZSB0aW1lc3RhbXAgdG8gYmUgYSBtdWx0aXBsZSBvZiAke3NjaGVtYS5tdWx0aXBsZU9mVGltZXN0YW1wfWA7XG4gICAgICAgIGNhc2UgZXJyb3JzXzEuVmFsdWVFcnJvclR5cGUuRGF0ZTpcbiAgICAgICAgICAgIHJldHVybiAnRXhwZWN0ZWQgRGF0ZSc7XG4gICAgICAgIGNhc2UgZXJyb3JzXzEuVmFsdWVFcnJvclR5cGUuRnVuY3Rpb246XG4gICAgICAgICAgICByZXR1cm4gJ0V4cGVjdGVkIGZ1bmN0aW9uJztcbiAgICAgICAgY2FzZSBlcnJvcnNfMS5WYWx1ZUVycm9yVHlwZS5JbnRlZ2VyRXhjbHVzaXZlTWF4aW11bTpcbiAgICAgICAgICAgIHJldHVybiBgRXhwZWN0ZWQgaW50ZWdlciB0byBiZSBsZXNzIHRoYW4gJHtzY2hlbWEuZXhjbHVzaXZlTWF4aW11bX1gO1xuICAgICAgICBjYXNlIGVycm9yc18xLlZhbHVlRXJyb3JUeXBlLkludGVnZXJFeGNsdXNpdmVNaW5pbXVtOlxuICAgICAgICAgICAgcmV0dXJuIGBFeHBlY3RlZCBpbnRlZ2VyIHRvIGJlIGdyZWF0ZXIgdGhhbiAke3NjaGVtYS5leGNsdXNpdmVNaW5pbXVtfWA7XG4gICAgICAgIGNhc2UgZXJyb3JzXzEuVmFsdWVFcnJvclR5cGUuSW50ZWdlck1heGltdW06XG4gICAgICAgICAgICByZXR1cm4gYEV4cGVjdGVkIGludGVnZXIgdG8gYmUgbGVzcyBvciBlcXVhbCB0byAke3NjaGVtYS5tYXhpbXVtfWA7XG4gICAgICAgIGNhc2UgZXJyb3JzXzEuVmFsdWVFcnJvclR5cGUuSW50ZWdlck1pbmltdW06XG4gICAgICAgICAgICByZXR1cm4gYEV4cGVjdGVkIGludGVnZXIgdG8gYmUgZ3JlYXRlciBvciBlcXVhbCB0byAke3NjaGVtYS5taW5pbXVtfWA7XG4gICAgICAgIGNhc2UgZXJyb3JzXzEuVmFsdWVFcnJvclR5cGUuSW50ZWdlck11bHRpcGxlT2Y6XG4gICAgICAgICAgICByZXR1cm4gYEV4cGVjdGVkIGludGVnZXIgdG8gYmUgYSBtdWx0aXBsZSBvZiAke3NjaGVtYS5tdWx0aXBsZU9mfWA7XG4gICAgICAgIGNhc2UgZXJyb3JzXzEuVmFsdWVFcnJvclR5cGUuSW50ZWdlcjpcbiAgICAgICAgICAgIHJldHVybiAnRXhwZWN0ZWQgaW50ZWdlcic7XG4gICAgICAgIGNhc2UgZXJyb3JzXzEuVmFsdWVFcnJvclR5cGUuSW50ZXJzZWN0VW5ldmFsdWF0ZWRQcm9wZXJ0aWVzOlxuICAgICAgICAgICAgcmV0dXJuICdVbmV4cGVjdGVkIHByb3BlcnR5JztcbiAgICAgICAgY2FzZSBlcnJvcnNfMS5WYWx1ZUVycm9yVHlwZS5JbnRlcnNlY3Q6XG4gICAgICAgICAgICByZXR1cm4gJ0V4cGVjdGVkIGFsbCB2YWx1ZXMgdG8gbWF0Y2gnO1xuICAgICAgICBjYXNlIGVycm9yc18xLlZhbHVlRXJyb3JUeXBlLkl0ZXJhdG9yOlxuICAgICAgICAgICAgcmV0dXJuICdFeHBlY3RlZCBJdGVyYXRvcic7XG4gICAgICAgIGNhc2UgZXJyb3JzXzEuVmFsdWVFcnJvclR5cGUuTGl0ZXJhbDpcbiAgICAgICAgICAgIHJldHVybiBgRXhwZWN0ZWQgJHt0eXBlb2Ygc2NoZW1hLmNvbnN0ID09PSAnc3RyaW5nJyA/IGAnJHtzY2hlbWEuY29uc3R9J2AgOiBzY2hlbWEuY29uc3R9YDtcbiAgICAgICAgY2FzZSBlcnJvcnNfMS5WYWx1ZUVycm9yVHlwZS5OZXZlcjpcbiAgICAgICAgICAgIHJldHVybiAnTmV2ZXInO1xuICAgICAgICBjYXNlIGVycm9yc18xLlZhbHVlRXJyb3JUeXBlLk5vdDpcbiAgICAgICAgICAgIHJldHVybiAnVmFsdWUgc2hvdWxkIG5vdCBtYXRjaCc7XG4gICAgICAgIGNhc2UgZXJyb3JzXzEuVmFsdWVFcnJvclR5cGUuTnVsbDpcbiAgICAgICAgICAgIHJldHVybiAnRXhwZWN0ZWQgbnVsbCc7XG4gICAgICAgIGNhc2UgZXJyb3JzXzEuVmFsdWVFcnJvclR5cGUuTnVtYmVyRXhjbHVzaXZlTWF4aW11bTpcbiAgICAgICAgICAgIHJldHVybiBgRXhwZWN0ZWQgbnVtYmVyIHRvIGJlIGxlc3MgdGhhbiAke3NjaGVtYS5leGNsdXNpdmVNYXhpbXVtfWA7XG4gICAgICAgIGNhc2UgZXJyb3JzXzEuVmFsdWVFcnJvclR5cGUuTnVtYmVyRXhjbHVzaXZlTWluaW11bTpcbiAgICAgICAgICAgIHJldHVybiBgRXhwZWN0ZWQgbnVtYmVyIHRvIGJlIGdyZWF0ZXIgdGhhbiAke3NjaGVtYS5leGNsdXNpdmVNaW5pbXVtfWA7XG4gICAgICAgIGNhc2UgZXJyb3JzXzEuVmFsdWVFcnJvclR5cGUuTnVtYmVyTWF4aW11bTpcbiAgICAgICAgICAgIHJldHVybiBgRXhwZWN0ZWQgbnVtYmVyIHRvIGJlIGxlc3Mgb3IgZXF1YWwgdG8gJHtzY2hlbWEubWF4aW11bX1gO1xuICAgICAgICBjYXNlIGVycm9yc18xLlZhbHVlRXJyb3JUeXBlLk51bWJlck1pbmltdW06XG4gICAgICAgICAgICByZXR1cm4gYEV4cGVjdGVkIG51bWJlciB0byBiZSBncmVhdGVyIG9yIGVxdWFsIHRvICR7c2NoZW1hLm1pbmltdW19YDtcbiAgICAgICAgY2FzZSBlcnJvcnNfMS5WYWx1ZUVycm9yVHlwZS5OdW1iZXJNdWx0aXBsZU9mOlxuICAgICAgICAgICAgcmV0dXJuIGBFeHBlY3RlZCBudW1iZXIgdG8gYmUgYSBtdWx0aXBsZSBvZiAke3NjaGVtYS5tdWx0aXBsZU9mfWA7XG4gICAgICAgIGNhc2UgZXJyb3JzXzEuVmFsdWVFcnJvclR5cGUuTnVtYmVyOlxuICAgICAgICAgICAgcmV0dXJuICdFeHBlY3RlZCBudW1iZXInO1xuICAgICAgICBjYXNlIGVycm9yc18xLlZhbHVlRXJyb3JUeXBlLk9iamVjdDpcbiAgICAgICAgICAgIHJldHVybiAnRXhwZWN0ZWQgb2JqZWN0JztcbiAgICAgICAgY2FzZSBlcnJvcnNfMS5WYWx1ZUVycm9yVHlwZS5PYmplY3RBZGRpdGlvbmFsUHJvcGVydGllczpcbiAgICAgICAgICAgIHJldHVybiAnVW5leHBlY3RlZCBwcm9wZXJ0eSc7XG4gICAgICAgIGNhc2UgZXJyb3JzXzEuVmFsdWVFcnJvclR5cGUuT2JqZWN0TWF4UHJvcGVydGllczpcbiAgICAgICAgICAgIHJldHVybiBgRXhwZWN0ZWQgb2JqZWN0IHRvIGhhdmUgbm8gbW9yZSB0aGFuICR7c2NoZW1hLm1heFByb3BlcnRpZXN9IHByb3BlcnRpZXNgO1xuICAgICAgICBjYXNlIGVycm9yc18xLlZhbHVlRXJyb3JUeXBlLk9iamVjdE1pblByb3BlcnRpZXM6XG4gICAgICAgICAgICByZXR1cm4gYEV4cGVjdGVkIG9iamVjdCB0byBoYXZlIGF0IGxlYXN0ICR7c2NoZW1hLm1pblByb3BlcnRpZXN9IHByb3BlcnRpZXNgO1xuICAgICAgICBjYXNlIGVycm9yc18xLlZhbHVlRXJyb3JUeXBlLk9iamVjdFJlcXVpcmVkUHJvcGVydHk6XG4gICAgICAgICAgICByZXR1cm4gJ1JlcXVpcmVkIHByb3BlcnR5JztcbiAgICAgICAgY2FzZSBlcnJvcnNfMS5WYWx1ZUVycm9yVHlwZS5Qcm9taXNlOlxuICAgICAgICAgICAgcmV0dXJuICdFeHBlY3RlZCBQcm9taXNlJztcbiAgICAgICAgY2FzZSBlcnJvcnNfMS5WYWx1ZUVycm9yVHlwZS5TdHJpbmdGb3JtYXRVbmtub3duOlxuICAgICAgICAgICAgcmV0dXJuIGBVbmtub3duIGZvcm1hdCAnJHtzY2hlbWEuZm9ybWF0fSdgO1xuICAgICAgICBjYXNlIGVycm9yc18xLlZhbHVlRXJyb3JUeXBlLlN0cmluZ0Zvcm1hdDpcbiAgICAgICAgICAgIHJldHVybiBgRXhwZWN0ZWQgc3RyaW5nIHRvIG1hdGNoICcke3NjaGVtYS5mb3JtYXR9JyBmb3JtYXRgO1xuICAgICAgICBjYXNlIGVycm9yc18xLlZhbHVlRXJyb3JUeXBlLlN0cmluZ01heExlbmd0aDpcbiAgICAgICAgICAgIHJldHVybiBgRXhwZWN0ZWQgc3RyaW5nIGxlbmd0aCBsZXNzIG9yIGVxdWFsIHRvICR7c2NoZW1hLm1heExlbmd0aH1gO1xuICAgICAgICBjYXNlIGVycm9yc18xLlZhbHVlRXJyb3JUeXBlLlN0cmluZ01pbkxlbmd0aDpcbiAgICAgICAgICAgIHJldHVybiBgRXhwZWN0ZWQgc3RyaW5nIGxlbmd0aCBncmVhdGVyIG9yIGVxdWFsIHRvICR7c2NoZW1hLm1pbkxlbmd0aH1gO1xuICAgICAgICBjYXNlIGVycm9yc18xLlZhbHVlRXJyb3JUeXBlLlN0cmluZ1BhdHRlcm46XG4gICAgICAgICAgICByZXR1cm4gYEV4cGVjdGVkIHN0cmluZyB0byBtYXRjaCAnJHtzY2hlbWEucGF0dGVybn0nYDtcbiAgICAgICAgY2FzZSBlcnJvcnNfMS5WYWx1ZUVycm9yVHlwZS5TdHJpbmc6XG4gICAgICAgICAgICByZXR1cm4gJ0V4cGVjdGVkIHN0cmluZyc7XG4gICAgICAgIGNhc2UgZXJyb3JzXzEuVmFsdWVFcnJvclR5cGUuU3ltYm9sOlxuICAgICAgICAgICAgcmV0dXJuICdFeHBlY3RlZCBzeW1ib2wnO1xuICAgICAgICBjYXNlIGVycm9yc18xLlZhbHVlRXJyb3JUeXBlLlR1cGxlTGVuZ3RoOlxuICAgICAgICAgICAgcmV0dXJuIGBFeHBlY3RlZCB0dXBsZSB0byBoYXZlICR7c2NoZW1hLm1heEl0ZW1zIHx8IDB9IGVsZW1lbnRzYDtcbiAgICAgICAgY2FzZSBlcnJvcnNfMS5WYWx1ZUVycm9yVHlwZS5UdXBsZTpcbiAgICAgICAgICAgIHJldHVybiAnRXhwZWN0ZWQgdHVwbGUnO1xuICAgICAgICBjYXNlIGVycm9yc18xLlZhbHVlRXJyb3JUeXBlLlVpbnQ4QXJyYXlNYXhCeXRlTGVuZ3RoOlxuICAgICAgICAgICAgcmV0dXJuIGBFeHBlY3RlZCBieXRlIGxlbmd0aCBsZXNzIG9yIGVxdWFsIHRvICR7c2NoZW1hLm1heEJ5dGVMZW5ndGh9YDtcbiAgICAgICAgY2FzZSBlcnJvcnNfMS5WYWx1ZUVycm9yVHlwZS5VaW50OEFycmF5TWluQnl0ZUxlbmd0aDpcbiAgICAgICAgICAgIHJldHVybiBgRXhwZWN0ZWQgYnl0ZSBsZW5ndGggZ3JlYXRlciBvciBlcXVhbCB0byAke3NjaGVtYS5taW5CeXRlTGVuZ3RofWA7XG4gICAgICAgIGNhc2UgZXJyb3JzXzEuVmFsdWVFcnJvclR5cGUuVWludDhBcnJheTpcbiAgICAgICAgICAgIHJldHVybiAnRXhwZWN0ZWQgVWludDhBcnJheSc7XG4gICAgICAgIGNhc2UgZXJyb3JzXzEuVmFsdWVFcnJvclR5cGUuVW5kZWZpbmVkOlxuICAgICAgICAgICAgcmV0dXJuICdFeHBlY3RlZCB1bmRlZmluZWQnO1xuICAgICAgICBjYXNlIGVycm9yc18xLlZhbHVlRXJyb3JUeXBlLlVuaW9uOlxuICAgICAgICAgICAgcmV0dXJuICdFeHBlY3RlZCB1bmlvbiB2YWx1ZSc7XG4gICAgICAgIGNhc2UgZXJyb3JzXzEuVmFsdWVFcnJvclR5cGUuVm9pZDpcbiAgICAgICAgICAgIHJldHVybiAnRXhwZWN0ZWQgdm9pZCc7XG4gICAgICAgIGNhc2UgZXJyb3JzXzEuVmFsdWVFcnJvclR5cGUuS2luZDpcbiAgICAgICAgICAgIHJldHVybiBgRXhwZWN0ZWQga2luZCAnJHtzY2hlbWFbVHlwZXMuS2luZF19J2A7XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICByZXR1cm4gJ1Vua25vd24gZXJyb3IgdHlwZSc7XG4gICAgfVxufVxuZXhwb3J0cy5EZWZhdWx0RXJyb3JGdW5jdGlvbiA9IERlZmF1bHRFcnJvckZ1bmN0aW9uO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@trezor/schema-utils/node_modules/@sinclair/typebox/system/system.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/schema-utils/node_modules/@sinclair/typebox/typebox.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@trezor/schema-utils/node_modules/@sinclair/typebox/typebox.js ***!
  \*************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\n/*--------------------------------------------------------------------------\n\n@sinclair/typebox\n\nThe MIT License (MIT)\n\nCopyright (c) 2017-2023 Haydn Paterson (sinclair) <haydn.developer@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n---------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Type = exports.JsonType = exports.JavaScriptTypeBuilder = exports.JsonTypeBuilder = exports.TypeBuilder = exports.TypeBuilderError = exports.TransformEncodeBuilder = exports.TransformDecodeBuilder = exports.TemplateLiteralDslParser = exports.TemplateLiteralGenerator = exports.TemplateLiteralGeneratorError = exports.TemplateLiteralFinite = exports.TemplateLiteralFiniteError = exports.TemplateLiteralParser = exports.TemplateLiteralParserError = exports.TemplateLiteralResolver = exports.TemplateLiteralPattern = exports.TemplateLiteralPatternError = exports.UnionResolver = exports.KeyArrayResolver = exports.KeyArrayResolverError = exports.KeyResolver = exports.ObjectMap = exports.Intrinsic = exports.IndexedAccessor = exports.TypeClone = exports.TypeExtends = exports.TypeExtendsResult = exports.TypeExtendsError = exports.ExtendsUndefined = exports.TypeGuard = exports.TypeGuardUnknownTypeError = exports.ValueGuard = exports.FormatRegistry = exports.TypeBoxError = exports.TypeRegistry = exports.PatternStringExact = exports.PatternNumberExact = exports.PatternBooleanExact = exports.PatternString = exports.PatternNumber = exports.PatternBoolean = exports.Kind = exports.Hint = exports.Optional = exports.Readonly = exports.Transform = void 0;\n// --------------------------------------------------------------------------\n// Symbols\n// --------------------------------------------------------------------------\nexports.Transform = Symbol.for('TypeBox.Transform');\nexports.Readonly = Symbol.for('TypeBox.Readonly');\nexports.Optional = Symbol.for('TypeBox.Optional');\nexports.Hint = Symbol.for('TypeBox.Hint');\nexports.Kind = Symbol.for('TypeBox.Kind');\n// --------------------------------------------------------------------------\n// Patterns\n// --------------------------------------------------------------------------\nexports.PatternBoolean = '(true|false)';\nexports.PatternNumber = '(0|[1-9][0-9]*)';\nexports.PatternString = '(.*)';\nexports.PatternBooleanExact = `^${exports.PatternBoolean}$`;\nexports.PatternNumberExact = `^${exports.PatternNumber}$`;\nexports.PatternStringExact = `^${exports.PatternString}$`;\n/** A registry for user defined types */\nvar TypeRegistry;\n(function (TypeRegistry) {\n    const map = new Map();\n    /** Returns the entries in this registry */\n    function Entries() {\n        return new Map(map);\n    }\n    TypeRegistry.Entries = Entries;\n    /** Clears all user defined types */\n    function Clear() {\n        return map.clear();\n    }\n    TypeRegistry.Clear = Clear;\n    /** Deletes a registered type */\n    function Delete(kind) {\n        return map.delete(kind);\n    }\n    TypeRegistry.Delete = Delete;\n    /** Returns true if this registry contains this kind */\n    function Has(kind) {\n        return map.has(kind);\n    }\n    TypeRegistry.Has = Has;\n    /** Sets a validation function for a user defined type */\n    function Set(kind, func) {\n        map.set(kind, func);\n    }\n    TypeRegistry.Set = Set;\n    /** Gets a custom validation function for a user defined type */\n    function Get(kind) {\n        return map.get(kind);\n    }\n    TypeRegistry.Get = Get;\n})(TypeRegistry || (exports.TypeRegistry = TypeRegistry = {}));\n// --------------------------------------------------------------------------\n// TypeBoxError\n// --------------------------------------------------------------------------\nclass TypeBoxError extends Error {\n    constructor(message) {\n        super(message);\n    }\n}\nexports.TypeBoxError = TypeBoxError;\n/** A registry for user defined string formats */\nvar FormatRegistry;\n(function (FormatRegistry) {\n    const map = new Map();\n    /** Returns the entries in this registry */\n    function Entries() {\n        return new Map(map);\n    }\n    FormatRegistry.Entries = Entries;\n    /** Clears all user defined string formats */\n    function Clear() {\n        return map.clear();\n    }\n    FormatRegistry.Clear = Clear;\n    /** Deletes a registered format */\n    function Delete(format) {\n        return map.delete(format);\n    }\n    FormatRegistry.Delete = Delete;\n    /** Returns true if the user defined string format exists */\n    function Has(format) {\n        return map.has(format);\n    }\n    FormatRegistry.Has = Has;\n    /** Sets a validation function for a user defined string format */\n    function Set(format, func) {\n        map.set(format, func);\n    }\n    FormatRegistry.Set = Set;\n    /** Gets a validation function for a user defined string format */\n    function Get(format) {\n        return map.get(format);\n    }\n    FormatRegistry.Get = Get;\n})(FormatRegistry || (exports.FormatRegistry = FormatRegistry = {}));\n// --------------------------------------------------------------------------\n// ValueGuard\n// --------------------------------------------------------------------------\n/** Provides functions to type guard raw JavaScript values */\nvar ValueGuard;\n(function (ValueGuard) {\n    /** Returns true if this value is an array */\n    function IsArray(value) {\n        return Array.isArray(value);\n    }\n    ValueGuard.IsArray = IsArray;\n    /** Returns true if this value is bigint */\n    function IsBigInt(value) {\n        return typeof value === 'bigint';\n    }\n    ValueGuard.IsBigInt = IsBigInt;\n    /** Returns true if this value is a boolean */\n    function IsBoolean(value) {\n        return typeof value === 'boolean';\n    }\n    ValueGuard.IsBoolean = IsBoolean;\n    /** Returns true if this value is a Date object */\n    function IsDate(value) {\n        return value instanceof globalThis.Date;\n    }\n    ValueGuard.IsDate = IsDate;\n    /** Returns true if this value is null */\n    function IsNull(value) {\n        return value === null;\n    }\n    ValueGuard.IsNull = IsNull;\n    /** Returns true if this value is number */\n    function IsNumber(value) {\n        return typeof value === 'number';\n    }\n    ValueGuard.IsNumber = IsNumber;\n    /** Returns true if this value is an object */\n    function IsObject(value) {\n        return typeof value === 'object' && value !== null;\n    }\n    ValueGuard.IsObject = IsObject;\n    /** Returns true if this value is string */\n    function IsString(value) {\n        return typeof value === 'string';\n    }\n    ValueGuard.IsString = IsString;\n    /** Returns true if this value is a Uint8Array */\n    function IsUint8Array(value) {\n        return value instanceof globalThis.Uint8Array;\n    }\n    ValueGuard.IsUint8Array = IsUint8Array;\n    /** Returns true if this value is undefined */\n    function IsUndefined(value) {\n        return value === undefined;\n    }\n    ValueGuard.IsUndefined = IsUndefined;\n})(ValueGuard || (exports.ValueGuard = ValueGuard = {}));\n// --------------------------------------------------------------------------\n// TypeGuard\n// --------------------------------------------------------------------------\nclass TypeGuardUnknownTypeError extends TypeBoxError {\n}\nexports.TypeGuardUnknownTypeError = TypeGuardUnknownTypeError;\n/** Provides functions to test if JavaScript values are TypeBox types */\nvar TypeGuard;\n(function (TypeGuard) {\n    function IsPattern(value) {\n        try {\n            new RegExp(value);\n            return true;\n        }\n        catch {\n            return false;\n        }\n    }\n    function IsControlCharacterFree(value) {\n        if (!ValueGuard.IsString(value))\n            return false;\n        for (let i = 0; i < value.length; i++) {\n            const code = value.charCodeAt(i);\n            if ((code >= 7 && code <= 13) || code === 27 || code === 127) {\n                return false;\n            }\n        }\n        return true;\n    }\n    function IsAdditionalProperties(value) {\n        return IsOptionalBoolean(value) || TSchema(value);\n    }\n    function IsOptionalBigInt(value) {\n        return ValueGuard.IsUndefined(value) || ValueGuard.IsBigInt(value);\n    }\n    function IsOptionalNumber(value) {\n        return ValueGuard.IsUndefined(value) || ValueGuard.IsNumber(value);\n    }\n    function IsOptionalBoolean(value) {\n        return ValueGuard.IsUndefined(value) || ValueGuard.IsBoolean(value);\n    }\n    function IsOptionalString(value) {\n        return ValueGuard.IsUndefined(value) || ValueGuard.IsString(value);\n    }\n    function IsOptionalPattern(value) {\n        return ValueGuard.IsUndefined(value) || (ValueGuard.IsString(value) && IsControlCharacterFree(value) && IsPattern(value));\n    }\n    function IsOptionalFormat(value) {\n        return ValueGuard.IsUndefined(value) || (ValueGuard.IsString(value) && IsControlCharacterFree(value));\n    }\n    function IsOptionalSchema(value) {\n        return ValueGuard.IsUndefined(value) || TSchema(value);\n    }\n    // ----------------------------------------------------------------\n    // Types\n    // ----------------------------------------------------------------\n    /** Returns true if the given value is TAny */\n    function TAny(schema) {\n        // prettier-ignore\n        return (TKindOf(schema, 'Any') &&\n            IsOptionalString(schema.$id));\n    }\n    TypeGuard.TAny = TAny;\n    /** Returns true if the given value is TArray */\n    function TArray(schema) {\n        return (TKindOf(schema, 'Array') &&\n            schema.type === 'array' &&\n            IsOptionalString(schema.$id) &&\n            TSchema(schema.items) &&\n            IsOptionalNumber(schema.minItems) &&\n            IsOptionalNumber(schema.maxItems) &&\n            IsOptionalBoolean(schema.uniqueItems) &&\n            IsOptionalSchema(schema.contains) &&\n            IsOptionalNumber(schema.minContains) &&\n            IsOptionalNumber(schema.maxContains));\n    }\n    TypeGuard.TArray = TArray;\n    /** Returns true if the given value is TAsyncIterator */\n    function TAsyncIterator(schema) {\n        // prettier-ignore\n        return (TKindOf(schema, 'AsyncIterator') &&\n            schema.type === 'AsyncIterator' &&\n            IsOptionalString(schema.$id) &&\n            TSchema(schema.items));\n    }\n    TypeGuard.TAsyncIterator = TAsyncIterator;\n    /** Returns true if the given value is TBigInt */\n    function TBigInt(schema) {\n        // prettier-ignore\n        return (TKindOf(schema, 'BigInt') &&\n            schema.type === 'bigint' &&\n            IsOptionalString(schema.$id) &&\n            IsOptionalBigInt(schema.exclusiveMaximum) &&\n            IsOptionalBigInt(schema.exclusiveMinimum) &&\n            IsOptionalBigInt(schema.maximum) &&\n            IsOptionalBigInt(schema.minimum) &&\n            IsOptionalBigInt(schema.multipleOf));\n    }\n    TypeGuard.TBigInt = TBigInt;\n    /** Returns true if the given value is TBoolean */\n    function TBoolean(schema) {\n        // prettier-ignore\n        return (TKindOf(schema, 'Boolean') &&\n            schema.type === 'boolean' &&\n            IsOptionalString(schema.$id));\n    }\n    TypeGuard.TBoolean = TBoolean;\n    /** Returns true if the given value is TConstructor */\n    function TConstructor(schema) {\n        // prettier-ignore\n        return (TKindOf(schema, 'Constructor') &&\n            schema.type === 'Constructor' &&\n            IsOptionalString(schema.$id) &&\n            ValueGuard.IsArray(schema.parameters) &&\n            schema.parameters.every(schema => TSchema(schema)) &&\n            TSchema(schema.returns));\n    }\n    TypeGuard.TConstructor = TConstructor;\n    /** Returns true if the given value is TDate */\n    function TDate(schema) {\n        return (TKindOf(schema, 'Date') &&\n            schema.type === 'Date' &&\n            IsOptionalString(schema.$id) &&\n            IsOptionalNumber(schema.exclusiveMaximumTimestamp) &&\n            IsOptionalNumber(schema.exclusiveMinimumTimestamp) &&\n            IsOptionalNumber(schema.maximumTimestamp) &&\n            IsOptionalNumber(schema.minimumTimestamp) &&\n            IsOptionalNumber(schema.multipleOfTimestamp));\n    }\n    TypeGuard.TDate = TDate;\n    /** Returns true if the given value is TFunction */\n    function TFunction(schema) {\n        // prettier-ignore\n        return (TKindOf(schema, 'Function') &&\n            schema.type === 'Function' &&\n            IsOptionalString(schema.$id) &&\n            ValueGuard.IsArray(schema.parameters) &&\n            schema.parameters.every(schema => TSchema(schema)) &&\n            TSchema(schema.returns));\n    }\n    TypeGuard.TFunction = TFunction;\n    /** Returns true if the given value is TInteger */\n    function TInteger(schema) {\n        return (TKindOf(schema, 'Integer') &&\n            schema.type === 'integer' &&\n            IsOptionalString(schema.$id) &&\n            IsOptionalNumber(schema.exclusiveMaximum) &&\n            IsOptionalNumber(schema.exclusiveMinimum) &&\n            IsOptionalNumber(schema.maximum) &&\n            IsOptionalNumber(schema.minimum) &&\n            IsOptionalNumber(schema.multipleOf));\n    }\n    TypeGuard.TInteger = TInteger;\n    /** Returns true if the given value is TIntersect */\n    function TIntersect(schema) {\n        // prettier-ignore\n        return (TKindOf(schema, 'Intersect') &&\n            (ValueGuard.IsString(schema.type) && schema.type !== 'object' ? false : true) &&\n            ValueGuard.IsArray(schema.allOf) &&\n            schema.allOf.every(schema => TSchema(schema) && !TTransform(schema)) &&\n            IsOptionalString(schema.type) &&\n            (IsOptionalBoolean(schema.unevaluatedProperties) || IsOptionalSchema(schema.unevaluatedProperties)) &&\n            IsOptionalString(schema.$id));\n    }\n    TypeGuard.TIntersect = TIntersect;\n    /** Returns true if the given value is TIterator */\n    function TIterator(schema) {\n        // prettier-ignore\n        return (TKindOf(schema, 'Iterator') &&\n            schema.type === 'Iterator' &&\n            IsOptionalString(schema.$id) &&\n            TSchema(schema.items));\n    }\n    TypeGuard.TIterator = TIterator;\n    /** Returns true if the given value is a TKind with the given name. */\n    function TKindOf(schema, kind) {\n        return TKind(schema) && schema[exports.Kind] === kind;\n    }\n    TypeGuard.TKindOf = TKindOf;\n    /** Returns true if the given value is TKind */\n    function TKind(schema) {\n        return ValueGuard.IsObject(schema) && exports.Kind in schema && ValueGuard.IsString(schema[exports.Kind]);\n    }\n    TypeGuard.TKind = TKind;\n    /** Returns true if the given value is TLiteral<string> */\n    function TLiteralString(schema) {\n        return TLiteral(schema) && ValueGuard.IsString(schema.const);\n    }\n    TypeGuard.TLiteralString = TLiteralString;\n    /** Returns true if the given value is TLiteral<number> */\n    function TLiteralNumber(schema) {\n        return TLiteral(schema) && ValueGuard.IsNumber(schema.const);\n    }\n    TypeGuard.TLiteralNumber = TLiteralNumber;\n    /** Returns true if the given value is TLiteral<boolean> */\n    function TLiteralBoolean(schema) {\n        return TLiteral(schema) && ValueGuard.IsBoolean(schema.const);\n    }\n    TypeGuard.TLiteralBoolean = TLiteralBoolean;\n    /** Returns true if the given value is TLiteral */\n    function TLiteral(schema) {\n        // prettier-ignore\n        return (TKindOf(schema, 'Literal') &&\n            IsOptionalString(schema.$id) && (ValueGuard.IsBoolean(schema.const) ||\n            ValueGuard.IsNumber(schema.const) ||\n            ValueGuard.IsString(schema.const)));\n    }\n    TypeGuard.TLiteral = TLiteral;\n    /** Returns true if the given value is TNever */\n    function TNever(schema) {\n        // prettier-ignore\n        return (TKindOf(schema, 'Never') &&\n            ValueGuard.IsObject(schema.not) &&\n            Object.getOwnPropertyNames(schema.not).length === 0);\n    }\n    TypeGuard.TNever = TNever;\n    /** Returns true if the given value is TNot */\n    function TNot(schema) {\n        // prettier-ignore\n        return (TKindOf(schema, 'Not') &&\n            TSchema(schema.not));\n    }\n    TypeGuard.TNot = TNot;\n    /** Returns true if the given value is TNull */\n    function TNull(schema) {\n        // prettier-ignore\n        return (TKindOf(schema, 'Null') &&\n            schema.type === 'null' &&\n            IsOptionalString(schema.$id));\n    }\n    TypeGuard.TNull = TNull;\n    /** Returns true if the given value is TNumber */\n    function TNumber(schema) {\n        return (TKindOf(schema, 'Number') &&\n            schema.type === 'number' &&\n            IsOptionalString(schema.$id) &&\n            IsOptionalNumber(schema.exclusiveMaximum) &&\n            IsOptionalNumber(schema.exclusiveMinimum) &&\n            IsOptionalNumber(schema.maximum) &&\n            IsOptionalNumber(schema.minimum) &&\n            IsOptionalNumber(schema.multipleOf));\n    }\n    TypeGuard.TNumber = TNumber;\n    /** Returns true if the given value is TObject */\n    function TObject(schema) {\n        // prettier-ignore\n        return (TKindOf(schema, 'Object') &&\n            schema.type === 'object' &&\n            IsOptionalString(schema.$id) &&\n            ValueGuard.IsObject(schema.properties) &&\n            IsAdditionalProperties(schema.additionalProperties) &&\n            IsOptionalNumber(schema.minProperties) &&\n            IsOptionalNumber(schema.maxProperties) &&\n            Object.entries(schema.properties).every(([key, schema]) => IsControlCharacterFree(key) && TSchema(schema)));\n    }\n    TypeGuard.TObject = TObject;\n    /** Returns true if the given value is TPromise */\n    function TPromise(schema) {\n        // prettier-ignore\n        return (TKindOf(schema, 'Promise') &&\n            schema.type === 'Promise' &&\n            IsOptionalString(schema.$id) &&\n            TSchema(schema.item));\n    }\n    TypeGuard.TPromise = TPromise;\n    /** Returns true if the given value is TRecord */\n    function TRecord(schema) {\n        // prettier-ignore\n        return (TKindOf(schema, 'Record') &&\n            schema.type === 'object' &&\n            IsOptionalString(schema.$id) &&\n            IsAdditionalProperties(schema.additionalProperties) &&\n            ValueGuard.IsObject(schema.patternProperties) &&\n            ((schema) => {\n                const keys = Object.getOwnPropertyNames(schema.patternProperties);\n                return (keys.length === 1 &&\n                    IsPattern(keys[0]) &&\n                    ValueGuard.IsObject(schema.patternProperties) &&\n                    TSchema(schema.patternProperties[keys[0]]));\n            })(schema));\n    }\n    TypeGuard.TRecord = TRecord;\n    /** Returns true if this value is TRecursive */\n    function TRecursive(schema) {\n        return ValueGuard.IsObject(schema) && exports.Hint in schema && schema[exports.Hint] === 'Recursive';\n    }\n    TypeGuard.TRecursive = TRecursive;\n    /** Returns true if the given value is TRef */\n    function TRef(schema) {\n        // prettier-ignore\n        return (TKindOf(schema, 'Ref') &&\n            IsOptionalString(schema.$id) &&\n            ValueGuard.IsString(schema.$ref));\n    }\n    TypeGuard.TRef = TRef;\n    /** Returns true if the given value is TString */\n    function TString(schema) {\n        // prettier-ignore\n        return (TKindOf(schema, 'String') &&\n            schema.type === 'string' &&\n            IsOptionalString(schema.$id) &&\n            IsOptionalNumber(schema.minLength) &&\n            IsOptionalNumber(schema.maxLength) &&\n            IsOptionalPattern(schema.pattern) &&\n            IsOptionalFormat(schema.format));\n    }\n    TypeGuard.TString = TString;\n    /** Returns true if the given value is TSymbol */\n    function TSymbol(schema) {\n        // prettier-ignore\n        return (TKindOf(schema, 'Symbol') &&\n            schema.type === 'symbol' &&\n            IsOptionalString(schema.$id));\n    }\n    TypeGuard.TSymbol = TSymbol;\n    /** Returns true if the given value is TTemplateLiteral */\n    function TTemplateLiteral(schema) {\n        // prettier-ignore\n        return (TKindOf(schema, 'TemplateLiteral') &&\n            schema.type === 'string' &&\n            ValueGuard.IsString(schema.pattern) &&\n            schema.pattern[0] === '^' &&\n            schema.pattern[schema.pattern.length - 1] === '$');\n    }\n    TypeGuard.TTemplateLiteral = TTemplateLiteral;\n    /** Returns true if the given value is TThis */\n    function TThis(schema) {\n        // prettier-ignore\n        return (TKindOf(schema, 'This') &&\n            IsOptionalString(schema.$id) &&\n            ValueGuard.IsString(schema.$ref));\n    }\n    TypeGuard.TThis = TThis;\n    /** Returns true of this value is TTransform */\n    function TTransform(schema) {\n        return ValueGuard.IsObject(schema) && exports.Transform in schema;\n    }\n    TypeGuard.TTransform = TTransform;\n    /** Returns true if the given value is TTuple */\n    function TTuple(schema) {\n        // prettier-ignore\n        return (TKindOf(schema, 'Tuple') &&\n            schema.type === 'array' &&\n            IsOptionalString(schema.$id) &&\n            ValueGuard.IsNumber(schema.minItems) &&\n            ValueGuard.IsNumber(schema.maxItems) &&\n            schema.minItems === schema.maxItems &&\n            (( // empty\n            ValueGuard.IsUndefined(schema.items) &&\n                ValueGuard.IsUndefined(schema.additionalItems) &&\n                schema.minItems === 0) || (ValueGuard.IsArray(schema.items) &&\n                schema.items.every(schema => TSchema(schema)))));\n    }\n    TypeGuard.TTuple = TTuple;\n    /** Returns true if the given value is TUndefined */\n    function TUndefined(schema) {\n        // prettier-ignore\n        return (TKindOf(schema, 'Undefined') &&\n            schema.type === 'undefined' &&\n            IsOptionalString(schema.$id));\n    }\n    TypeGuard.TUndefined = TUndefined;\n    /** Returns true if the given value is TUnion<Literal<string | number>[]> */\n    function TUnionLiteral(schema) {\n        return TUnion(schema) && schema.anyOf.every((schema) => TLiteralString(schema) || TLiteralNumber(schema));\n    }\n    TypeGuard.TUnionLiteral = TUnionLiteral;\n    /** Returns true if the given value is TUnion */\n    function TUnion(schema) {\n        // prettier-ignore\n        return (TKindOf(schema, 'Union') &&\n            IsOptionalString(schema.$id) &&\n            ValueGuard.IsObject(schema) &&\n            ValueGuard.IsArray(schema.anyOf) &&\n            schema.anyOf.every(schema => TSchema(schema)));\n    }\n    TypeGuard.TUnion = TUnion;\n    /** Returns true if the given value is TUint8Array */\n    function TUint8Array(schema) {\n        // prettier-ignore\n        return (TKindOf(schema, 'Uint8Array') &&\n            schema.type === 'Uint8Array' &&\n            IsOptionalString(schema.$id) &&\n            IsOptionalNumber(schema.minByteLength) &&\n            IsOptionalNumber(schema.maxByteLength));\n    }\n    TypeGuard.TUint8Array = TUint8Array;\n    /** Returns true if the given value is TUnknown */\n    function TUnknown(schema) {\n        // prettier-ignore\n        return (TKindOf(schema, 'Unknown') &&\n            IsOptionalString(schema.$id));\n    }\n    TypeGuard.TUnknown = TUnknown;\n    /** Returns true if the given value is a raw TUnsafe */\n    function TUnsafe(schema) {\n        return TKindOf(schema, 'Unsafe');\n    }\n    TypeGuard.TUnsafe = TUnsafe;\n    /** Returns true if the given value is TVoid */\n    function TVoid(schema) {\n        // prettier-ignore\n        return (TKindOf(schema, 'Void') &&\n            schema.type === 'void' &&\n            IsOptionalString(schema.$id));\n    }\n    TypeGuard.TVoid = TVoid;\n    /** Returns true if this value has a Readonly symbol */\n    function TReadonly(schema) {\n        return ValueGuard.IsObject(schema) && schema[exports.Readonly] === 'Readonly';\n    }\n    TypeGuard.TReadonly = TReadonly;\n    /** Returns true if this value has a Optional symbol */\n    function TOptional(schema) {\n        return ValueGuard.IsObject(schema) && schema[exports.Optional] === 'Optional';\n    }\n    TypeGuard.TOptional = TOptional;\n    /** Returns true if the given value is TSchema */\n    function TSchema(schema) {\n        // prettier-ignore\n        return (ValueGuard.IsObject(schema)) && (TAny(schema) ||\n            TArray(schema) ||\n            TBoolean(schema) ||\n            TBigInt(schema) ||\n            TAsyncIterator(schema) ||\n            TConstructor(schema) ||\n            TDate(schema) ||\n            TFunction(schema) ||\n            TInteger(schema) ||\n            TIntersect(schema) ||\n            TIterator(schema) ||\n            TLiteral(schema) ||\n            TNever(schema) ||\n            TNot(schema) ||\n            TNull(schema) ||\n            TNumber(schema) ||\n            TObject(schema) ||\n            TPromise(schema) ||\n            TRecord(schema) ||\n            TRef(schema) ||\n            TString(schema) ||\n            TSymbol(schema) ||\n            TTemplateLiteral(schema) ||\n            TThis(schema) ||\n            TTuple(schema) ||\n            TUndefined(schema) ||\n            TUnion(schema) ||\n            TUint8Array(schema) ||\n            TUnknown(schema) ||\n            TUnsafe(schema) ||\n            TVoid(schema) ||\n            (TKind(schema) && TypeRegistry.Has(schema[exports.Kind])));\n    }\n    TypeGuard.TSchema = TSchema;\n})(TypeGuard || (exports.TypeGuard = TypeGuard = {}));\n// --------------------------------------------------------------------------\n// ExtendsUndefined\n// --------------------------------------------------------------------------\n/** Fast undefined check used for properties of type undefined */\nvar ExtendsUndefined;\n(function (ExtendsUndefined) {\n    function Check(schema) {\n        return schema[exports.Kind] === 'Intersect'\n            ? schema.allOf.every((schema) => Check(schema))\n            : schema[exports.Kind] === 'Union'\n                ? schema.anyOf.some((schema) => Check(schema))\n                : schema[exports.Kind] === 'Undefined'\n                    ? true\n                    : schema[exports.Kind] === 'Not'\n                        ? !Check(schema.not)\n                        : false;\n    }\n    ExtendsUndefined.Check = Check;\n})(ExtendsUndefined || (exports.ExtendsUndefined = ExtendsUndefined = {}));\n// --------------------------------------------------------------------------\n// TypeExtends\n// --------------------------------------------------------------------------\nclass TypeExtendsError extends TypeBoxError {\n}\nexports.TypeExtendsError = TypeExtendsError;\nvar TypeExtendsResult;\n(function (TypeExtendsResult) {\n    TypeExtendsResult[TypeExtendsResult[\"Union\"] = 0] = \"Union\";\n    TypeExtendsResult[TypeExtendsResult[\"True\"] = 1] = \"True\";\n    TypeExtendsResult[TypeExtendsResult[\"False\"] = 2] = \"False\";\n})(TypeExtendsResult || (exports.TypeExtendsResult = TypeExtendsResult = {}));\nvar TypeExtends;\n(function (TypeExtends) {\n    // --------------------------------------------------------------------------\n    // IntoBooleanResult\n    // --------------------------------------------------------------------------\n    function IntoBooleanResult(result) {\n        return result === TypeExtendsResult.False ? result : TypeExtendsResult.True;\n    }\n    // --------------------------------------------------------------------------\n    // Throw\n    // --------------------------------------------------------------------------\n    function Throw(message) {\n        throw new TypeExtendsError(message);\n    }\n    // --------------------------------------------------------------------------\n    // StructuralRight\n    // --------------------------------------------------------------------------\n    function IsStructuralRight(right) {\n        // prettier-ignore\n        return (TypeGuard.TNever(right) ||\n            TypeGuard.TIntersect(right) ||\n            TypeGuard.TUnion(right) ||\n            TypeGuard.TUnknown(right) ||\n            TypeGuard.TAny(right));\n    }\n    function StructuralRight(left, right) {\n        // prettier-ignore\n        return (TypeGuard.TNever(right) ? TNeverRight(left, right) :\n            TypeGuard.TIntersect(right) ? TIntersectRight(left, right) :\n                TypeGuard.TUnion(right) ? TUnionRight(left, right) :\n                    TypeGuard.TUnknown(right) ? TUnknownRight(left, right) :\n                        TypeGuard.TAny(right) ? TAnyRight(left, right) :\n                            Throw('StructuralRight'));\n    }\n    // --------------------------------------------------------------------------\n    // Any\n    // --------------------------------------------------------------------------\n    function TAnyRight(left, right) {\n        return TypeExtendsResult.True;\n    }\n    function TAny(left, right) {\n        // prettier-ignore\n        return (TypeGuard.TIntersect(right) ? TIntersectRight(left, right) :\n            (TypeGuard.TUnion(right) && right.anyOf.some((schema) => TypeGuard.TAny(schema) || TypeGuard.TUnknown(schema))) ? TypeExtendsResult.True :\n                TypeGuard.TUnion(right) ? TypeExtendsResult.Union :\n                    TypeGuard.TUnknown(right) ? TypeExtendsResult.True :\n                        TypeGuard.TAny(right) ? TypeExtendsResult.True :\n                            TypeExtendsResult.Union);\n    }\n    // --------------------------------------------------------------------------\n    // Array\n    // --------------------------------------------------------------------------\n    function TArrayRight(left, right) {\n        // prettier-ignore\n        return (TypeGuard.TUnknown(left) ? TypeExtendsResult.False :\n            TypeGuard.TAny(left) ? TypeExtendsResult.Union :\n                TypeGuard.TNever(left) ? TypeExtendsResult.True :\n                    TypeExtendsResult.False);\n    }\n    function TArray(left, right) {\n        // prettier-ignore\n        return (TypeGuard.TObject(right) && IsObjectArrayLike(right) ? TypeExtendsResult.True :\n            IsStructuralRight(right) ? StructuralRight(left, right) :\n                !TypeGuard.TArray(right) ? TypeExtendsResult.False :\n                    IntoBooleanResult(Visit(left.items, right.items)));\n    }\n    // --------------------------------------------------------------------------\n    // AsyncIterator\n    // --------------------------------------------------------------------------\n    function TAsyncIterator(left, right) {\n        // prettier-ignore\n        return (IsStructuralRight(right) ? StructuralRight(left, right) :\n            !TypeGuard.TAsyncIterator(right) ? TypeExtendsResult.False :\n                IntoBooleanResult(Visit(left.items, right.items)));\n    }\n    // --------------------------------------------------------------------------\n    // BigInt\n    // --------------------------------------------------------------------------\n    function TBigInt(left, right) {\n        // prettier-ignore\n        return (IsStructuralRight(right) ? StructuralRight(left, right) :\n            TypeGuard.TObject(right) ? TObjectRight(left, right) :\n                TypeGuard.TRecord(right) ? TRecordRight(left, right) :\n                    TypeGuard.TBigInt(right) ? TypeExtendsResult.True :\n                        TypeExtendsResult.False);\n    }\n    // --------------------------------------------------------------------------\n    // Boolean\n    // --------------------------------------------------------------------------\n    function TBooleanRight(left, right) {\n        return TypeGuard.TLiteral(left) && ValueGuard.IsBoolean(left.const) ? TypeExtendsResult.True : TypeGuard.TBoolean(left) ? TypeExtendsResult.True : TypeExtendsResult.False;\n    }\n    function TBoolean(left, right) {\n        // prettier-ignore\n        return (IsStructuralRight(right) ? StructuralRight(left, right) :\n            TypeGuard.TObject(right) ? TObjectRight(left, right) :\n                TypeGuard.TRecord(right) ? TRecordRight(left, right) :\n                    TypeGuard.TBoolean(right) ? TypeExtendsResult.True :\n                        TypeExtendsResult.False);\n    }\n    // --------------------------------------------------------------------------\n    // Constructor\n    // --------------------------------------------------------------------------\n    function TConstructor(left, right) {\n        // prettier-ignore\n        return (IsStructuralRight(right) ? StructuralRight(left, right) :\n            TypeGuard.TObject(right) ? TObjectRight(left, right) :\n                !TypeGuard.TConstructor(right) ? TypeExtendsResult.False :\n                    left.parameters.length > right.parameters.length ? TypeExtendsResult.False :\n                        (!left.parameters.every((schema, index) => IntoBooleanResult(Visit(right.parameters[index], schema)) === TypeExtendsResult.True)) ? TypeExtendsResult.False :\n                            IntoBooleanResult(Visit(left.returns, right.returns)));\n    }\n    // --------------------------------------------------------------------------\n    // Date\n    // --------------------------------------------------------------------------\n    function TDate(left, right) {\n        // prettier-ignore\n        return (IsStructuralRight(right) ? StructuralRight(left, right) :\n            TypeGuard.TObject(right) ? TObjectRight(left, right) :\n                TypeGuard.TRecord(right) ? TRecordRight(left, right) :\n                    TypeGuard.TDate(right) ? TypeExtendsResult.True :\n                        TypeExtendsResult.False);\n    }\n    // --------------------------------------------------------------------------\n    // Function\n    // --------------------------------------------------------------------------\n    function TFunction(left, right) {\n        // prettier-ignore\n        return (IsStructuralRight(right) ? StructuralRight(left, right) :\n            TypeGuard.TObject(right) ? TObjectRight(left, right) :\n                !TypeGuard.TFunction(right) ? TypeExtendsResult.False :\n                    left.parameters.length > right.parameters.length ? TypeExtendsResult.False :\n                        (!left.parameters.every((schema, index) => IntoBooleanResult(Visit(right.parameters[index], schema)) === TypeExtendsResult.True)) ? TypeExtendsResult.False :\n                            IntoBooleanResult(Visit(left.returns, right.returns)));\n    }\n    // --------------------------------------------------------------------------\n    // Integer\n    // --------------------------------------------------------------------------\n    function TIntegerRight(left, right) {\n        // prettier-ignore\n        return (TypeGuard.TLiteral(left) && ValueGuard.IsNumber(left.const) ? TypeExtendsResult.True :\n            TypeGuard.TNumber(left) || TypeGuard.TInteger(left) ? TypeExtendsResult.True :\n                TypeExtendsResult.False);\n    }\n    function TInteger(left, right) {\n        // prettier-ignore\n        return (TypeGuard.TInteger(right) || TypeGuard.TNumber(right) ? TypeExtendsResult.True :\n            IsStructuralRight(right) ? StructuralRight(left, right) :\n                TypeGuard.TObject(right) ? TObjectRight(left, right) :\n                    TypeGuard.TRecord(right) ? TRecordRight(left, right) :\n                        TypeExtendsResult.False);\n    }\n    // --------------------------------------------------------------------------\n    // Intersect\n    // --------------------------------------------------------------------------\n    function TIntersectRight(left, right) {\n        // prettier-ignore\n        return right.allOf.every((schema) => Visit(left, schema) === TypeExtendsResult.True)\n            ? TypeExtendsResult.True\n            : TypeExtendsResult.False;\n    }\n    function TIntersect(left, right) {\n        // prettier-ignore\n        return left.allOf.some((schema) => Visit(schema, right) === TypeExtendsResult.True)\n            ? TypeExtendsResult.True\n            : TypeExtendsResult.False;\n    }\n    // --------------------------------------------------------------------------\n    // Iterator\n    // --------------------------------------------------------------------------\n    function TIterator(left, right) {\n        // prettier-ignore\n        return (IsStructuralRight(right) ? StructuralRight(left, right) :\n            !TypeGuard.TIterator(right) ? TypeExtendsResult.False :\n                IntoBooleanResult(Visit(left.items, right.items)));\n    }\n    // --------------------------------------------------------------------------\n    // Literal\n    // --------------------------------------------------------------------------\n    function TLiteral(left, right) {\n        // prettier-ignore\n        return (TypeGuard.TLiteral(right) && right.const === left.const ? TypeExtendsResult.True :\n            IsStructuralRight(right) ? StructuralRight(left, right) :\n                TypeGuard.TObject(right) ? TObjectRight(left, right) :\n                    TypeGuard.TRecord(right) ? TRecordRight(left, right) :\n                        TypeGuard.TString(right) ? TStringRight(left, right) :\n                            TypeGuard.TNumber(right) ? TNumberRight(left, right) :\n                                TypeGuard.TInteger(right) ? TIntegerRight(left, right) :\n                                    TypeGuard.TBoolean(right) ? TBooleanRight(left, right) :\n                                        TypeExtendsResult.False);\n    }\n    // --------------------------------------------------------------------------\n    // Never\n    // --------------------------------------------------------------------------\n    function TNeverRight(left, right) {\n        return TypeExtendsResult.False;\n    }\n    function TNever(left, right) {\n        return TypeExtendsResult.True;\n    }\n    // --------------------------------------------------------------------------\n    // Not\n    // --------------------------------------------------------------------------\n    function UnwrapTNot(schema) {\n        let [current, depth] = [schema, 0];\n        while (true) {\n            if (!TypeGuard.TNot(current))\n                break;\n            current = current.not;\n            depth += 1;\n        }\n        return depth % 2 === 0 ? current : exports.Type.Unknown();\n    }\n    function TNot(left, right) {\n        // TypeScript has no concept of negated types, and attempts to correctly check the negated\n        // type at runtime would put TypeBox at odds with TypeScripts ability to statically infer\n        // the type. Instead we unwrap to either unknown or T and continue evaluating.\n        // prettier-ignore\n        return (TypeGuard.TNot(left) ? Visit(UnwrapTNot(left), right) :\n            TypeGuard.TNot(right) ? Visit(left, UnwrapTNot(right)) :\n                Throw('Invalid fallthrough for Not'));\n    }\n    // --------------------------------------------------------------------------\n    // Null\n    // --------------------------------------------------------------------------\n    function TNull(left, right) {\n        // prettier-ignore\n        return (IsStructuralRight(right) ? StructuralRight(left, right) :\n            TypeGuard.TObject(right) ? TObjectRight(left, right) :\n                TypeGuard.TRecord(right) ? TRecordRight(left, right) :\n                    TypeGuard.TNull(right) ? TypeExtendsResult.True :\n                        TypeExtendsResult.False);\n    }\n    // --------------------------------------------------------------------------\n    // Number\n    // --------------------------------------------------------------------------\n    function TNumberRight(left, right) {\n        // prettier-ignore\n        return (TypeGuard.TLiteralNumber(left) ? TypeExtendsResult.True :\n            TypeGuard.TNumber(left) || TypeGuard.TInteger(left) ? TypeExtendsResult.True :\n                TypeExtendsResult.False);\n    }\n    function TNumber(left, right) {\n        // prettier-ignore\n        return (IsStructuralRight(right) ? StructuralRight(left, right) :\n            TypeGuard.TObject(right) ? TObjectRight(left, right) :\n                TypeGuard.TRecord(right) ? TRecordRight(left, right) :\n                    TypeGuard.TInteger(right) || TypeGuard.TNumber(right) ? TypeExtendsResult.True :\n                        TypeExtendsResult.False);\n    }\n    // --------------------------------------------------------------------------\n    // Object\n    // --------------------------------------------------------------------------\n    function IsObjectPropertyCount(schema, count) {\n        return Object.getOwnPropertyNames(schema.properties).length === count;\n    }\n    function IsObjectStringLike(schema) {\n        return IsObjectArrayLike(schema);\n    }\n    function IsObjectSymbolLike(schema) {\n        // prettier-ignore\n        return IsObjectPropertyCount(schema, 0) || (IsObjectPropertyCount(schema, 1) && 'description' in schema.properties && TypeGuard.TUnion(schema.properties.description) && schema.properties.description.anyOf.length === 2 && ((TypeGuard.TString(schema.properties.description.anyOf[0]) &&\n            TypeGuard.TUndefined(schema.properties.description.anyOf[1])) || (TypeGuard.TString(schema.properties.description.anyOf[1]) &&\n            TypeGuard.TUndefined(schema.properties.description.anyOf[0]))));\n    }\n    function IsObjectNumberLike(schema) {\n        return IsObjectPropertyCount(schema, 0);\n    }\n    function IsObjectBooleanLike(schema) {\n        return IsObjectPropertyCount(schema, 0);\n    }\n    function IsObjectBigIntLike(schema) {\n        return IsObjectPropertyCount(schema, 0);\n    }\n    function IsObjectDateLike(schema) {\n        return IsObjectPropertyCount(schema, 0);\n    }\n    function IsObjectUint8ArrayLike(schema) {\n        return IsObjectArrayLike(schema);\n    }\n    function IsObjectFunctionLike(schema) {\n        const length = exports.Type.Number();\n        return IsObjectPropertyCount(schema, 0) || (IsObjectPropertyCount(schema, 1) && 'length' in schema.properties && IntoBooleanResult(Visit(schema.properties['length'], length)) === TypeExtendsResult.True);\n    }\n    function IsObjectConstructorLike(schema) {\n        return IsObjectPropertyCount(schema, 0);\n    }\n    function IsObjectArrayLike(schema) {\n        const length = exports.Type.Number();\n        return IsObjectPropertyCount(schema, 0) || (IsObjectPropertyCount(schema, 1) && 'length' in schema.properties && IntoBooleanResult(Visit(schema.properties['length'], length)) === TypeExtendsResult.True);\n    }\n    function IsObjectPromiseLike(schema) {\n        const then = exports.Type.Function([exports.Type.Any()], exports.Type.Any());\n        return IsObjectPropertyCount(schema, 0) || (IsObjectPropertyCount(schema, 1) && 'then' in schema.properties && IntoBooleanResult(Visit(schema.properties['then'], then)) === TypeExtendsResult.True);\n    }\n    // --------------------------------------------------------------------------\n    // Property\n    // --------------------------------------------------------------------------\n    function Property(left, right) {\n        // prettier-ignore\n        return (Visit(left, right) === TypeExtendsResult.False ? TypeExtendsResult.False :\n            TypeGuard.TOptional(left) && !TypeGuard.TOptional(right) ? TypeExtendsResult.False :\n                TypeExtendsResult.True);\n    }\n    function TObjectRight(left, right) {\n        // prettier-ignore\n        return (TypeGuard.TUnknown(left) ? TypeExtendsResult.False :\n            TypeGuard.TAny(left) ? TypeExtendsResult.Union : (TypeGuard.TNever(left) ||\n                (TypeGuard.TLiteralString(left) && IsObjectStringLike(right)) ||\n                (TypeGuard.TLiteralNumber(left) && IsObjectNumberLike(right)) ||\n                (TypeGuard.TLiteralBoolean(left) && IsObjectBooleanLike(right)) ||\n                (TypeGuard.TSymbol(left) && IsObjectSymbolLike(right)) ||\n                (TypeGuard.TBigInt(left) && IsObjectBigIntLike(right)) ||\n                (TypeGuard.TString(left) && IsObjectStringLike(right)) ||\n                (TypeGuard.TSymbol(left) && IsObjectSymbolLike(right)) ||\n                (TypeGuard.TNumber(left) && IsObjectNumberLike(right)) ||\n                (TypeGuard.TInteger(left) && IsObjectNumberLike(right)) ||\n                (TypeGuard.TBoolean(left) && IsObjectBooleanLike(right)) ||\n                (TypeGuard.TUint8Array(left) && IsObjectUint8ArrayLike(right)) ||\n                (TypeGuard.TDate(left) && IsObjectDateLike(right)) ||\n                (TypeGuard.TConstructor(left) && IsObjectConstructorLike(right)) ||\n                (TypeGuard.TFunction(left) && IsObjectFunctionLike(right))) ? TypeExtendsResult.True :\n                (TypeGuard.TRecord(left) && TypeGuard.TString(RecordKey(left))) ? (() => {\n                    // When expressing a Record with literal key values, the Record is converted into a Object with\n                    // the Hint assigned as `Record`. This is used to invert the extends logic.\n                    return right[exports.Hint] === 'Record' ? TypeExtendsResult.True : TypeExtendsResult.False;\n                })() :\n                    (TypeGuard.TRecord(left) && TypeGuard.TNumber(RecordKey(left))) ? (() => {\n                        return IsObjectPropertyCount(right, 0)\n                            ? TypeExtendsResult.True\n                            : TypeExtendsResult.False;\n                    })() :\n                        TypeExtendsResult.False);\n    }\n    function TObject(left, right) {\n        // prettier-ignore\n        return (IsStructuralRight(right) ? StructuralRight(left, right) :\n            TypeGuard.TRecord(right) ? TRecordRight(left, right) :\n                !TypeGuard.TObject(right) ? TypeExtendsResult.False :\n                    (() => {\n                        for (const key of Object.getOwnPropertyNames(right.properties)) {\n                            if (!(key in left.properties) && !TypeGuard.TOptional(right.properties[key])) {\n                                return TypeExtendsResult.False;\n                            }\n                            if (TypeGuard.TOptional(right.properties[key])) {\n                                return TypeExtendsResult.True;\n                            }\n                            if (Property(left.properties[key], right.properties[key]) === TypeExtendsResult.False) {\n                                return TypeExtendsResult.False;\n                            }\n                        }\n                        return TypeExtendsResult.True;\n                    })());\n    }\n    // --------------------------------------------------------------------------\n    // Promise\n    // --------------------------------------------------------------------------\n    function TPromise(left, right) {\n        // prettier-ignore\n        return (IsStructuralRight(right) ? StructuralRight(left, right) :\n            TypeGuard.TObject(right) && IsObjectPromiseLike(right) ? TypeExtendsResult.True :\n                !TypeGuard.TPromise(right) ? TypeExtendsResult.False :\n                    IntoBooleanResult(Visit(left.item, right.item)));\n    }\n    // --------------------------------------------------------------------------\n    // Record\n    // --------------------------------------------------------------------------\n    function RecordKey(schema) {\n        // prettier-ignore\n        return (exports.PatternNumberExact in schema.patternProperties ? exports.Type.Number() :\n            exports.PatternStringExact in schema.patternProperties ? exports.Type.String() :\n                Throw('Unknown record key pattern'));\n    }\n    function RecordValue(schema) {\n        // prettier-ignore\n        return (exports.PatternNumberExact in schema.patternProperties ? schema.patternProperties[exports.PatternNumberExact] :\n            exports.PatternStringExact in schema.patternProperties ? schema.patternProperties[exports.PatternStringExact] :\n                Throw('Unable to get record value schema'));\n    }\n    function TRecordRight(left, right) {\n        const [Key, Value] = [RecordKey(right), RecordValue(right)];\n        // prettier-ignore\n        return ((TypeGuard.TLiteralString(left) && TypeGuard.TNumber(Key) && IntoBooleanResult(Visit(left, Value)) === TypeExtendsResult.True) ? TypeExtendsResult.True :\n            TypeGuard.TUint8Array(left) && TypeGuard.TNumber(Key) ? Visit(left, Value) :\n                TypeGuard.TString(left) && TypeGuard.TNumber(Key) ? Visit(left, Value) :\n                    TypeGuard.TArray(left) && TypeGuard.TNumber(Key) ? Visit(left, Value) :\n                        TypeGuard.TObject(left) ? (() => {\n                            for (const key of Object.getOwnPropertyNames(left.properties)) {\n                                if (Property(Value, left.properties[key]) === TypeExtendsResult.False) {\n                                    return TypeExtendsResult.False;\n                                }\n                            }\n                            return TypeExtendsResult.True;\n                        })() :\n                            TypeExtendsResult.False);\n    }\n    function TRecord(left, right) {\n        // prettier-ignore\n        return (IsStructuralRight(right) ? StructuralRight(left, right) :\n            TypeGuard.TObject(right) ? TObjectRight(left, right) :\n                !TypeGuard.TRecord(right) ? TypeExtendsResult.False :\n                    Visit(RecordValue(left), RecordValue(right)));\n    }\n    // --------------------------------------------------------------------------\n    // String\n    // --------------------------------------------------------------------------\n    function TStringRight(left, right) {\n        // prettier-ignore\n        return (TypeGuard.TLiteral(left) && ValueGuard.IsString(left.const) ? TypeExtendsResult.True :\n            TypeGuard.TString(left) ? TypeExtendsResult.True :\n                TypeExtendsResult.False);\n    }\n    function TString(left, right) {\n        // prettier-ignore\n        return (IsStructuralRight(right) ? StructuralRight(left, right) :\n            TypeGuard.TObject(right) ? TObjectRight(left, right) :\n                TypeGuard.TRecord(right) ? TRecordRight(left, right) :\n                    TypeGuard.TString(right) ? TypeExtendsResult.True :\n                        TypeExtendsResult.False);\n    }\n    // --------------------------------------------------------------------------\n    // Symbol\n    // --------------------------------------------------------------------------\n    function TSymbol(left, right) {\n        // prettier-ignore\n        return (IsStructuralRight(right) ? StructuralRight(left, right) :\n            TypeGuard.TObject(right) ? TObjectRight(left, right) :\n                TypeGuard.TRecord(right) ? TRecordRight(left, right) :\n                    TypeGuard.TSymbol(right) ? TypeExtendsResult.True :\n                        TypeExtendsResult.False);\n    }\n    // --------------------------------------------------------------------------\n    // TemplateLiteral\n    // --------------------------------------------------------------------------\n    function TTemplateLiteral(left, right) {\n        // TemplateLiteral types are resolved to either unions for finite expressions or string\n        // for infinite expressions. Here we call to TemplateLiteralResolver to resolve for\n        // either type and continue evaluating.\n        // prettier-ignore\n        return (TypeGuard.TTemplateLiteral(left) ? Visit(TemplateLiteralResolver.Resolve(left), right) :\n            TypeGuard.TTemplateLiteral(right) ? Visit(left, TemplateLiteralResolver.Resolve(right)) :\n                Throw('Invalid fallthrough for TemplateLiteral'));\n    }\n    // --------------------------------------------------------------------------\n    // Tuple\n    // --------------------------------------------------------------------------\n    function IsArrayOfTuple(left, right) {\n        // prettier-ignore\n        return (TypeGuard.TArray(right) &&\n            left.items !== undefined &&\n            left.items.every((schema) => Visit(schema, right.items) === TypeExtendsResult.True));\n    }\n    function TTupleRight(left, right) {\n        // prettier-ignore\n        return (TypeGuard.TNever(left) ? TypeExtendsResult.True :\n            TypeGuard.TUnknown(left) ? TypeExtendsResult.False :\n                TypeGuard.TAny(left) ? TypeExtendsResult.Union :\n                    TypeExtendsResult.False);\n    }\n    function TTuple(left, right) {\n        // prettier-ignore\n        return (IsStructuralRight(right) ? StructuralRight(left, right) :\n            TypeGuard.TObject(right) && IsObjectArrayLike(right) ? TypeExtendsResult.True :\n                TypeGuard.TArray(right) && IsArrayOfTuple(left, right) ? TypeExtendsResult.True :\n                    !TypeGuard.TTuple(right) ? TypeExtendsResult.False :\n                        (ValueGuard.IsUndefined(left.items) && !ValueGuard.IsUndefined(right.items)) || (!ValueGuard.IsUndefined(left.items) && ValueGuard.IsUndefined(right.items)) ? TypeExtendsResult.False :\n                            (ValueGuard.IsUndefined(left.items) && !ValueGuard.IsUndefined(right.items)) ? TypeExtendsResult.True :\n                                left.items.every((schema, index) => Visit(schema, right.items[index]) === TypeExtendsResult.True) ? TypeExtendsResult.True :\n                                    TypeExtendsResult.False);\n    }\n    // --------------------------------------------------------------------------\n    // Uint8Array\n    // --------------------------------------------------------------------------\n    function TUint8Array(left, right) {\n        // prettier-ignore\n        return (IsStructuralRight(right) ? StructuralRight(left, right) :\n            TypeGuard.TObject(right) ? TObjectRight(left, right) :\n                TypeGuard.TRecord(right) ? TRecordRight(left, right) :\n                    TypeGuard.TUint8Array(right) ? TypeExtendsResult.True :\n                        TypeExtendsResult.False);\n    }\n    // --------------------------------------------------------------------------\n    // Undefined\n    // --------------------------------------------------------------------------\n    function TUndefined(left, right) {\n        // prettier-ignore\n        return (IsStructuralRight(right) ? StructuralRight(left, right) :\n            TypeGuard.TObject(right) ? TObjectRight(left, right) :\n                TypeGuard.TRecord(right) ? TRecordRight(left, right) :\n                    TypeGuard.TVoid(right) ? VoidRight(left, right) :\n                        TypeGuard.TUndefined(right) ? TypeExtendsResult.True :\n                            TypeExtendsResult.False);\n    }\n    // --------------------------------------------------------------------------\n    // Union\n    // --------------------------------------------------------------------------\n    function TUnionRight(left, right) {\n        // prettier-ignore\n        return right.anyOf.some((schema) => Visit(left, schema) === TypeExtendsResult.True)\n            ? TypeExtendsResult.True\n            : TypeExtendsResult.False;\n    }\n    function TUnion(left, right) {\n        // prettier-ignore\n        return left.anyOf.every((schema) => Visit(schema, right) === TypeExtendsResult.True)\n            ? TypeExtendsResult.True\n            : TypeExtendsResult.False;\n    }\n    // --------------------------------------------------------------------------\n    // Unknown\n    // --------------------------------------------------------------------------\n    function TUnknownRight(left, right) {\n        return TypeExtendsResult.True;\n    }\n    function TUnknown(left, right) {\n        // prettier-ignore\n        return (TypeGuard.TNever(right) ? TNeverRight(left, right) :\n            TypeGuard.TIntersect(right) ? TIntersectRight(left, right) :\n                TypeGuard.TUnion(right) ? TUnionRight(left, right) :\n                    TypeGuard.TAny(right) ? TAnyRight(left, right) :\n                        TypeGuard.TString(right) ? TStringRight(left, right) :\n                            TypeGuard.TNumber(right) ? TNumberRight(left, right) :\n                                TypeGuard.TInteger(right) ? TIntegerRight(left, right) :\n                                    TypeGuard.TBoolean(right) ? TBooleanRight(left, right) :\n                                        TypeGuard.TArray(right) ? TArrayRight(left, right) :\n                                            TypeGuard.TTuple(right) ? TTupleRight(left, right) :\n                                                TypeGuard.TObject(right) ? TObjectRight(left, right) :\n                                                    TypeGuard.TUnknown(right) ? TypeExtendsResult.True :\n                                                        TypeExtendsResult.False);\n    }\n    // --------------------------------------------------------------------------\n    // Void\n    // --------------------------------------------------------------------------\n    function VoidRight(left, right) {\n        // prettier-ignore\n        return TypeGuard.TUndefined(left) ? TypeExtendsResult.True :\n            TypeGuard.TUndefined(left) ? TypeExtendsResult.True :\n                TypeExtendsResult.False;\n    }\n    function TVoid(left, right) {\n        // prettier-ignore\n        return TypeGuard.TIntersect(right) ? TIntersectRight(left, right) :\n            TypeGuard.TUnion(right) ? TUnionRight(left, right) :\n                TypeGuard.TUnknown(right) ? TUnknownRight(left, right) :\n                    TypeGuard.TAny(right) ? TAnyRight(left, right) :\n                        TypeGuard.TObject(right) ? TObjectRight(left, right) :\n                            TypeGuard.TVoid(right) ? TypeExtendsResult.True :\n                                TypeExtendsResult.False;\n    }\n    function Visit(left, right) {\n        // prettier-ignore\n        return (\n        // resolvable\n        (TypeGuard.TTemplateLiteral(left) || TypeGuard.TTemplateLiteral(right)) ? TTemplateLiteral(left, right) :\n            (TypeGuard.TNot(left) || TypeGuard.TNot(right)) ? TNot(left, right) :\n                // standard\n                TypeGuard.TAny(left) ? TAny(left, right) :\n                    TypeGuard.TArray(left) ? TArray(left, right) :\n                        TypeGuard.TBigInt(left) ? TBigInt(left, right) :\n                            TypeGuard.TBoolean(left) ? TBoolean(left, right) :\n                                TypeGuard.TAsyncIterator(left) ? TAsyncIterator(left, right) :\n                                    TypeGuard.TConstructor(left) ? TConstructor(left, right) :\n                                        TypeGuard.TDate(left) ? TDate(left, right) :\n                                            TypeGuard.TFunction(left) ? TFunction(left, right) :\n                                                TypeGuard.TInteger(left) ? TInteger(left, right) :\n                                                    TypeGuard.TIntersect(left) ? TIntersect(left, right) :\n                                                        TypeGuard.TIterator(left) ? TIterator(left, right) :\n                                                            TypeGuard.TLiteral(left) ? TLiteral(left, right) :\n                                                                TypeGuard.TNever(left) ? TNever(left, right) :\n                                                                    TypeGuard.TNull(left) ? TNull(left, right) :\n                                                                        TypeGuard.TNumber(left) ? TNumber(left, right) :\n                                                                            TypeGuard.TObject(left) ? TObject(left, right) :\n                                                                                TypeGuard.TRecord(left) ? TRecord(left, right) :\n                                                                                    TypeGuard.TString(left) ? TString(left, right) :\n                                                                                        TypeGuard.TSymbol(left) ? TSymbol(left, right) :\n                                                                                            TypeGuard.TTuple(left) ? TTuple(left, right) :\n                                                                                                TypeGuard.TPromise(left) ? TPromise(left, right) :\n                                                                                                    TypeGuard.TUint8Array(left) ? TUint8Array(left, right) :\n                                                                                                        TypeGuard.TUndefined(left) ? TUndefined(left, right) :\n                                                                                                            TypeGuard.TUnion(left) ? TUnion(left, right) :\n                                                                                                                TypeGuard.TUnknown(left) ? TUnknown(left, right) :\n                                                                                                                    TypeGuard.TVoid(left) ? TVoid(left, right) :\n                                                                                                                        Throw(`Unknown left type operand '${left[exports.Kind]}'`));\n    }\n    function Extends(left, right) {\n        return Visit(left, right);\n    }\n    TypeExtends.Extends = Extends;\n})(TypeExtends || (exports.TypeExtends = TypeExtends = {}));\n// --------------------------------------------------------------------------\n// TypeClone\n// --------------------------------------------------------------------------\n/** Specialized Clone for Types */\nvar TypeClone;\n(function (TypeClone) {\n    function ArrayType(value) {\n        return value.map((value) => Visit(value));\n    }\n    function DateType(value) {\n        return new Date(value.getTime());\n    }\n    function Uint8ArrayType(value) {\n        return new Uint8Array(value);\n    }\n    function ObjectType(value) {\n        const clonedProperties = Object.getOwnPropertyNames(value).reduce((acc, key) => ({ ...acc, [key]: Visit(value[key]) }), {});\n        const clonedSymbols = Object.getOwnPropertySymbols(value).reduce((acc, key) => ({ ...acc, [key]: Visit(value[key]) }), {});\n        return { ...clonedProperties, ...clonedSymbols };\n    }\n    function Visit(value) {\n        // prettier-ignore\n        return (ValueGuard.IsArray(value) ? ArrayType(value) :\n            ValueGuard.IsDate(value) ? DateType(value) :\n                ValueGuard.IsUint8Array(value) ? Uint8ArrayType(value) :\n                    ValueGuard.IsObject(value) ? ObjectType(value) :\n                        value);\n    }\n    /** Clones a Rest */\n    function Rest(schemas) {\n        return schemas.map((schema) => Type(schema));\n    }\n    TypeClone.Rest = Rest;\n    /** Clones a Type */\n    function Type(schema, options = {}) {\n        return { ...Visit(schema), ...options };\n    }\n    TypeClone.Type = Type;\n})(TypeClone || (exports.TypeClone = TypeClone = {}));\n// --------------------------------------------------------------------------\n// IndexedAccessor\n// --------------------------------------------------------------------------\nvar IndexedAccessor;\n(function (IndexedAccessor) {\n    function OptionalUnwrap(schema) {\n        return schema.map((schema) => {\n            const { [exports.Optional]: _, ...clone } = TypeClone.Type(schema);\n            return clone;\n        });\n    }\n    function IsIntersectOptional(schema) {\n        return schema.every((schema) => TypeGuard.TOptional(schema));\n    }\n    function IsUnionOptional(schema) {\n        return schema.some((schema) => TypeGuard.TOptional(schema));\n    }\n    function ResolveIntersect(schema) {\n        return IsIntersectOptional(schema.allOf) ? exports.Type.Optional(exports.Type.Intersect(OptionalUnwrap(schema.allOf))) : schema;\n    }\n    function ResolveUnion(schema) {\n        return IsUnionOptional(schema.anyOf) ? exports.Type.Optional(exports.Type.Union(OptionalUnwrap(schema.anyOf))) : schema;\n    }\n    function ResolveOptional(schema) {\n        // prettier-ignore\n        return schema[exports.Kind] === 'Intersect' ? ResolveIntersect(schema) :\n            schema[exports.Kind] === 'Union' ? ResolveUnion(schema) :\n                schema;\n    }\n    function TIntersect(schema, key) {\n        const resolved = schema.allOf.reduce((acc, schema) => {\n            const indexed = Visit(schema, key);\n            return indexed[exports.Kind] === 'Never' ? acc : [...acc, indexed];\n        }, []);\n        return ResolveOptional(exports.Type.Intersect(resolved));\n    }\n    function TUnion(schema, key) {\n        const resolved = schema.anyOf.map((schema) => Visit(schema, key));\n        return ResolveOptional(exports.Type.Union(resolved));\n    }\n    function TObject(schema, key) {\n        const property = schema.properties[key];\n        return ValueGuard.IsUndefined(property) ? exports.Type.Never() : exports.Type.Union([property]);\n    }\n    function TTuple(schema, key) {\n        const items = schema.items;\n        if (ValueGuard.IsUndefined(items))\n            return exports.Type.Never();\n        const element = items[key]; //\n        if (ValueGuard.IsUndefined(element))\n            return exports.Type.Never();\n        return element;\n    }\n    function Visit(schema, key) {\n        // prettier-ignore\n        return schema[exports.Kind] === 'Intersect' ? TIntersect(schema, key) :\n            schema[exports.Kind] === 'Union' ? TUnion(schema, key) :\n                schema[exports.Kind] === 'Object' ? TObject(schema, key) :\n                    schema[exports.Kind] === 'Tuple' ? TTuple(schema, key) :\n                        exports.Type.Never();\n    }\n    function Resolve(schema, keys, options = {}) {\n        const resolved = keys.map((key) => Visit(schema, key.toString()));\n        return ResolveOptional(exports.Type.Union(resolved, options));\n    }\n    IndexedAccessor.Resolve = Resolve;\n})(IndexedAccessor || (exports.IndexedAccessor = IndexedAccessor = {}));\n// --------------------------------------------------------------------------\n// Intrinsic\n// --------------------------------------------------------------------------\nvar Intrinsic;\n(function (Intrinsic) {\n    function Uncapitalize(value) {\n        const [first, rest] = [value.slice(0, 1), value.slice(1)];\n        return `${first.toLowerCase()}${rest}`;\n    }\n    function Capitalize(value) {\n        const [first, rest] = [value.slice(0, 1), value.slice(1)];\n        return `${first.toUpperCase()}${rest}`;\n    }\n    function Uppercase(value) {\n        return value.toUpperCase();\n    }\n    function Lowercase(value) {\n        return value.toLowerCase();\n    }\n    function IntrinsicTemplateLiteral(schema, mode) {\n        // note: template literals require special runtime handling as they are encoded in string patterns.\n        // This diverges from the mapped type which would otherwise map on the template literal kind.\n        const expression = TemplateLiteralParser.ParseExact(schema.pattern);\n        const finite = TemplateLiteralFinite.Check(expression);\n        if (!finite)\n            return { ...schema, pattern: IntrinsicLiteral(schema.pattern, mode) };\n        const strings = [...TemplateLiteralGenerator.Generate(expression)];\n        const literals = strings.map((value) => exports.Type.Literal(value));\n        const mapped = IntrinsicRest(literals, mode);\n        const union = exports.Type.Union(mapped);\n        return exports.Type.TemplateLiteral([union]);\n    }\n    function IntrinsicLiteral(value, mode) {\n        // prettier-ignore\n        return typeof value === 'string' ? (mode === 'Uncapitalize' ? Uncapitalize(value) :\n            mode === 'Capitalize' ? Capitalize(value) :\n                mode === 'Uppercase' ? Uppercase(value) :\n                    mode === 'Lowercase' ? Lowercase(value) :\n                        value) : value.toString();\n    }\n    function IntrinsicRest(schema, mode) {\n        if (schema.length === 0)\n            return [];\n        const [L, ...R] = schema;\n        return [Map(L, mode), ...IntrinsicRest(R, mode)];\n    }\n    function Visit(schema, mode) {\n        // prettier-ignore\n        return TypeGuard.TTemplateLiteral(schema) ? IntrinsicTemplateLiteral(schema, mode) :\n            TypeGuard.TUnion(schema) ? exports.Type.Union(IntrinsicRest(schema.anyOf, mode)) :\n                TypeGuard.TLiteral(schema) ? exports.Type.Literal(IntrinsicLiteral(schema.const, mode)) :\n                    schema;\n    }\n    /** Applies an intrinsic string manipulation to the given type. */\n    function Map(schema, mode) {\n        return Visit(schema, mode);\n    }\n    Intrinsic.Map = Map;\n})(Intrinsic || (exports.Intrinsic = Intrinsic = {}));\n// --------------------------------------------------------------------------\n// ObjectMap\n// --------------------------------------------------------------------------\nvar ObjectMap;\n(function (ObjectMap) {\n    function TIntersect(schema, callback) {\n        // prettier-ignore\n        return exports.Type.Intersect(schema.allOf.map((inner) => Visit(inner, callback)), { ...schema });\n    }\n    function TUnion(schema, callback) {\n        // prettier-ignore\n        return exports.Type.Union(schema.anyOf.map((inner) => Visit(inner, callback)), { ...schema });\n    }\n    function TObject(schema, callback) {\n        return callback(schema);\n    }\n    function Visit(schema, callback) {\n        // There are cases where users need to map objects with unregistered kinds. Using a TypeGuard here would\n        // prevent sub schema mapping as unregistered kinds will not pass TSchema checks. This is notable in the\n        // case of TObject where unregistered property kinds cause the TObject check to fail. As mapping is only\n        // used for composition, we use explicit checks instead.\n        // prettier-ignore\n        return (schema[exports.Kind] === 'Intersect' ? TIntersect(schema, callback) :\n            schema[exports.Kind] === 'Union' ? TUnion(schema, callback) :\n                schema[exports.Kind] === 'Object' ? TObject(schema, callback) :\n                    schema);\n    }\n    function Map(schema, callback, options) {\n        return { ...Visit(TypeClone.Type(schema), callback), ...options };\n    }\n    ObjectMap.Map = Map;\n})(ObjectMap || (exports.ObjectMap = ObjectMap = {}));\nvar KeyResolver;\n(function (KeyResolver) {\n    function UnwrapPattern(key) {\n        return key[0] === '^' && key[key.length - 1] === '$' ? key.slice(1, key.length - 1) : key;\n    }\n    function TIntersect(schema, options) {\n        return schema.allOf.reduce((acc, schema) => [...acc, ...Visit(schema, options)], []);\n    }\n    function TUnion(schema, options) {\n        const sets = schema.anyOf.map((inner) => Visit(inner, options));\n        return [...sets.reduce((set, outer) => outer.map((key) => (sets.every((inner) => inner.includes(key)) ? set.add(key) : set))[0], new Set())];\n    }\n    function TObject(schema, options) {\n        return Object.getOwnPropertyNames(schema.properties);\n    }\n    function TRecord(schema, options) {\n        return options.includePatterns ? Object.getOwnPropertyNames(schema.patternProperties) : [];\n    }\n    function Visit(schema, options) {\n        // prettier-ignore\n        return (TypeGuard.TIntersect(schema) ? TIntersect(schema, options) :\n            TypeGuard.TUnion(schema) ? TUnion(schema, options) :\n                TypeGuard.TObject(schema) ? TObject(schema, options) :\n                    TypeGuard.TRecord(schema) ? TRecord(schema, options) :\n                        []);\n    }\n    /** Resolves an array of keys in this schema */\n    function ResolveKeys(schema, options) {\n        return [...new Set(Visit(schema, options))];\n    }\n    KeyResolver.ResolveKeys = ResolveKeys;\n    /** Resolves a regular expression pattern matching all keys in this schema */\n    function ResolvePattern(schema) {\n        const keys = ResolveKeys(schema, { includePatterns: true });\n        const pattern = keys.map((key) => `(${UnwrapPattern(key)})`);\n        return `^(${pattern.join('|')})$`;\n    }\n    KeyResolver.ResolvePattern = ResolvePattern;\n})(KeyResolver || (exports.KeyResolver = KeyResolver = {}));\n// --------------------------------------------------------------------------\n// KeyArrayResolver\n// --------------------------------------------------------------------------\nclass KeyArrayResolverError extends TypeBoxError {\n}\nexports.KeyArrayResolverError = KeyArrayResolverError;\nvar KeyArrayResolver;\n(function (KeyArrayResolver) {\n    /** Resolves an array of string[] keys from the given schema or array type. */\n    function Resolve(schema) {\n        // prettier-ignore\n        return Array.isArray(schema) ? schema :\n            TypeGuard.TUnionLiteral(schema) ? schema.anyOf.map((schema) => schema.const.toString()) :\n                TypeGuard.TLiteral(schema) ? [schema.const] :\n                    TypeGuard.TTemplateLiteral(schema) ? (() => {\n                        const expression = TemplateLiteralParser.ParseExact(schema.pattern);\n                        if (!TemplateLiteralFinite.Check(expression))\n                            throw new KeyArrayResolverError('Cannot resolve keys from infinite template expression');\n                        return [...TemplateLiteralGenerator.Generate(expression)];\n                    })() : [];\n    }\n    KeyArrayResolver.Resolve = Resolve;\n})(KeyArrayResolver || (exports.KeyArrayResolver = KeyArrayResolver = {}));\n// --------------------------------------------------------------------------\n// UnionResolver\n// --------------------------------------------------------------------------\nvar UnionResolver;\n(function (UnionResolver) {\n    function* TUnion(union) {\n        for (const schema of union.anyOf) {\n            if (schema[exports.Kind] === 'Union') {\n                yield* TUnion(schema);\n            }\n            else {\n                yield schema;\n            }\n        }\n    }\n    /** Returns a resolved union with interior unions flattened */\n    function Resolve(union) {\n        return exports.Type.Union([...TUnion(union)], { ...union });\n    }\n    UnionResolver.Resolve = Resolve;\n})(UnionResolver || (exports.UnionResolver = UnionResolver = {}));\n// --------------------------------------------------------------------------\n// TemplateLiteralPattern\n// --------------------------------------------------------------------------\nclass TemplateLiteralPatternError extends TypeBoxError {\n}\nexports.TemplateLiteralPatternError = TemplateLiteralPatternError;\nvar TemplateLiteralPattern;\n(function (TemplateLiteralPattern) {\n    function Throw(message) {\n        throw new TemplateLiteralPatternError(message);\n    }\n    function Escape(value) {\n        return value.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n    }\n    function Visit(schema, acc) {\n        // prettier-ignore\n        return (TypeGuard.TTemplateLiteral(schema) ? schema.pattern.slice(1, schema.pattern.length - 1) :\n            TypeGuard.TUnion(schema) ? `(${schema.anyOf.map((schema) => Visit(schema, acc)).join('|')})` :\n                TypeGuard.TNumber(schema) ? `${acc}${exports.PatternNumber}` :\n                    TypeGuard.TInteger(schema) ? `${acc}${exports.PatternNumber}` :\n                        TypeGuard.TBigInt(schema) ? `${acc}${exports.PatternNumber}` :\n                            TypeGuard.TString(schema) ? `${acc}${exports.PatternString}` :\n                                TypeGuard.TLiteral(schema) ? `${acc}${Escape(schema.const.toString())}` :\n                                    TypeGuard.TBoolean(schema) ? `${acc}${exports.PatternBoolean}` :\n                                        Throw(`Unexpected Kind '${schema[exports.Kind]}'`));\n    }\n    function Create(kinds) {\n        return `^${kinds.map((schema) => Visit(schema, '')).join('')}\\$`;\n    }\n    TemplateLiteralPattern.Create = Create;\n})(TemplateLiteralPattern || (exports.TemplateLiteralPattern = TemplateLiteralPattern = {}));\n// --------------------------------------------------------------------------------------\n// TemplateLiteralResolver\n// --------------------------------------------------------------------------------------\nvar TemplateLiteralResolver;\n(function (TemplateLiteralResolver) {\n    /** Resolves a template literal as a TUnion */\n    function Resolve(template) {\n        const expression = TemplateLiteralParser.ParseExact(template.pattern);\n        if (!TemplateLiteralFinite.Check(expression))\n            return exports.Type.String();\n        const literals = [...TemplateLiteralGenerator.Generate(expression)].map((value) => exports.Type.Literal(value));\n        return exports.Type.Union(literals);\n    }\n    TemplateLiteralResolver.Resolve = Resolve;\n})(TemplateLiteralResolver || (exports.TemplateLiteralResolver = TemplateLiteralResolver = {}));\n// --------------------------------------------------------------------------------------\n// TemplateLiteralParser\n// --------------------------------------------------------------------------------------\nclass TemplateLiteralParserError extends TypeBoxError {\n}\nexports.TemplateLiteralParserError = TemplateLiteralParserError;\nvar TemplateLiteralParser;\n(function (TemplateLiteralParser) {\n    function IsNonEscaped(pattern, index, char) {\n        return pattern[index] === char && pattern.charCodeAt(index - 1) !== 92;\n    }\n    function IsOpenParen(pattern, index) {\n        return IsNonEscaped(pattern, index, '(');\n    }\n    function IsCloseParen(pattern, index) {\n        return IsNonEscaped(pattern, index, ')');\n    }\n    function IsSeparator(pattern, index) {\n        return IsNonEscaped(pattern, index, '|');\n    }\n    function IsGroup(pattern) {\n        if (!(IsOpenParen(pattern, 0) && IsCloseParen(pattern, pattern.length - 1)))\n            return false;\n        let count = 0;\n        for (let index = 0; index < pattern.length; index++) {\n            if (IsOpenParen(pattern, index))\n                count += 1;\n            if (IsCloseParen(pattern, index))\n                count -= 1;\n            if (count === 0 && index !== pattern.length - 1)\n                return false;\n        }\n        return true;\n    }\n    function InGroup(pattern) {\n        return pattern.slice(1, pattern.length - 1);\n    }\n    function IsPrecedenceOr(pattern) {\n        let count = 0;\n        for (let index = 0; index < pattern.length; index++) {\n            if (IsOpenParen(pattern, index))\n                count += 1;\n            if (IsCloseParen(pattern, index))\n                count -= 1;\n            if (IsSeparator(pattern, index) && count === 0)\n                return true;\n        }\n        return false;\n    }\n    function IsPrecedenceAnd(pattern) {\n        for (let index = 0; index < pattern.length; index++) {\n            if (IsOpenParen(pattern, index))\n                return true;\n        }\n        return false;\n    }\n    function Or(pattern) {\n        let [count, start] = [0, 0];\n        const expressions = [];\n        for (let index = 0; index < pattern.length; index++) {\n            if (IsOpenParen(pattern, index))\n                count += 1;\n            if (IsCloseParen(pattern, index))\n                count -= 1;\n            if (IsSeparator(pattern, index) && count === 0) {\n                const range = pattern.slice(start, index);\n                if (range.length > 0)\n                    expressions.push(Parse(range));\n                start = index + 1;\n            }\n        }\n        const range = pattern.slice(start);\n        if (range.length > 0)\n            expressions.push(Parse(range));\n        if (expressions.length === 0)\n            return { type: 'const', const: '' };\n        if (expressions.length === 1)\n            return expressions[0];\n        return { type: 'or', expr: expressions };\n    }\n    function And(pattern) {\n        function Group(value, index) {\n            if (!IsOpenParen(value, index))\n                throw new TemplateLiteralParserError(`TemplateLiteralParser: Index must point to open parens`);\n            let count = 0;\n            for (let scan = index; scan < value.length; scan++) {\n                if (IsOpenParen(value, scan))\n                    count += 1;\n                if (IsCloseParen(value, scan))\n                    count -= 1;\n                if (count === 0)\n                    return [index, scan];\n            }\n            throw new TemplateLiteralParserError(`TemplateLiteralParser: Unclosed group parens in expression`);\n        }\n        function Range(pattern, index) {\n            for (let scan = index; scan < pattern.length; scan++) {\n                if (IsOpenParen(pattern, scan))\n                    return [index, scan];\n            }\n            return [index, pattern.length];\n        }\n        const expressions = [];\n        for (let index = 0; index < pattern.length; index++) {\n            if (IsOpenParen(pattern, index)) {\n                const [start, end] = Group(pattern, index);\n                const range = pattern.slice(start, end + 1);\n                expressions.push(Parse(range));\n                index = end;\n            }\n            else {\n                const [start, end] = Range(pattern, index);\n                const range = pattern.slice(start, end);\n                if (range.length > 0)\n                    expressions.push(Parse(range));\n                index = end - 1;\n            }\n        }\n        // prettier-ignore\n        return (expressions.length === 0) ? { type: 'const', const: '' } :\n            (expressions.length === 1) ? expressions[0] :\n                { type: 'and', expr: expressions };\n    }\n    /** Parses a pattern and returns an expression tree */\n    function Parse(pattern) {\n        // prettier-ignore\n        return IsGroup(pattern) ? Parse(InGroup(pattern)) :\n            IsPrecedenceOr(pattern) ? Or(pattern) :\n                IsPrecedenceAnd(pattern) ? And(pattern) :\n                    { type: 'const', const: pattern };\n    }\n    TemplateLiteralParser.Parse = Parse;\n    /** Parses a pattern and strips forward and trailing ^ and $ */\n    function ParseExact(pattern) {\n        return Parse(pattern.slice(1, pattern.length - 1));\n    }\n    TemplateLiteralParser.ParseExact = ParseExact;\n})(TemplateLiteralParser || (exports.TemplateLiteralParser = TemplateLiteralParser = {}));\n// --------------------------------------------------------------------------------------\n// TemplateLiteralFinite\n// --------------------------------------------------------------------------------------\nclass TemplateLiteralFiniteError extends TypeBoxError {\n}\nexports.TemplateLiteralFiniteError = TemplateLiteralFiniteError;\nvar TemplateLiteralFinite;\n(function (TemplateLiteralFinite) {\n    function Throw(message) {\n        throw new TemplateLiteralFiniteError(message);\n    }\n    function IsNumber(expression) {\n        // prettier-ignore\n        return (expression.type === 'or' &&\n            expression.expr.length === 2 &&\n            expression.expr[0].type === 'const' &&\n            expression.expr[0].const === '0' &&\n            expression.expr[1].type === 'const' &&\n            expression.expr[1].const === '[1-9][0-9]*');\n    }\n    function IsBoolean(expression) {\n        // prettier-ignore\n        return (expression.type === 'or' &&\n            expression.expr.length === 2 &&\n            expression.expr[0].type === 'const' &&\n            expression.expr[0].const === 'true' &&\n            expression.expr[1].type === 'const' &&\n            expression.expr[1].const === 'false');\n    }\n    function IsString(expression) {\n        return expression.type === 'const' && expression.const === '.*';\n    }\n    function Check(expression) {\n        // prettier-ignore\n        return IsBoolean(expression) ? true :\n            IsNumber(expression) || IsString(expression) ? false :\n                (expression.type === 'and') ? expression.expr.every((expr) => Check(expr)) :\n                    (expression.type === 'or') ? expression.expr.every((expr) => Check(expr)) :\n                        (expression.type === 'const') ? true :\n                            Throw(`Unknown expression type`);\n    }\n    TemplateLiteralFinite.Check = Check;\n})(TemplateLiteralFinite || (exports.TemplateLiteralFinite = TemplateLiteralFinite = {}));\n// --------------------------------------------------------------------------------------\n// TemplateLiteralGenerator\n// --------------------------------------------------------------------------------------\nclass TemplateLiteralGeneratorError extends TypeBoxError {\n}\nexports.TemplateLiteralGeneratorError = TemplateLiteralGeneratorError;\nvar TemplateLiteralGenerator;\n(function (TemplateLiteralGenerator) {\n    function* Reduce(buffer) {\n        if (buffer.length === 1)\n            return yield* buffer[0];\n        for (const left of buffer[0]) {\n            for (const right of Reduce(buffer.slice(1))) {\n                yield `${left}${right}`;\n            }\n        }\n    }\n    function* And(expression) {\n        return yield* Reduce(expression.expr.map((expr) => [...Generate(expr)]));\n    }\n    function* Or(expression) {\n        for (const expr of expression.expr)\n            yield* Generate(expr);\n    }\n    function* Const(expression) {\n        return yield expression.const;\n    }\n    function* Generate(expression) {\n        // prettier-ignore\n        return (expression.type === 'and' ? yield* And(expression) :\n            expression.type === 'or' ? yield* Or(expression) :\n                expression.type === 'const' ? yield* Const(expression) :\n                    (() => { throw new TemplateLiteralGeneratorError('Unknown expression'); })());\n    }\n    TemplateLiteralGenerator.Generate = Generate;\n})(TemplateLiteralGenerator || (exports.TemplateLiteralGenerator = TemplateLiteralGenerator = {}));\n// ---------------------------------------------------------------------\n// TemplateLiteralDslParser\n// ---------------------------------------------------------------------\nvar TemplateLiteralDslParser;\n(function (TemplateLiteralDslParser) {\n    function* ParseUnion(template) {\n        const trim = template.trim().replace(/\"|'/g, '');\n        // prettier-ignore\n        return (trim === 'boolean' ? yield exports.Type.Boolean() :\n            trim === 'number' ? yield exports.Type.Number() :\n                trim === 'bigint' ? yield exports.Type.BigInt() :\n                    trim === 'string' ? yield exports.Type.String() :\n                        yield (() => {\n                            const literals = trim.split('|').map((literal) => exports.Type.Literal(literal.trim()));\n                            return (literals.length === 0 ? exports.Type.Never() :\n                                literals.length === 1 ? literals[0] :\n                                    exports.Type.Union(literals));\n                        })());\n    }\n    function* ParseTerminal(template) {\n        if (template[1] !== '{') {\n            const L = exports.Type.Literal('$');\n            const R = ParseLiteral(template.slice(1));\n            return yield* [L, ...R];\n        }\n        for (let i = 2; i < template.length; i++) {\n            if (template[i] === '}') {\n                const L = ParseUnion(template.slice(2, i));\n                const R = ParseLiteral(template.slice(i + 1));\n                return yield* [...L, ...R];\n            }\n        }\n        yield exports.Type.Literal(template);\n    }\n    function* ParseLiteral(template) {\n        for (let i = 0; i < template.length; i++) {\n            if (template[i] === '$') {\n                const L = exports.Type.Literal(template.slice(0, i));\n                const R = ParseTerminal(template.slice(i));\n                return yield* [L, ...R];\n            }\n        }\n        yield exports.Type.Literal(template);\n    }\n    function Parse(template_dsl) {\n        return [...ParseLiteral(template_dsl)];\n    }\n    TemplateLiteralDslParser.Parse = Parse;\n})(TemplateLiteralDslParser || (exports.TemplateLiteralDslParser = TemplateLiteralDslParser = {}));\n// ---------------------------------------------------------------------\n// TransformBuilder\n// ---------------------------------------------------------------------\nclass TransformDecodeBuilder {\n    constructor(schema) {\n        this.schema = schema;\n    }\n    Decode(decode) {\n        return new TransformEncodeBuilder(this.schema, decode);\n    }\n}\nexports.TransformDecodeBuilder = TransformDecodeBuilder;\nclass TransformEncodeBuilder {\n    constructor(schema, decode) {\n        this.schema = schema;\n        this.decode = decode;\n    }\n    Encode(encode) {\n        const schema = TypeClone.Type(this.schema);\n        // prettier-ignore\n        return (TypeGuard.TTransform(schema) ? (() => {\n            const Encode = (value) => schema[exports.Transform].Encode(encode(value));\n            const Decode = (value) => this.decode(schema[exports.Transform].Decode(value));\n            const Codec = { Encode: Encode, Decode: Decode };\n            return { ...schema, [exports.Transform]: Codec };\n        })() : (() => {\n            const Codec = { Decode: this.decode, Encode: encode };\n            return { ...schema, [exports.Transform]: Codec };\n        })());\n    }\n}\nexports.TransformEncodeBuilder = TransformEncodeBuilder;\n// --------------------------------------------------------------------------\n// TypeOrdinal: Used for auto $id generation\n// --------------------------------------------------------------------------\nlet TypeOrdinal = 0;\n// --------------------------------------------------------------------------\n// TypeBuilder\n// --------------------------------------------------------------------------\nclass TypeBuilderError extends TypeBoxError {\n}\nexports.TypeBuilderError = TypeBuilderError;\nclass TypeBuilder {\n    /** `[Internal]` Creates a schema without `static` and `params` types */\n    Create(schema) {\n        return schema;\n    }\n    /** `[Internal]` Throws a TypeBuilder error with the given message */\n    Throw(message) {\n        throw new TypeBuilderError(message);\n    }\n    /** `[Internal]` Discards property keys from the given record type */\n    Discard(record, keys) {\n        return keys.reduce((acc, key) => {\n            const { [key]: _, ...rest } = acc;\n            return rest;\n        }, record);\n    }\n    /** `[Json]` Omits compositing symbols from this schema */\n    Strict(schema) {\n        return JSON.parse(JSON.stringify(schema));\n    }\n}\nexports.TypeBuilder = TypeBuilder;\n// --------------------------------------------------------------------------\n// JsonTypeBuilder\n// --------------------------------------------------------------------------\nclass JsonTypeBuilder extends TypeBuilder {\n    // ------------------------------------------------------------------------\n    // Modifiers\n    // ------------------------------------------------------------------------\n    /** `[Json]` Creates a Readonly and Optional property */\n    ReadonlyOptional(schema) {\n        return this.Readonly(this.Optional(schema));\n    }\n    /** `[Json]` Creates a Readonly property */\n    Readonly(schema) {\n        return { ...TypeClone.Type(schema), [exports.Readonly]: 'Readonly' };\n    }\n    /** `[Json]` Creates an Optional property */\n    Optional(schema) {\n        return { ...TypeClone.Type(schema), [exports.Optional]: 'Optional' };\n    }\n    // ------------------------------------------------------------------------\n    // Types\n    // ------------------------------------------------------------------------\n    /** `[Json]` Creates an Any type */\n    Any(options = {}) {\n        return this.Create({ ...options, [exports.Kind]: 'Any' });\n    }\n    /** `[Json]` Creates an Array type */\n    Array(schema, options = {}) {\n        return this.Create({ ...options, [exports.Kind]: 'Array', type: 'array', items: TypeClone.Type(schema) });\n    }\n    /** `[Json]` Creates a Boolean type */\n    Boolean(options = {}) {\n        return this.Create({ ...options, [exports.Kind]: 'Boolean', type: 'boolean' });\n    }\n    /** `[Json]` Intrinsic function to Capitalize LiteralString types */\n    Capitalize(schema, options = {}) {\n        return { ...Intrinsic.Map(TypeClone.Type(schema), 'Capitalize'), ...options };\n    }\n    /** `[Json]` Creates a Composite object type */\n    Composite(objects, options) {\n        const intersect = exports.Type.Intersect(objects, {});\n        const keys = KeyResolver.ResolveKeys(intersect, { includePatterns: false });\n        const properties = keys.reduce((acc, key) => ({ ...acc, [key]: exports.Type.Index(intersect, [key]) }), {});\n        return exports.Type.Object(properties, options);\n    }\n    /** `[Json]` Creates a Enum type */\n    Enum(item, options = {}) {\n        if (ValueGuard.IsUndefined(item))\n            return this.Throw('Enum undefined or empty');\n        // prettier-ignore\n        const values1 = Object.getOwnPropertyNames(item).filter((key) => isNaN(key)).map((key) => item[key]);\n        const values2 = [...new Set(values1)];\n        const anyOf = values2.map((value) => exports.Type.Literal(value));\n        return this.Union(anyOf, { ...options, [exports.Hint]: 'Enum' });\n    }\n    /** `[Json]` Creates a Conditional type */\n    Extends(left, right, trueType, falseType, options = {}) {\n        switch (TypeExtends.Extends(left, right)) {\n            case TypeExtendsResult.Union:\n                return this.Union([TypeClone.Type(trueType, options), TypeClone.Type(falseType, options)]);\n            case TypeExtendsResult.True:\n                return TypeClone.Type(trueType, options);\n            case TypeExtendsResult.False:\n                return TypeClone.Type(falseType, options);\n        }\n    }\n    /** `[Json]` Constructs a type by excluding from unionType all union members that are assignable to excludedMembers */\n    Exclude(unionType, excludedMembers, options = {}) {\n        // prettier-ignore\n        return (TypeGuard.TTemplateLiteral(unionType) ? this.Exclude(TemplateLiteralResolver.Resolve(unionType), excludedMembers, options) :\n            TypeGuard.TTemplateLiteral(excludedMembers) ? this.Exclude(unionType, TemplateLiteralResolver.Resolve(excludedMembers), options) :\n                TypeGuard.TUnion(unionType) ? (() => {\n                    const narrowed = unionType.anyOf.filter((inner) => TypeExtends.Extends(inner, excludedMembers) === TypeExtendsResult.False);\n                    return (narrowed.length === 1 ? TypeClone.Type(narrowed[0], options) : this.Union(narrowed, options));\n                })() :\n                    TypeExtends.Extends(unionType, excludedMembers) !== TypeExtendsResult.False ? this.Never(options) :\n                        TypeClone.Type(unionType, options));\n    }\n    /** `[Json]` Constructs a type by extracting from type all union members that are assignable to union */\n    Extract(type, union, options = {}) {\n        // prettier-ignore\n        return (TypeGuard.TTemplateLiteral(type) ? this.Extract(TemplateLiteralResolver.Resolve(type), union, options) :\n            TypeGuard.TTemplateLiteral(union) ? this.Extract(type, TemplateLiteralResolver.Resolve(union), options) :\n                TypeGuard.TUnion(type) ? (() => {\n                    const narrowed = type.anyOf.filter((inner) => TypeExtends.Extends(inner, union) !== TypeExtendsResult.False);\n                    return (narrowed.length === 1 ? TypeClone.Type(narrowed[0], options) : this.Union(narrowed, options));\n                })() :\n                    TypeExtends.Extends(type, union) !== TypeExtendsResult.False ? TypeClone.Type(type, options) :\n                        this.Never(options));\n    }\n    /** `[Json]` Returns an Indexed property type for the given keys */\n    Index(schema, unresolved, options = {}) {\n        // prettier-ignore\n        return (TypeGuard.TArray(schema) && TypeGuard.TNumber(unresolved) ? (() => {\n            return TypeClone.Type(schema.items, options);\n        })() :\n            TypeGuard.TTuple(schema) && TypeGuard.TNumber(unresolved) ? (() => {\n                const items = ValueGuard.IsUndefined(schema.items) ? [] : schema.items;\n                const cloned = items.map((schema) => TypeClone.Type(schema));\n                return this.Union(cloned, options);\n            })() : (() => {\n                const keys = KeyArrayResolver.Resolve(unresolved);\n                const clone = TypeClone.Type(schema);\n                return IndexedAccessor.Resolve(clone, keys, options);\n            })());\n    }\n    /** `[Json]` Creates an Integer type */\n    Integer(options = {}) {\n        return this.Create({ ...options, [exports.Kind]: 'Integer', type: 'integer' });\n    }\n    /** `[Json]` Creates an Intersect type */\n    Intersect(allOf, options = {}) {\n        if (allOf.length === 0)\n            return exports.Type.Never();\n        if (allOf.length === 1)\n            return TypeClone.Type(allOf[0], options);\n        if (allOf.some((schema) => TypeGuard.TTransform(schema)))\n            this.Throw('Cannot intersect transform types');\n        const objects = allOf.every((schema) => TypeGuard.TObject(schema));\n        const cloned = TypeClone.Rest(allOf);\n        // prettier-ignore\n        const clonedUnevaluatedProperties = TypeGuard.TSchema(options.unevaluatedProperties)\n            ? { unevaluatedProperties: TypeClone.Type(options.unevaluatedProperties) }\n            : {};\n        return options.unevaluatedProperties === false || TypeGuard.TSchema(options.unevaluatedProperties) || objects\n            ? this.Create({ ...options, ...clonedUnevaluatedProperties, [exports.Kind]: 'Intersect', type: 'object', allOf: cloned })\n            : this.Create({ ...options, ...clonedUnevaluatedProperties, [exports.Kind]: 'Intersect', allOf: cloned });\n    }\n    /** `[Json]` Creates a KeyOf type */\n    KeyOf(schema, options = {}) {\n        // prettier-ignore\n        return (TypeGuard.TRecord(schema) ? (() => {\n            const pattern = Object.getOwnPropertyNames(schema.patternProperties)[0];\n            return (pattern === exports.PatternNumberExact ? this.Number(options) :\n                pattern === exports.PatternStringExact ? this.String(options) :\n                    this.Throw('Unable to resolve key type from Record key pattern'));\n        })() :\n            TypeGuard.TTuple(schema) ? (() => {\n                const items = ValueGuard.IsUndefined(schema.items) ? [] : schema.items;\n                const literals = items.map((_, index) => exports.Type.Literal(index.toString()));\n                return this.Union(literals, options);\n            })() :\n                TypeGuard.TArray(schema) ? (() => {\n                    return this.Number(options);\n                })() : (() => {\n                    const keys = KeyResolver.ResolveKeys(schema, { includePatterns: false });\n                    if (keys.length === 0)\n                        return this.Never(options);\n                    const literals = keys.map((key) => this.Literal(key));\n                    return this.Union(literals, options);\n                })());\n    }\n    /** `[Json]` Creates a Literal type */\n    Literal(value, options = {}) {\n        return this.Create({ ...options, [exports.Kind]: 'Literal', const: value, type: typeof value });\n    }\n    /** `[Json]` Intrinsic function to Lowercase LiteralString types */\n    Lowercase(schema, options = {}) {\n        return { ...Intrinsic.Map(TypeClone.Type(schema), 'Lowercase'), ...options };\n    }\n    /** `[Json]` Creates a Never type */\n    Never(options = {}) {\n        return this.Create({ ...options, [exports.Kind]: 'Never', not: {} });\n    }\n    /** `[Json]` Creates a Not type */\n    Not(schema, options) {\n        return this.Create({ ...options, [exports.Kind]: 'Not', not: TypeClone.Type(schema) });\n    }\n    /** `[Json]` Creates a Null type */\n    Null(options = {}) {\n        return this.Create({ ...options, [exports.Kind]: 'Null', type: 'null' });\n    }\n    /** `[Json]` Creates a Number type */\n    Number(options = {}) {\n        return this.Create({ ...options, [exports.Kind]: 'Number', type: 'number' });\n    }\n    /** `[Json]` Creates an Object type */\n    Object(properties, options = {}) {\n        const propertyKeys = Object.getOwnPropertyNames(properties);\n        const optionalKeys = propertyKeys.filter((key) => TypeGuard.TOptional(properties[key]));\n        const requiredKeys = propertyKeys.filter((name) => !optionalKeys.includes(name));\n        const clonedAdditionalProperties = TypeGuard.TSchema(options.additionalProperties) ? { additionalProperties: TypeClone.Type(options.additionalProperties) } : {};\n        const clonedProperties = propertyKeys.reduce((acc, key) => ({ ...acc, [key]: TypeClone.Type(properties[key]) }), {});\n        return requiredKeys.length > 0\n            ? this.Create({ ...options, ...clonedAdditionalProperties, [exports.Kind]: 'Object', type: 'object', properties: clonedProperties, required: requiredKeys })\n            : this.Create({ ...options, ...clonedAdditionalProperties, [exports.Kind]: 'Object', type: 'object', properties: clonedProperties });\n    }\n    /** `[Json]` Constructs a type whose keys are omitted from the given type */\n    Omit(schema, unresolved, options = {}) {\n        const keys = KeyArrayResolver.Resolve(unresolved);\n        // prettier-ignore\n        return ObjectMap.Map(this.Discard(TypeClone.Type(schema), ['$id', exports.Transform]), (object) => {\n            if (ValueGuard.IsArray(object.required)) {\n                object.required = object.required.filter((key) => !keys.includes(key));\n                if (object.required.length === 0)\n                    delete object.required;\n            }\n            for (const key of Object.getOwnPropertyNames(object.properties)) {\n                if (keys.includes(key))\n                    delete object.properties[key];\n            }\n            return this.Create(object);\n        }, options);\n    }\n    /** `[Json]` Constructs a type where all properties are optional */\n    Partial(schema, options = {}) {\n        // prettier-ignore\n        return ObjectMap.Map(this.Discard(TypeClone.Type(schema), ['$id', exports.Transform]), (object) => {\n            const properties = Object.getOwnPropertyNames(object.properties).reduce((acc, key) => {\n                return { ...acc, [key]: this.Optional(object.properties[key]) };\n            }, {});\n            return this.Object(properties, this.Discard(object, ['required']) /* object used as options to retain other constraints */);\n        }, options);\n    }\n    /** `[Json]` Constructs a type whose keys are picked from the given type */\n    Pick(schema, unresolved, options = {}) {\n        const keys = KeyArrayResolver.Resolve(unresolved);\n        // prettier-ignore\n        return ObjectMap.Map(this.Discard(TypeClone.Type(schema), ['$id', exports.Transform]), (object) => {\n            if (ValueGuard.IsArray(object.required)) {\n                object.required = object.required.filter((key) => keys.includes(key));\n                if (object.required.length === 0)\n                    delete object.required;\n            }\n            for (const key of Object.getOwnPropertyNames(object.properties)) {\n                if (!keys.includes(key))\n                    delete object.properties[key];\n            }\n            return this.Create(object);\n        }, options);\n    }\n    /** `[Json]` Creates a Record type */\n    Record(key, schema, options = {}) {\n        // prettier-ignore\n        return (TypeGuard.TTemplateLiteral(key) ? (() => {\n            const expression = TemplateLiteralParser.ParseExact(key.pattern);\n            // prettier-ignore\n            return TemplateLiteralFinite.Check(expression)\n                ? (this.Object([...TemplateLiteralGenerator.Generate(expression)].reduce((acc, key) => ({ ...acc, [key]: TypeClone.Type(schema) }), {}), options))\n                : this.Create({ ...options, [exports.Kind]: 'Record', type: 'object', patternProperties: { [key.pattern]: TypeClone.Type(schema) } });\n        })() :\n            TypeGuard.TUnion(key) ? (() => {\n                const union = UnionResolver.Resolve(key);\n                if (TypeGuard.TUnionLiteral(union)) {\n                    const properties = union.anyOf.reduce((acc, literal) => ({ ...acc, [literal.const]: TypeClone.Type(schema) }), {});\n                    return this.Object(properties, { ...options, [exports.Hint]: 'Record' });\n                }\n                else\n                    this.Throw('Record key of type union contains non-literal types');\n            })() :\n                TypeGuard.TLiteral(key) ? (() => {\n                    // prettier-ignore\n                    return (ValueGuard.IsString(key.const) || ValueGuard.IsNumber(key.const))\n                        ? this.Object({ [key.const]: TypeClone.Type(schema) }, options)\n                        : this.Throw('Record key of type literal is not of type string or number');\n                })() :\n                    TypeGuard.TInteger(key) || TypeGuard.TNumber(key) ? (() => {\n                        return this.Create({ ...options, [exports.Kind]: 'Record', type: 'object', patternProperties: { [exports.PatternNumberExact]: TypeClone.Type(schema) } });\n                    })() :\n                        TypeGuard.TString(key) ? (() => {\n                            const pattern = ValueGuard.IsUndefined(key.pattern) ? exports.PatternStringExact : key.pattern;\n                            return this.Create({ ...options, [exports.Kind]: 'Record', type: 'object', patternProperties: { [pattern]: TypeClone.Type(schema) } });\n                        })() :\n                            this.Never());\n    }\n    /** `[Json]` Creates a Recursive type */\n    Recursive(callback, options = {}) {\n        if (ValueGuard.IsUndefined(options.$id))\n            options.$id = `T${TypeOrdinal++}`;\n        const thisType = callback({ [exports.Kind]: 'This', $ref: `${options.$id}` });\n        thisType.$id = options.$id;\n        return this.Create({ ...options, [exports.Hint]: 'Recursive', ...thisType });\n    }\n    /** `[Json]` Creates a Ref type. */\n    Ref(unresolved, options = {}) {\n        if (ValueGuard.IsString(unresolved))\n            return this.Create({ ...options, [exports.Kind]: 'Ref', $ref: unresolved });\n        if (ValueGuard.IsUndefined(unresolved.$id))\n            this.Throw('Reference target type must specify an $id');\n        return this.Create({ ...options, [exports.Kind]: 'Ref', $ref: unresolved.$id });\n    }\n    /** `[Json]` Constructs a type where all properties are required */\n    Required(schema, options = {}) {\n        // prettier-ignore\n        return ObjectMap.Map(this.Discard(TypeClone.Type(schema), ['$id', exports.Transform]), (object) => {\n            const properties = Object.getOwnPropertyNames(object.properties).reduce((acc, key) => {\n                return { ...acc, [key]: this.Discard(object.properties[key], [exports.Optional]) };\n            }, {});\n            return this.Object(properties, object /* object used as options to retain other constraints  */);\n        }, options);\n    }\n    /** `[Json]` Extracts interior Rest elements from Tuple, Intersect and Union types */\n    Rest(schema) {\n        return (TypeGuard.TTuple(schema) && !ValueGuard.IsUndefined(schema.items) ? TypeClone.Rest(schema.items) : TypeGuard.TIntersect(schema) ? TypeClone.Rest(schema.allOf) : TypeGuard.TUnion(schema) ? TypeClone.Rest(schema.anyOf) : []);\n    }\n    /** `[Json]` Creates a String type */\n    String(options = {}) {\n        return this.Create({ ...options, [exports.Kind]: 'String', type: 'string' });\n    }\n    /** `[Json]` Creates a TemplateLiteral type */\n    TemplateLiteral(unresolved, options = {}) {\n        // prettier-ignore\n        const pattern = ValueGuard.IsString(unresolved)\n            ? TemplateLiteralPattern.Create(TemplateLiteralDslParser.Parse(unresolved))\n            : TemplateLiteralPattern.Create(unresolved);\n        return this.Create({ ...options, [exports.Kind]: 'TemplateLiteral', type: 'string', pattern });\n    }\n    /** `[Json]` Creates a Transform type */\n    Transform(schema) {\n        return new TransformDecodeBuilder(schema);\n    }\n    /** `[Json]` Creates a Tuple type */\n    Tuple(items, options = {}) {\n        const [additionalItems, minItems, maxItems] = [false, items.length, items.length];\n        const clonedItems = TypeClone.Rest(items);\n        // prettier-ignore\n        const schema = (items.length > 0 ?\n            { ...options, [exports.Kind]: 'Tuple', type: 'array', items: clonedItems, additionalItems, minItems, maxItems } :\n            { ...options, [exports.Kind]: 'Tuple', type: 'array', minItems, maxItems });\n        return this.Create(schema);\n    }\n    /** `[Json]` Intrinsic function to Uncapitalize LiteralString types */\n    Uncapitalize(schema, options = {}) {\n        return { ...Intrinsic.Map(TypeClone.Type(schema), 'Uncapitalize'), ...options };\n    }\n    /** `[Json]` Creates a Union type */\n    Union(union, options = {}) {\n        // prettier-ignore\n        return TypeGuard.TTemplateLiteral(union)\n            ? TemplateLiteralResolver.Resolve(union)\n            : (() => {\n                const anyOf = union;\n                if (anyOf.length === 0)\n                    return this.Never(options);\n                if (anyOf.length === 1)\n                    return this.Create(TypeClone.Type(anyOf[0], options));\n                const clonedAnyOf = TypeClone.Rest(anyOf);\n                return this.Create({ ...options, [exports.Kind]: 'Union', anyOf: clonedAnyOf });\n            })();\n    }\n    /** `[Json]` Creates an Unknown type */\n    Unknown(options = {}) {\n        return this.Create({ ...options, [exports.Kind]: 'Unknown' });\n    }\n    /** `[Json]` Creates a Unsafe type that will infers as the generic argument T */\n    Unsafe(options = {}) {\n        return this.Create({ ...options, [exports.Kind]: options[exports.Kind] || 'Unsafe' });\n    }\n    /** `[Json]` Intrinsic function to Uppercase LiteralString types */\n    Uppercase(schema, options = {}) {\n        return { ...Intrinsic.Map(TypeClone.Type(schema), 'Uppercase'), ...options };\n    }\n}\nexports.JsonTypeBuilder = JsonTypeBuilder;\n// --------------------------------------------------------------------------\n// JavaScriptTypeBuilder\n// --------------------------------------------------------------------------\nclass JavaScriptTypeBuilder extends JsonTypeBuilder {\n    /** `[JavaScript]` Creates a AsyncIterator type */\n    AsyncIterator(items, options = {}) {\n        return this.Create({ ...options, [exports.Kind]: 'AsyncIterator', type: 'AsyncIterator', items: TypeClone.Type(items) });\n    }\n    /** `[JavaScript]` Constructs a type by recursively unwrapping Promise types */\n    Awaited(schema, options = {}) {\n        // prettier-ignore\n        const Unwrap = (rest) => rest.length > 0 ? (() => {\n            const [L, ...R] = rest;\n            return [this.Awaited(L), ...Unwrap(R)];\n        })() : rest;\n        // prettier-ignore\n        return (TypeGuard.TIntersect(schema) ? exports.Type.Intersect(Unwrap(schema.allOf)) :\n            TypeGuard.TUnion(schema) ? exports.Type.Union(Unwrap(schema.anyOf)) :\n                TypeGuard.TPromise(schema) ? this.Awaited(schema.item) :\n                    TypeClone.Type(schema, options));\n    }\n    /** `[JavaScript]` Creates a BigInt type */\n    BigInt(options = {}) {\n        return this.Create({ ...options, [exports.Kind]: 'BigInt', type: 'bigint' });\n    }\n    /** `[JavaScript]` Extracts the ConstructorParameters from the given Constructor type */\n    ConstructorParameters(schema, options = {}) {\n        return this.Tuple([...schema.parameters], { ...options });\n    }\n    /** `[JavaScript]` Creates a Constructor type */\n    Constructor(parameters, returns, options) {\n        const [clonedParameters, clonedReturns] = [TypeClone.Rest(parameters), TypeClone.Type(returns)];\n        return this.Create({ ...options, [exports.Kind]: 'Constructor', type: 'Constructor', parameters: clonedParameters, returns: clonedReturns });\n    }\n    /** `[JavaScript]` Creates a Date type */\n    Date(options = {}) {\n        return this.Create({ ...options, [exports.Kind]: 'Date', type: 'Date' });\n    }\n    /** `[JavaScript]` Creates a Function type */\n    Function(parameters, returns, options) {\n        const [clonedParameters, clonedReturns] = [TypeClone.Rest(parameters), TypeClone.Type(returns)];\n        return this.Create({ ...options, [exports.Kind]: 'Function', type: 'Function', parameters: clonedParameters, returns: clonedReturns });\n    }\n    /** `[JavaScript]` Extracts the InstanceType from the given Constructor type */\n    InstanceType(schema, options = {}) {\n        return TypeClone.Type(schema.returns, options);\n    }\n    /** `[JavaScript]` Creates an Iterator type */\n    Iterator(items, options = {}) {\n        return this.Create({ ...options, [exports.Kind]: 'Iterator', type: 'Iterator', items: TypeClone.Type(items) });\n    }\n    /** `[JavaScript]` Extracts the Parameters from the given Function type */\n    Parameters(schema, options = {}) {\n        return this.Tuple(schema.parameters, { ...options });\n    }\n    /** `[JavaScript]` Creates a Promise type */\n    Promise(item, options = {}) {\n        return this.Create({ ...options, [exports.Kind]: 'Promise', type: 'Promise', item: TypeClone.Type(item) });\n    }\n    /** `[Extended]` Creates a String type */\n    RegExp(unresolved, options = {}) {\n        const pattern = ValueGuard.IsString(unresolved) ? unresolved : unresolved.source;\n        return this.Create({ ...options, [exports.Kind]: 'String', type: 'string', pattern });\n    }\n    /**\n     * @deprecated Use `Type.RegExp`\n     */\n    RegEx(regex, options = {}) {\n        return this.RegExp(regex, options);\n    }\n    /** `[JavaScript]` Extracts the ReturnType from the given Function type */\n    ReturnType(schema, options = {}) {\n        return TypeClone.Type(schema.returns, options);\n    }\n    /** `[JavaScript]` Creates a Symbol type */\n    Symbol(options) {\n        return this.Create({ ...options, [exports.Kind]: 'Symbol', type: 'symbol' });\n    }\n    /** `[JavaScript]` Creates a Undefined type */\n    Undefined(options = {}) {\n        return this.Create({ ...options, [exports.Kind]: 'Undefined', type: 'undefined' });\n    }\n    /** `[JavaScript]` Creates a Uint8Array type */\n    Uint8Array(options = {}) {\n        return this.Create({ ...options, [exports.Kind]: 'Uint8Array', type: 'Uint8Array' });\n    }\n    /** `[JavaScript]` Creates a Void type */\n    Void(options = {}) {\n        return this.Create({ ...options, [exports.Kind]: 'Void', type: 'void' });\n    }\n}\nexports.JavaScriptTypeBuilder = JavaScriptTypeBuilder;\n/** Json Type Builder with Static Resolution for TypeScript */\nexports.JsonType = new JsonTypeBuilder();\n/** JavaScript Type Builder with Static Resolution for TypeScript */\nexports.Type = new JavaScriptTypeBuilder();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@trezor/schema-utils/node_modules/@sinclair/typebox/typebox.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/schema-utils/node_modules/@sinclair/typebox/value/deref.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@trezor/schema-utils/node_modules/@sinclair/typebox/value/deref.js ***!
  \*****************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\n/*--------------------------------------------------------------------------\n\n@sinclair/typebox/value\n\nThe MIT License (MIT)\n\nCopyright (c) 2017-2023 Haydn Paterson (sinclair) <haydn.developer@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n---------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Deref = exports.TypeDereferenceError = void 0;\nconst typebox_1 = __webpack_require__(/*! ../typebox */ \"./node_modules/@trezor/schema-utils/node_modules/@sinclair/typebox/typebox.js\");\nclass TypeDereferenceError extends typebox_1.TypeBoxError {\n    constructor(schema) {\n        super(`Unable to dereference schema with $id '${schema.$id}'`);\n        this.schema = schema;\n    }\n}\nexports.TypeDereferenceError = TypeDereferenceError;\n/** Dereferences a schema from the references array or throws if not found */\nfunction Deref(schema, references) {\n    const index = references.findIndex((target) => target.$id === schema.$ref);\n    if (index === -1)\n        throw new TypeDereferenceError(schema);\n    return references[index];\n}\nexports.Deref = Deref;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci9zY2hlbWEtdXRpbHMvbm9kZV9tb2R1bGVzL0BzaW5jbGFpci90eXBlYm94L3ZhbHVlL2RlcmVmLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsYUFBYSxHQUFHLDRCQUE0QjtBQUM1QyxrQkFBa0IsbUJBQU8sQ0FBQyxpR0FBWTtBQUN0QztBQUNBO0FBQ0Esd0RBQXdELFdBQVc7QUFDbkU7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHRyZXpvci9zY2hlbWEtdXRpbHMvbm9kZV9tb2R1bGVzL0BzaW5jbGFpci90eXBlYm94L3ZhbHVlL2RlcmVmLmpzPzRjNWMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbkBzaW5jbGFpci90eXBlYm94L3ZhbHVlXG5cblRoZSBNSVQgTGljZW5zZSAoTUlUKVxuXG5Db3B5cmlnaHQgKGMpIDIwMTctMjAyMyBIYXlkbiBQYXRlcnNvbiAoc2luY2xhaXIpIDxoYXlkbi5kZXZlbG9wZXJAZ21haWwuY29tPlxuXG5QZXJtaXNzaW9uIGlzIGhlcmVieSBncmFudGVkLCBmcmVlIG9mIGNoYXJnZSwgdG8gYW55IHBlcnNvbiBvYnRhaW5pbmcgYSBjb3B5XG5vZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZSBcIlNvZnR3YXJlXCIpLCB0byBkZWFsXG5pbiB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nIHdpdGhvdXQgbGltaXRhdGlvbiB0aGUgcmlnaHRzXG50byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsIGRpc3RyaWJ1dGUsIHN1YmxpY2Vuc2UsIGFuZC9vciBzZWxsXG5jb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG8gcGVybWl0IHBlcnNvbnMgdG8gd2hvbSB0aGUgU29mdHdhcmUgaXNcbmZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0byB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbnM6XG5cblRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIHNoYWxsIGJlIGluY2x1ZGVkIGluXG5hbGwgY29waWVzIG9yIHN1YnN0YW50aWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS5cblxuVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEIFwiQVMgSVNcIiwgV0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lORCwgRVhQUkVTUyBPUlxuSU1QTElFRCwgSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBUTyBUSEUgV0FSUkFOVElFUyBPRiBNRVJDSEFOVEFCSUxJVFksXG5GSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBTkQgTk9OSU5GUklOR0VNRU5ULiBJTiBOTyBFVkVOVCBTSEFMTCBUSEVcbkFVVEhPUlMgT1IgQ09QWVJJR0hUIEhPTERFUlMgQkUgTElBQkxFIEZPUiBBTlkgQ0xBSU0sIERBTUFHRVMgT1IgT1RIRVJcbkxJQUJJTElUWSwgV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsIFRPUlQgT1IgT1RIRVJXSVNFLCBBUklTSU5HIEZST00sXG5PVVQgT0YgT1IgSU4gQ09OTkVDVElPTiBXSVRIIFRIRSBTT0ZUV0FSRSBPUiBUSEUgVVNFIE9SIE9USEVSIERFQUxJTkdTIElOXG5USEUgU09GVFdBUkUuXG5cbi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkRlcmVmID0gZXhwb3J0cy5UeXBlRGVyZWZlcmVuY2VFcnJvciA9IHZvaWQgMDtcbmNvbnN0IHR5cGVib3hfMSA9IHJlcXVpcmUoXCIuLi90eXBlYm94XCIpO1xuY2xhc3MgVHlwZURlcmVmZXJlbmNlRXJyb3IgZXh0ZW5kcyB0eXBlYm94XzEuVHlwZUJveEVycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihzY2hlbWEpIHtcbiAgICAgICAgc3VwZXIoYFVuYWJsZSB0byBkZXJlZmVyZW5jZSBzY2hlbWEgd2l0aCAkaWQgJyR7c2NoZW1hLiRpZH0nYCk7XG4gICAgICAgIHRoaXMuc2NoZW1hID0gc2NoZW1hO1xuICAgIH1cbn1cbmV4cG9ydHMuVHlwZURlcmVmZXJlbmNlRXJyb3IgPSBUeXBlRGVyZWZlcmVuY2VFcnJvcjtcbi8qKiBEZXJlZmVyZW5jZXMgYSBzY2hlbWEgZnJvbSB0aGUgcmVmZXJlbmNlcyBhcnJheSBvciB0aHJvd3MgaWYgbm90IGZvdW5kICovXG5mdW5jdGlvbiBEZXJlZihzY2hlbWEsIHJlZmVyZW5jZXMpIHtcbiAgICBjb25zdCBpbmRleCA9IHJlZmVyZW5jZXMuZmluZEluZGV4KCh0YXJnZXQpID0+IHRhcmdldC4kaWQgPT09IHNjaGVtYS4kcmVmKTtcbiAgICBpZiAoaW5kZXggPT09IC0xKVxuICAgICAgICB0aHJvdyBuZXcgVHlwZURlcmVmZXJlbmNlRXJyb3Ioc2NoZW1hKTtcbiAgICByZXR1cm4gcmVmZXJlbmNlc1tpbmRleF07XG59XG5leHBvcnRzLkRlcmVmID0gRGVyZWY7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@trezor/schema-utils/node_modules/@sinclair/typebox/value/deref.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/schema-utils/node_modules/@sinclair/typebox/value/guard.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@trezor/schema-utils/node_modules/@sinclair/typebox/value/guard.js ***!
  \*****************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\n/*--------------------------------------------------------------------------\n\n@sinclair/typebox/value\n\nThe MIT License (MIT)\n\nCopyright (c) 2017-2023 Haydn Paterson (sinclair) <haydn.developer@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n---------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.IsValueType = exports.IsSymbol = exports.IsFunction = exports.IsString = exports.IsBigInt = exports.IsInteger = exports.IsNumber = exports.IsBoolean = exports.IsNull = exports.IsUndefined = exports.IsArray = exports.IsObject = exports.IsPlainObject = exports.HasPropertyKey = exports.IsDate = exports.IsUint8Array = exports.IsPromise = exports.IsTypedArray = exports.IsIterator = exports.IsAsyncIterator = void 0;\n// --------------------------------------------------------------------------\n// Iterators\n// --------------------------------------------------------------------------\n/** Returns true if this value is an async iterator */\nfunction IsAsyncIterator(value) {\n    return IsObject(value) && Symbol.asyncIterator in value;\n}\nexports.IsAsyncIterator = IsAsyncIterator;\n/** Returns true if this value is an iterator */\nfunction IsIterator(value) {\n    return IsObject(value) && Symbol.iterator in value;\n}\nexports.IsIterator = IsIterator;\n// --------------------------------------------------------------------------\n// Nominal\n// --------------------------------------------------------------------------\n/** Returns true if this value is a typed array */\nfunction IsTypedArray(value) {\n    return ArrayBuffer.isView(value);\n}\nexports.IsTypedArray = IsTypedArray;\n/** Returns true if this value is a Promise */\nfunction IsPromise(value) {\n    return value instanceof Promise;\n}\nexports.IsPromise = IsPromise;\n/** Returns true if the value is a Uint8Array */\nfunction IsUint8Array(value) {\n    return value instanceof Uint8Array;\n}\nexports.IsUint8Array = IsUint8Array;\n/** Returns true if this value is a Date */\nfunction IsDate(value) {\n    return value instanceof Date && Number.isFinite(value.getTime());\n}\nexports.IsDate = IsDate;\n// --------------------------------------------------------------------------\n// Standard\n// --------------------------------------------------------------------------\n/** Returns true if this value has this property key */\nfunction HasPropertyKey(value, key) {\n    return key in value;\n}\nexports.HasPropertyKey = HasPropertyKey;\n/** Returns true if this object is not an instance of any other type */\nfunction IsPlainObject(value) {\n    return IsObject(value) && IsFunction(value.constructor) && value.constructor.name === 'Object';\n}\nexports.IsPlainObject = IsPlainObject;\n/** Returns true of this value is an object type */\nfunction IsObject(value) {\n    return value !== null && typeof value === 'object';\n}\nexports.IsObject = IsObject;\n/** Returns true if this value is an array, but not a typed array */\nfunction IsArray(value) {\n    return Array.isArray(value) && !ArrayBuffer.isView(value);\n}\nexports.IsArray = IsArray;\n/** Returns true if this value is an undefined */\nfunction IsUndefined(value) {\n    return value === undefined;\n}\nexports.IsUndefined = IsUndefined;\n/** Returns true if this value is an null */\nfunction IsNull(value) {\n    return value === null;\n}\nexports.IsNull = IsNull;\n/** Returns true if this value is an boolean */\nfunction IsBoolean(value) {\n    return typeof value === 'boolean';\n}\nexports.IsBoolean = IsBoolean;\n/** Returns true if this value is an number */\nfunction IsNumber(value) {\n    return typeof value === 'number';\n}\nexports.IsNumber = IsNumber;\n/** Returns true if this value is an integer */\nfunction IsInteger(value) {\n    return IsNumber(value) && Number.isInteger(value);\n}\nexports.IsInteger = IsInteger;\n/** Returns true if this value is bigint */\nfunction IsBigInt(value) {\n    return typeof value === 'bigint';\n}\nexports.IsBigInt = IsBigInt;\n/** Returns true if this value is string */\nfunction IsString(value) {\n    return typeof value === 'string';\n}\nexports.IsString = IsString;\n/** Returns true if this value is a function */\nfunction IsFunction(value) {\n    return typeof value === 'function';\n}\nexports.IsFunction = IsFunction;\n/** Returns true if this value is a symbol */\nfunction IsSymbol(value) {\n    return typeof value === 'symbol';\n}\nexports.IsSymbol = IsSymbol;\n/** Returns true if this value is a value type such as number, string, boolean */\nfunction IsValueType(value) {\n    // prettier-ignore\n    return (IsBigInt(value) ||\n        IsBoolean(value) ||\n        IsNull(value) ||\n        IsNumber(value) ||\n        IsString(value) ||\n        IsSymbol(value) ||\n        IsUndefined(value));\n}\nexports.IsValueType = IsValueType;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@trezor/schema-utils/node_modules/@sinclair/typebox/value/guard.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/schema-utils/node_modules/@sinclair/typebox/value/hash.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@trezor/schema-utils/node_modules/@sinclair/typebox/value/hash.js ***!
  \****************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\n/*--------------------------------------------------------------------------\n\n@sinclair/typebox/value\n\nThe MIT License (MIT)\n\nCopyright (c) 2017-2023 Haydn Paterson (sinclair) <haydn.developer@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n---------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Hash = exports.ByteMarker = exports.ValueHashError = void 0;\nconst guard_1 = __webpack_require__(/*! ./guard */ \"./node_modules/@trezor/schema-utils/node_modules/@sinclair/typebox/value/guard.js\");\n// --------------------------------------------------------------------------\n// Errors\n// --------------------------------------------------------------------------\nclass ValueHashError extends Error {\n    constructor(value) {\n        super(`Unable to hash value`);\n        this.value = value;\n    }\n}\nexports.ValueHashError = ValueHashError;\n// --------------------------------------------------------------------------\n// ByteMarker\n// --------------------------------------------------------------------------\nvar ByteMarker;\n(function (ByteMarker) {\n    ByteMarker[ByteMarker[\"Undefined\"] = 0] = \"Undefined\";\n    ByteMarker[ByteMarker[\"Null\"] = 1] = \"Null\";\n    ByteMarker[ByteMarker[\"Boolean\"] = 2] = \"Boolean\";\n    ByteMarker[ByteMarker[\"Number\"] = 3] = \"Number\";\n    ByteMarker[ByteMarker[\"String\"] = 4] = \"String\";\n    ByteMarker[ByteMarker[\"Object\"] = 5] = \"Object\";\n    ByteMarker[ByteMarker[\"Array\"] = 6] = \"Array\";\n    ByteMarker[ByteMarker[\"Date\"] = 7] = \"Date\";\n    ByteMarker[ByteMarker[\"Uint8Array\"] = 8] = \"Uint8Array\";\n    ByteMarker[ByteMarker[\"Symbol\"] = 9] = \"Symbol\";\n    ByteMarker[ByteMarker[\"BigInt\"] = 10] = \"BigInt\";\n})(ByteMarker || (exports.ByteMarker = ByteMarker = {}));\n// --------------------------------------------------------------------------\n// State\n// --------------------------------------------------------------------------\nlet Accumulator = BigInt('14695981039346656037');\nconst [Prime, Size] = [BigInt('1099511628211'), BigInt('2') ** BigInt('64')];\nconst Bytes = Array.from({ length: 256 }).map((_, i) => BigInt(i));\nconst F64 = new Float64Array(1);\nconst F64In = new DataView(F64.buffer);\nconst F64Out = new Uint8Array(F64.buffer);\n// --------------------------------------------------------------------------\n// NumberToBytes\n// --------------------------------------------------------------------------\nfunction* NumberToBytes(value) {\n    const byteCount = value === 0 ? 1 : Math.ceil(Math.floor(Math.log2(value) + 1) / 8);\n    for (let i = 0; i < byteCount; i++) {\n        yield (value >> (8 * (byteCount - 1 - i))) & 0xff;\n    }\n}\n// --------------------------------------------------------------------------\n// Hashing Functions\n// --------------------------------------------------------------------------\nfunction ArrayType(value) {\n    FNV1A64(ByteMarker.Array);\n    for (const item of value) {\n        Visit(item);\n    }\n}\nfunction BooleanType(value) {\n    FNV1A64(ByteMarker.Boolean);\n    FNV1A64(value ? 1 : 0);\n}\nfunction BigIntType(value) {\n    FNV1A64(ByteMarker.BigInt);\n    F64In.setBigInt64(0, value);\n    for (const byte of F64Out) {\n        FNV1A64(byte);\n    }\n}\nfunction DateType(value) {\n    FNV1A64(ByteMarker.Date);\n    Visit(value.getTime());\n}\nfunction NullType(value) {\n    FNV1A64(ByteMarker.Null);\n}\nfunction NumberType(value) {\n    FNV1A64(ByteMarker.Number);\n    F64In.setFloat64(0, value);\n    for (const byte of F64Out) {\n        FNV1A64(byte);\n    }\n}\nfunction ObjectType(value) {\n    FNV1A64(ByteMarker.Object);\n    for (const key of globalThis.Object.keys(value).sort()) {\n        Visit(key);\n        Visit(value[key]);\n    }\n}\nfunction StringType(value) {\n    FNV1A64(ByteMarker.String);\n    for (let i = 0; i < value.length; i++) {\n        for (const byte of NumberToBytes(value.charCodeAt(i))) {\n            FNV1A64(byte);\n        }\n    }\n}\nfunction SymbolType(value) {\n    FNV1A64(ByteMarker.Symbol);\n    Visit(value.description);\n}\nfunction Uint8ArrayType(value) {\n    FNV1A64(ByteMarker.Uint8Array);\n    for (let i = 0; i < value.length; i++) {\n        FNV1A64(value[i]);\n    }\n}\nfunction UndefinedType(value) {\n    return FNV1A64(ByteMarker.Undefined);\n}\nfunction Visit(value) {\n    if ((0, guard_1.IsArray)(value))\n        return ArrayType(value);\n    if ((0, guard_1.IsBoolean)(value))\n        return BooleanType(value);\n    if ((0, guard_1.IsBigInt)(value))\n        return BigIntType(value);\n    if ((0, guard_1.IsDate)(value))\n        return DateType(value);\n    if ((0, guard_1.IsNull)(value))\n        return NullType(value);\n    if ((0, guard_1.IsNumber)(value))\n        return NumberType(value);\n    if ((0, guard_1.IsPlainObject)(value))\n        return ObjectType(value);\n    if ((0, guard_1.IsString)(value))\n        return StringType(value);\n    if ((0, guard_1.IsSymbol)(value))\n        return SymbolType(value);\n    if ((0, guard_1.IsUint8Array)(value))\n        return Uint8ArrayType(value);\n    if ((0, guard_1.IsUndefined)(value))\n        return UndefinedType(value);\n    throw new ValueHashError(value);\n}\nfunction FNV1A64(byte) {\n    Accumulator = Accumulator ^ Bytes[byte];\n    Accumulator = (Accumulator * Prime) % Size;\n}\n// --------------------------------------------------------------------------\n// Hash\n// --------------------------------------------------------------------------\n/** Creates a FNV1A-64 non cryptographic hash of the given value */\nfunction Hash(value) {\n    Accumulator = BigInt('14695981039346656037');\n    Visit(value);\n    return Accumulator;\n}\nexports.Hash = Hash;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@trezor/schema-utils/node_modules/@sinclair/typebox/value/hash.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/transport/lib/constants.js":
/*!*********************************************************!*\
  !*** ./node_modules/@trezor/transport/lib/constants.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.TRANSPORT = exports.ACTION_TIMEOUT = exports.TREZOR_USB_DESCRIPTORS = exports.T1_HID_VENDOR = exports.ENDPOINT_ID = exports.INTERFACE_ID = exports.CONFIGURATION_ID = void 0;\nexports.CONFIGURATION_ID = 1;\nexports.INTERFACE_ID = 0;\nexports.ENDPOINT_ID = 1;\nexports.T1_HID_VENDOR = 0x534c;\nexports.TREZOR_USB_DESCRIPTORS = [\n    { vendorId: 0x534c, productId: 0x0001 },\n    { vendorId: 0x1209, productId: 0x53c0 },\n    { vendorId: 0x1209, productId: 0x53c1 },\n];\nexports.ACTION_TIMEOUT = 10000;\nexports.TRANSPORT = {\n    START: 'transport-start',\n    ERROR: 'transport-error',\n    UPDATE: 'transport-update',\n    DISABLE_WEBUSB: 'transport-disable_webusb',\n    REQUEST_DEVICE: 'transport-request_device',\n};\n//# sourceMappingURL=constants.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci90cmFuc3BvcnQvbGliL2NvbnN0YW50cy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxpQkFBaUIsR0FBRyxzQkFBc0IsR0FBRyw4QkFBOEIsR0FBRyxxQkFBcUIsR0FBRyxtQkFBbUIsR0FBRyxvQkFBb0IsR0FBRyx3QkFBd0I7QUFDM0ssd0JBQXdCO0FBQ3hCLG9CQUFvQjtBQUNwQixtQkFBbUI7QUFDbkIscUJBQXFCO0FBQ3JCLDhCQUE4QjtBQUM5QixNQUFNLHFDQUFxQztBQUMzQyxNQUFNLHFDQUFxQztBQUMzQyxNQUFNLHFDQUFxQztBQUMzQztBQUNBLHNCQUFzQjtBQUN0QixpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0B0cmV6b3IvdHJhbnNwb3J0L2xpYi9jb25zdGFudHMuanM/NjgyZiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuVFJBTlNQT1JUID0gZXhwb3J0cy5BQ1RJT05fVElNRU9VVCA9IGV4cG9ydHMuVFJFWk9SX1VTQl9ERVNDUklQVE9SUyA9IGV4cG9ydHMuVDFfSElEX1ZFTkRPUiA9IGV4cG9ydHMuRU5EUE9JTlRfSUQgPSBleHBvcnRzLklOVEVSRkFDRV9JRCA9IGV4cG9ydHMuQ09ORklHVVJBVElPTl9JRCA9IHZvaWQgMDtcbmV4cG9ydHMuQ09ORklHVVJBVElPTl9JRCA9IDE7XG5leHBvcnRzLklOVEVSRkFDRV9JRCA9IDA7XG5leHBvcnRzLkVORFBPSU5UX0lEID0gMTtcbmV4cG9ydHMuVDFfSElEX1ZFTkRPUiA9IDB4NTM0YztcbmV4cG9ydHMuVFJFWk9SX1VTQl9ERVNDUklQVE9SUyA9IFtcbiAgICB7IHZlbmRvcklkOiAweDUzNGMsIHByb2R1Y3RJZDogMHgwMDAxIH0sXG4gICAgeyB2ZW5kb3JJZDogMHgxMjA5LCBwcm9kdWN0SWQ6IDB4NTNjMCB9LFxuICAgIHsgdmVuZG9ySWQ6IDB4MTIwOSwgcHJvZHVjdElkOiAweDUzYzEgfSxcbl07XG5leHBvcnRzLkFDVElPTl9USU1FT1VUID0gMTAwMDA7XG5leHBvcnRzLlRSQU5TUE9SVCA9IHtcbiAgICBTVEFSVDogJ3RyYW5zcG9ydC1zdGFydCcsXG4gICAgRVJST1I6ICd0cmFuc3BvcnQtZXJyb3InLFxuICAgIFVQREFURTogJ3RyYW5zcG9ydC11cGRhdGUnLFxuICAgIERJU0FCTEVfV0VCVVNCOiAndHJhbnNwb3J0LWRpc2FibGVfd2VidXNiJyxcbiAgICBSRVFVRVNUX0RFVklDRTogJ3RyYW5zcG9ydC1yZXF1ZXN0X2RldmljZScsXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y29uc3RhbnRzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@trezor/transport/lib/constants.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/utils/lib/createDeferred.js":
/*!**********************************************************!*\
  !*** ./node_modules/@trezor/utils/lib/createDeferred.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.createDeferred = void 0;\nconst createDeferred = (id) => {\n    let localResolve = () => { };\n    let localReject = () => { };\n    const promise = new Promise((resolve, reject) => {\n        localResolve = resolve;\n        localReject = reject;\n    });\n    return {\n        id,\n        resolve: localResolve,\n        reject: localReject,\n        promise,\n    };\n};\nexports.createDeferred = createDeferred;\n//# sourceMappingURL=createDeferred.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci91dGlscy9saWIvY3JlYXRlRGVmZXJyZWQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsc0JBQXNCO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQjtBQUN0QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHRyZXpvci91dGlscy9saWIvY3JlYXRlRGVmZXJyZWQuanM/NTQwZiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuY3JlYXRlRGVmZXJyZWQgPSB2b2lkIDA7XG5jb25zdCBjcmVhdGVEZWZlcnJlZCA9IChpZCkgPT4ge1xuICAgIGxldCBsb2NhbFJlc29sdmUgPSAoKSA9PiB7IH07XG4gICAgbGV0IGxvY2FsUmVqZWN0ID0gKCkgPT4geyB9O1xuICAgIGNvbnN0IHByb21pc2UgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICAgIGxvY2FsUmVzb2x2ZSA9IHJlc29sdmU7XG4gICAgICAgIGxvY2FsUmVqZWN0ID0gcmVqZWN0O1xuICAgIH0pO1xuICAgIHJldHVybiB7XG4gICAgICAgIGlkLFxuICAgICAgICByZXNvbHZlOiBsb2NhbFJlc29sdmUsXG4gICAgICAgIHJlamVjdDogbG9jYWxSZWplY3QsXG4gICAgICAgIHByb21pc2UsXG4gICAgfTtcbn07XG5leHBvcnRzLmNyZWF0ZURlZmVycmVkID0gY3JlYXRlRGVmZXJyZWQ7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jcmVhdGVEZWZlcnJlZC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@trezor/utils/lib/createDeferred.js\n"));

/***/ }),

/***/ "./node_modules/@trezor/utils/lib/urlToOnion.js":
/*!******************************************************!*\
  !*** ./node_modules/@trezor/utils/lib/urlToOnion.js ***!
  \******************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.urlToOnion = void 0;\nconst urlToOnion = (url, onionDomains) => {\n    var _a;\n    const [, protocol, subdomain, domain, rest] = (_a = url.match(/^(http|ws)s?:\\/\\/([^:/]+\\.)?([^/.]+\\.[^/.]+)(\\/.*)?$/i)) !== null && _a !== void 0 ? _a : [];\n    if (!domain || !onionDomains[domain])\n        return;\n    return `${protocol}://${subdomain !== null && subdomain !== void 0 ? subdomain : ''}${onionDomains[domain]}${rest !== null && rest !== void 0 ? rest : ''}`;\n};\nexports.urlToOnion = urlToOnion;\n//# sourceMappingURL=urlToOnion.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRyZXpvci91dGlscy9saWIvdXJsVG9Pbmlvbi5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWMsU0FBUyxLQUFLLDREQUE0RCxFQUFFLHFCQUFxQixFQUFFLDZDQUE2QztBQUM5SjtBQUNBLGtCQUFrQjtBQUNsQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHRyZXpvci91dGlscy9saWIvdXJsVG9Pbmlvbi5qcz82MGQzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy51cmxUb09uaW9uID0gdm9pZCAwO1xuY29uc3QgdXJsVG9PbmlvbiA9ICh1cmwsIG9uaW9uRG9tYWlucykgPT4ge1xuICAgIHZhciBfYTtcbiAgICBjb25zdCBbLCBwcm90b2NvbCwgc3ViZG9tYWluLCBkb21haW4sIHJlc3RdID0gKF9hID0gdXJsLm1hdGNoKC9eKGh0dHB8d3Mpcz86XFwvXFwvKFteOi9dK1xcLik/KFteLy5dK1xcLlteLy5dKykoXFwvLiopPyQvaSkpICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IFtdO1xuICAgIGlmICghZG9tYWluIHx8ICFvbmlvbkRvbWFpbnNbZG9tYWluXSlcbiAgICAgICAgcmV0dXJuO1xuICAgIHJldHVybiBgJHtwcm90b2NvbH06Ly8ke3N1YmRvbWFpbiAhPT0gbnVsbCAmJiBzdWJkb21haW4gIT09IHZvaWQgMCA/IHN1YmRvbWFpbiA6ICcnfSR7b25pb25Eb21haW5zW2RvbWFpbl19JHtyZXN0ICE9PSBudWxsICYmIHJlc3QgIT09IHZvaWQgMCA/IHJlc3QgOiAnJ31gO1xufTtcbmV4cG9ydHMudXJsVG9PbmlvbiA9IHVybFRvT25pb247XG4vLyMgc291cmNlTWFwcGluZ1VSTD11cmxUb09uaW9uLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@trezor/utils/lib/urlToOnion.js\n"));

/***/ }),

/***/ "./node_modules/ts-mixer/dist/esm/index.js":
/*!*************************************************!*\
  !*** ./node_modules/ts-mixer/dist/esm/index.js ***!
  \*************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Mixin: function() { return /* binding */ Mixin; },\n/* harmony export */   decorate: function() { return /* binding */ decorate; },\n/* harmony export */   hasMixin: function() { return /* binding */ hasMixin; },\n/* harmony export */   mix: function() { return /* binding */ mix; },\n/* harmony export */   settings: function() { return /* binding */ settings; }\n/* harmony export */ });\n/**\n * Utility function that works like `Object.apply`, but copies getters and setters properly as well.  Additionally gives\n * the option to exclude properties by name.\n */\nconst copyProps = (dest, src, exclude = []) => {\n    const props = Object.getOwnPropertyDescriptors(src);\n    for (let prop of exclude)\n        delete props[prop];\n    Object.defineProperties(dest, props);\n};\n/**\n * Returns the full chain of prototypes up until Object.prototype given a starting object.  The order of prototypes will\n * be closest to farthest in the chain.\n */\nconst protoChain = (obj, currentChain = [obj]) => {\n    const proto = Object.getPrototypeOf(obj);\n    if (proto === null)\n        return currentChain;\n    return protoChain(proto, [...currentChain, proto]);\n};\n/**\n * Identifies the nearest ancestor common to all the given objects in their prototype chains.  For most unrelated\n * objects, this function should return Object.prototype.\n */\nconst nearestCommonProto = (...objs) => {\n    if (objs.length === 0)\n        return undefined;\n    let commonProto = undefined;\n    const protoChains = objs.map(obj => protoChain(obj));\n    while (protoChains.every(protoChain => protoChain.length > 0)) {\n        const protos = protoChains.map(protoChain => protoChain.pop());\n        const potentialCommonProto = protos[0];\n        if (protos.every(proto => proto === potentialCommonProto))\n            commonProto = potentialCommonProto;\n        else\n            break;\n    }\n    return commonProto;\n};\n/**\n * Creates a new prototype object that is a mixture of the given prototypes.  The mixing is achieved by first\n * identifying the nearest common ancestor and using it as the prototype for a new object.  Then all properties/methods\n * downstream of this prototype (ONLY downstream) are copied into the new object.\n *\n * The resulting prototype is more performant than softMixProtos(...), as well as ES5 compatible.  However, it's not as\n * flexible as updates to the source prototypes aren't captured by the mixed result.  See softMixProtos for why you may\n * want to use that instead.\n */\nconst hardMixProtos = (ingredients, constructor, exclude = []) => {\n    var _a;\n    const base = (_a = nearestCommonProto(...ingredients)) !== null && _a !== void 0 ? _a : Object.prototype;\n    const mixedProto = Object.create(base);\n    // Keeps track of prototypes we've already visited to avoid copying the same properties multiple times.  We init the\n    // list with the proto chain below the nearest common ancestor because we don't want any of those methods mixed in\n    // when they will already be accessible via prototype access.\n    const visitedProtos = protoChain(base);\n    for (let prototype of ingredients) {\n        let protos = protoChain(prototype);\n        // Apply the prototype chain in reverse order so that old methods don't override newer ones.\n        for (let i = protos.length - 1; i >= 0; i--) {\n            let newProto = protos[i];\n            if (visitedProtos.indexOf(newProto) === -1) {\n                copyProps(mixedProto, newProto, ['constructor', ...exclude]);\n                visitedProtos.push(newProto);\n            }\n        }\n    }\n    mixedProto.constructor = constructor;\n    return mixedProto;\n};\nconst unique = (arr) => arr.filter((e, i) => arr.indexOf(e) == i);\n\n/**\n * Finds the ingredient with the given prop, searching in reverse order and breadth-first if searching ingredient\n * prototypes is required.\n */\nconst getIngredientWithProp = (prop, ingredients) => {\n    const protoChains = ingredients.map(ingredient => protoChain(ingredient));\n    // since we search breadth-first, we need to keep track of our depth in the prototype chains\n    let protoDepth = 0;\n    // not all prototype chains are the same depth, so this remains true as long as at least one of the ingredients'\n    // prototype chains has an object at this depth\n    let protosAreLeftToSearch = true;\n    while (protosAreLeftToSearch) {\n        // with the start of each horizontal slice, we assume this is the one that's deeper than any of the proto chains\n        protosAreLeftToSearch = false;\n        // scan through the ingredients right to left\n        for (let i = ingredients.length - 1; i >= 0; i--) {\n            const searchTarget = protoChains[i][protoDepth];\n            if (searchTarget !== undefined && searchTarget !== null) {\n                // if we find something, this is proof that this horizontal slice potentially more objects to search\n                protosAreLeftToSearch = true;\n                // eureka, we found it\n                if (Object.getOwnPropertyDescriptor(searchTarget, prop) != undefined) {\n                    return protoChains[i][0];\n                }\n            }\n        }\n        protoDepth++;\n    }\n    return undefined;\n};\n/**\n * \"Mixes\" ingredients by wrapping them in a Proxy.  The optional prototype argument allows the mixed object to sit\n * downstream of an existing prototype chain.  Note that \"properties\" cannot be added, deleted, or modified.\n */\nconst proxyMix = (ingredients, prototype = Object.prototype) => new Proxy({}, {\n    getPrototypeOf() {\n        return prototype;\n    },\n    setPrototypeOf() {\n        throw Error('Cannot set prototype of Proxies created by ts-mixer');\n    },\n    getOwnPropertyDescriptor(_, prop) {\n        return Object.getOwnPropertyDescriptor(getIngredientWithProp(prop, ingredients) || {}, prop);\n    },\n    defineProperty() {\n        throw new Error('Cannot define new properties on Proxies created by ts-mixer');\n    },\n    has(_, prop) {\n        return getIngredientWithProp(prop, ingredients) !== undefined || prototype[prop] !== undefined;\n    },\n    get(_, prop) {\n        return (getIngredientWithProp(prop, ingredients) || prototype)[prop];\n    },\n    set(_, prop, val) {\n        const ingredientWithProp = getIngredientWithProp(prop, ingredients);\n        if (ingredientWithProp === undefined)\n            throw new Error('Cannot set new properties on Proxies created by ts-mixer');\n        ingredientWithProp[prop] = val;\n        return true;\n    },\n    deleteProperty() {\n        throw new Error('Cannot delete properties on Proxies created by ts-mixer');\n    },\n    ownKeys() {\n        return ingredients\n            .map(Object.getOwnPropertyNames)\n            .reduce((prev, curr) => curr.concat(prev.filter(key => curr.indexOf(key) < 0)));\n    },\n});\n/**\n * Creates a new proxy-prototype object that is a \"soft\" mixture of the given prototypes.  The mixing is achieved by\n * proxying all property access to the ingredients.  This is not ES5 compatible and less performant.  However, any\n * changes made to the source prototypes will be reflected in the proxy-prototype, which may be desirable.\n */\nconst softMixProtos = (ingredients, constructor) => proxyMix([...ingredients, { constructor }]);\n\nconst settings = {\n    initFunction: null,\n    staticsStrategy: 'copy',\n    prototypeStrategy: 'copy',\n    decoratorInheritance: 'deep',\n};\n\n// Keeps track of constituent classes for every mixin class created by ts-mixer.\nconst mixins = new Map();\nconst getMixinsForClass = (clazz) => mixins.get(clazz);\nconst registerMixins = (mixedClass, constituents) => mixins.set(mixedClass, constituents);\nconst hasMixin = (instance, mixin) => {\n    if (instance instanceof mixin)\n        return true;\n    const constructor = instance.constructor;\n    const visited = new Set();\n    let frontier = new Set();\n    frontier.add(constructor);\n    while (frontier.size > 0) {\n        // check if the frontier has the mixin we're looking for.  if not, we can say we visited every item in the frontier\n        if (frontier.has(mixin))\n            return true;\n        frontier.forEach(item => visited.add(item));\n        // build a new frontier based on the associated mixin classes and prototype chains of each frontier item\n        const newFrontier = new Set();\n        frontier.forEach(item => {\n            var _a;\n            const itemConstituents = (_a = mixins.get(item)) !== null && _a !== void 0 ? _a : protoChain(item.prototype).map(proto => proto.constructor).filter(item => item !== null);\n            if (itemConstituents)\n                itemConstituents.forEach(constituent => {\n                    if (!visited.has(constituent) && !frontier.has(constituent))\n                        newFrontier.add(constituent);\n                });\n        });\n        // we have a new frontier, now search again\n        frontier = newFrontier;\n    }\n    // if we get here, we couldn't find the mixin anywhere in the prototype chain or associated mixin classes\n    return false;\n};\n\nconst mergeObjectsOfDecorators = (o1, o2) => {\n    var _a, _b;\n    const allKeys = unique([...Object.getOwnPropertyNames(o1), ...Object.getOwnPropertyNames(o2)]);\n    const mergedObject = {};\n    for (let key of allKeys)\n        mergedObject[key] = unique([...((_a = o1 === null || o1 === void 0 ? void 0 : o1[key]) !== null && _a !== void 0 ? _a : []), ...((_b = o2 === null || o2 === void 0 ? void 0 : o2[key]) !== null && _b !== void 0 ? _b : [])]);\n    return mergedObject;\n};\nconst mergePropertyAndMethodDecorators = (d1, d2) => {\n    var _a, _b, _c, _d;\n    return ({\n        property: mergeObjectsOfDecorators((_a = d1 === null || d1 === void 0 ? void 0 : d1.property) !== null && _a !== void 0 ? _a : {}, (_b = d2 === null || d2 === void 0 ? void 0 : d2.property) !== null && _b !== void 0 ? _b : {}),\n        method: mergeObjectsOfDecorators((_c = d1 === null || d1 === void 0 ? void 0 : d1.method) !== null && _c !== void 0 ? _c : {}, (_d = d2 === null || d2 === void 0 ? void 0 : d2.method) !== null && _d !== void 0 ? _d : {}),\n    });\n};\nconst mergeDecorators = (d1, d2) => {\n    var _a, _b, _c, _d, _e, _f;\n    return ({\n        class: unique([...(_a = d1 === null || d1 === void 0 ? void 0 : d1.class) !== null && _a !== void 0 ? _a : [], ...(_b = d2 === null || d2 === void 0 ? void 0 : d2.class) !== null && _b !== void 0 ? _b : []]),\n        static: mergePropertyAndMethodDecorators((_c = d1 === null || d1 === void 0 ? void 0 : d1.static) !== null && _c !== void 0 ? _c : {}, (_d = d2 === null || d2 === void 0 ? void 0 : d2.static) !== null && _d !== void 0 ? _d : {}),\n        instance: mergePropertyAndMethodDecorators((_e = d1 === null || d1 === void 0 ? void 0 : d1.instance) !== null && _e !== void 0 ? _e : {}, (_f = d2 === null || d2 === void 0 ? void 0 : d2.instance) !== null && _f !== void 0 ? _f : {}),\n    });\n};\nconst decorators = new Map();\nconst findAllConstituentClasses = (...classes) => {\n    var _a;\n    const allClasses = new Set();\n    const frontier = new Set([...classes]);\n    while (frontier.size > 0) {\n        for (let clazz of frontier) {\n            const protoChainClasses = protoChain(clazz.prototype).map(proto => proto.constructor);\n            const mixinClasses = (_a = getMixinsForClass(clazz)) !== null && _a !== void 0 ? _a : [];\n            const potentiallyNewClasses = [...protoChainClasses, ...mixinClasses];\n            const newClasses = potentiallyNewClasses.filter(c => !allClasses.has(c));\n            for (let newClass of newClasses)\n                frontier.add(newClass);\n            allClasses.add(clazz);\n            frontier.delete(clazz);\n        }\n    }\n    return [...allClasses];\n};\nconst deepDecoratorSearch = (...classes) => {\n    const decoratorsForClassChain = findAllConstituentClasses(...classes)\n        .map(clazz => decorators.get(clazz))\n        .filter(decorators => !!decorators);\n    if (decoratorsForClassChain.length == 0)\n        return {};\n    if (decoratorsForClassChain.length == 1)\n        return decoratorsForClassChain[0];\n    return decoratorsForClassChain.reduce((d1, d2) => mergeDecorators(d1, d2));\n};\nconst directDecoratorSearch = (...classes) => {\n    const classDecorators = classes.map(clazz => getDecoratorsForClass(clazz));\n    if (classDecorators.length === 0)\n        return {};\n    if (classDecorators.length === 1)\n        return classDecorators[0];\n    return classDecorators.reduce((d1, d2) => mergeDecorators(d1, d2));\n};\nconst getDecoratorsForClass = (clazz) => {\n    let decoratorsForClass = decorators.get(clazz);\n    if (!decoratorsForClass) {\n        decoratorsForClass = {};\n        decorators.set(clazz, decoratorsForClass);\n    }\n    return decoratorsForClass;\n};\nconst decorateClass = (decorator) => ((clazz) => {\n    const decoratorsForClass = getDecoratorsForClass(clazz);\n    let classDecorators = decoratorsForClass.class;\n    if (!classDecorators) {\n        classDecorators = [];\n        decoratorsForClass.class = classDecorators;\n    }\n    classDecorators.push(decorator);\n    return decorator(clazz);\n});\nconst decorateMember = (decorator) => ((object, key, ...otherArgs) => {\n    var _a, _b, _c;\n    const decoratorTargetType = typeof object === 'function' ? 'static' : 'instance';\n    const decoratorType = typeof object[key] === 'function' ? 'method' : 'property';\n    const clazz = decoratorTargetType === 'static' ? object : object.constructor;\n    const decoratorsForClass = getDecoratorsForClass(clazz);\n    const decoratorsForTargetType = (_a = decoratorsForClass === null || decoratorsForClass === void 0 ? void 0 : decoratorsForClass[decoratorTargetType]) !== null && _a !== void 0 ? _a : {};\n    decoratorsForClass[decoratorTargetType] = decoratorsForTargetType;\n    let decoratorsForType = (_b = decoratorsForTargetType === null || decoratorsForTargetType === void 0 ? void 0 : decoratorsForTargetType[decoratorType]) !== null && _b !== void 0 ? _b : {};\n    decoratorsForTargetType[decoratorType] = decoratorsForType;\n    let decoratorsForKey = (_c = decoratorsForType === null || decoratorsForType === void 0 ? void 0 : decoratorsForType[key]) !== null && _c !== void 0 ? _c : [];\n    decoratorsForType[key] = decoratorsForKey;\n    // @ts-ignore: array is type `A[] | B[]` and item is type `A | B`, so technically a type error, but it's fine\n    decoratorsForKey.push(decorator);\n    // @ts-ignore\n    return decorator(object, key, ...otherArgs);\n});\nconst decorate = (decorator) => ((...args) => {\n    if (args.length === 1)\n        return decorateClass(decorator)(args[0]);\n    return decorateMember(decorator)(...args);\n});\n\nfunction Mixin(...constructors) {\n    var _a, _b, _c;\n    const prototypes = constructors.map(constructor => constructor.prototype);\n    // Here we gather up the init functions of the ingredient prototypes, combine them into one init function, and\n    // attach it to the mixed class prototype.  The reason we do this is because we want the init functions to mix\n    // similarly to constructors -- not methods, which simply override each other.\n    const initFunctionName = settings.initFunction;\n    if (initFunctionName !== null) {\n        const initFunctions = prototypes\n            .map(proto => proto[initFunctionName])\n            .filter(func => typeof func === 'function');\n        const combinedInitFunction = function (...args) {\n            for (let initFunction of initFunctions)\n                initFunction.apply(this, args);\n        };\n        const extraProto = { [initFunctionName]: combinedInitFunction };\n        prototypes.push(extraProto);\n    }\n    function MixedClass(...args) {\n        for (const constructor of constructors)\n            // @ts-ignore: potentially abstract class\n            copyProps(this, new constructor(...args));\n        if (initFunctionName !== null && typeof this[initFunctionName] === 'function')\n            this[initFunctionName].apply(this, args);\n    }\n    MixedClass.prototype = settings.prototypeStrategy === 'copy'\n        ? hardMixProtos(prototypes, MixedClass)\n        : softMixProtos(prototypes, MixedClass);\n    Object.setPrototypeOf(MixedClass, settings.staticsStrategy === 'copy'\n        ? hardMixProtos(constructors, null, ['prototype'])\n        : proxyMix(constructors, Function.prototype));\n    let DecoratedMixedClass = MixedClass;\n    if (settings.decoratorInheritance !== 'none') {\n        const classDecorators = settings.decoratorInheritance === 'deep'\n            ? deepDecoratorSearch(...constructors)\n            : directDecoratorSearch(...constructors);\n        for (let decorator of (_a = classDecorators === null || classDecorators === void 0 ? void 0 : classDecorators.class) !== null && _a !== void 0 ? _a : []) {\n            const result = decorator(DecoratedMixedClass);\n            if (result) {\n                DecoratedMixedClass = result;\n            }\n        }\n        applyPropAndMethodDecorators((_b = classDecorators === null || classDecorators === void 0 ? void 0 : classDecorators.static) !== null && _b !== void 0 ? _b : {}, DecoratedMixedClass);\n        applyPropAndMethodDecorators((_c = classDecorators === null || classDecorators === void 0 ? void 0 : classDecorators.instance) !== null && _c !== void 0 ? _c : {}, DecoratedMixedClass.prototype);\n    }\n    registerMixins(DecoratedMixedClass, constructors);\n    return DecoratedMixedClass;\n}\nconst applyPropAndMethodDecorators = (propAndMethodDecorators, target) => {\n    const propDecorators = propAndMethodDecorators.property;\n    const methodDecorators = propAndMethodDecorators.method;\n    if (propDecorators)\n        for (let key in propDecorators)\n            for (let decorator of propDecorators[key])\n                decorator(target, key);\n    if (methodDecorators)\n        for (let key in methodDecorators)\n            for (let decorator of methodDecorators[key])\n                decorator(target, key, Object.getOwnPropertyDescriptor(target, key));\n};\n/**\n * A decorator version of the `Mixin` function.  You'll want to use this instead of `Mixin` for mixing generic classes.\n */\nconst mix = (...ingredients) => decoratedClass => {\n    // @ts-ignore\n    const mixedClass = Mixin(...ingredients.concat([decoratedClass]));\n    Object.defineProperty(mixedClass, 'name', {\n        value: decoratedClass.name,\n        writable: false,\n    });\n    return mixedClass;\n};\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/ts-mixer/dist/esm/index.js\n"));

/***/ })

}]);